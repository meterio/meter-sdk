// Code generated by go-bindata. DO NOT EDIT.
// sources:
// compiled/Executor.abi
// compiled/Executor.bin
// compiled/Executor.bin-runtime
// compiled/Extension.abi
// compiled/Extension.bin
// compiled/Extension.bin-runtime
// compiled/ExtensionNative.abi
// compiled/ExtensionNative.bin
// compiled/ExtensionNative.bin-runtime
// compiled/IMeterNative.abi
// compiled/IMeterNative.bin
// compiled/IMeterNative.bin-runtime
// compiled/Measure.abi
// compiled/Measure.bin
// compiled/Measure.bin-runtime
// compiled/Meter.abi
// compiled/Meter.bin
// compiled/Meter.bin-runtime
// compiled/MeterERC20.abi
// compiled/MeterERC20.bin
// compiled/MeterERC20.bin-runtime
// compiled/MeterGov.abi
// compiled/MeterGov.bin
// compiled/MeterGov.bin-runtime
// compiled/MeterGovERC20.abi
// compiled/MeterGovERC20.bin
// compiled/MeterGovERC20.bin-runtime
// compiled/MeterNative.abi
// compiled/MeterNative.bin
// compiled/MeterNative.bin-runtime
// compiled/NewMeterNative.abi
// compiled/NewMeterNative.bin
// compiled/NewMeterNative.bin-runtime
// compiled/Params.abi
// compiled/Params.bin
// compiled/Params.bin-runtime
// compiled/ParamsNative.abi
// compiled/ParamsNative.bin
// compiled/ParamsNative.bin-runtime
// compiled/Prototype.abi
// compiled/Prototype.bin
// compiled/Prototype.bin-runtime
// compiled/PrototypeEvent.abi
// compiled/PrototypeEvent.bin
// compiled/PrototypeEvent.bin-runtime
// compiled/PrototypeNative.abi
// compiled/PrototypeNative.bin
// compiled/PrototypeNative.bin-runtime
package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledExecutorAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x55\x3d\x6f\xdb\x40\x0c\xfd\x2f\x9c\x35\xb5\x45\x51\x68\x33\xd2\xa5\x43\x01\x4f\x5d\x82\xc0\xa0\x75\x4c\x7a\xa8\x4c\xaa\x77\x3c\x25\x42\x90\xff\x5e\xc4\xd2\xf5\x24\xeb\xa3\x6e\x6a\x58\xe8\x66\xc0\x8f\x4f\x8f\x8f\x8f\xbc\xdb\x67\x28\x84\xbd\x22\x2b\xe4\xea\x02\x65\x60\xb9\x0a\xea\x21\xbf\x7d\x06\xc6\x03\x41\x0e\x90\x81\x36\xd5\xeb\x2f\x34\xc6\x91\xf7\xf0\x72\x97\xc5\x3f\xb1\xaa\x9c\xd4\xe4\x3c\x64\x20\x41\x4f\x6b\xad\x21\x56\xab\x4d\xe2\xd8\x37\x4a\xfe\xfd\x3b\x78\xc9\x12\x88\xb7\xf2\x48\xae\x87\x11\x29\x8f\x1f\xa9\xb0\xc1\x7d\x49\x90\xdf\x63\xe9\x29\x03\xaf\xa8\xf4\x35\x28\xee\x6d\xf9\xca\x9a\x43\x6d\xe9\x31\x15\xde\x07\x2e\xd4\x0a\x1f\xd9\x67\x3b\x1b\xab\xbf\x91\xc0\x3a\xdd\x41\x22\x0f\x96\xf5\xd3\x25\x65\x75\xd5\x63\xc7\x77\x51\xd7\xa2\xf5\x8e\x6a\xf9\x41\x9b\x04\x4d\xea\xcf\xd2\xc8\xc2\x11\xf4\x97\x06\x4e\x98\xf3\x7b\xac\x49\x5f\xe5\xa4\x12\x8f\xe5\x4c\x34\xd4\x1e\x68\x7b\x84\x90\x19\x9a\xfc\xf1\x43\x3f\x1d\x2d\xcd\xa4\x17\x09\xf4\x33\x88\x0b\x87\xd1\xac\x12\xa0\x75\x14\xcb\x38\xe9\x39\x1c\x3d\x51\x11\xb4\xaf\xa8\x0d\x63\x42\x28\xba\x07\xd2\x45\x35\x06\x15\x4f\xac\x59\x3d\x37\x49\xdd\x6e\x61\x29\x7b\xab\x61\xcc\x55\xa2\x35\xdf\xcc\x19\x46\xef\xe6\x9c\x1e\x66\xe7\x4f\x9b\xdd\x6f\xff\x4a\xcd\x15\xc2\xea\xb0\x98\x6a\xaf\x37\x03\x55\x2c\xbe\x7f\x13\xb5\xfc\x70\x93\x0a\xd6\x18\x46\x5c\xe6\x2f\x9f\x97\x53\xd3\x46\x66\x25\x91\x67\x99\x6a\xe8\x7f\x33\xb5\xbb\x49\x2b\x5f\xf8\x09\x2b\xeb\x81\x89\x33\x77\xfe\xd2\xcf\x3a\xb2\x70\x73\x90\xe0\xa7\x9c\xb5\x6c\xe8\x89\x4c\xec\xe7\xe4\x25\x9a\xf4\x39\xeb\x55\x75\x84\x31\xcc\xed\x47\x97\x46\xb3\xed\x98\x13\x88\x6a\x62\x7d\xab\xd0\xe5\xfb\xfd\x76\x99\x9b\x11\xef\x3f\xc9\x8c\x7b\xb6\x31\xe6\xe2\x52\x47\x8b\x39\x14\x7c\xf7\x2b\x00\x00\xff\xff\xa9\x52\x06\x45\xb3\x0a\x00\x00")

func compiledExecutorAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExecutorAbi,
		"compiled/Executor.abi",
	)
}

func compiledExecutorAbi() (*asset, error) {
	bytes, err := compiledExecutorAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Executor.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExecutorBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x09\x76\xb3\xba\x0e\xde\x92\x06\x6b\xf0\x72\xc0\xd8\xfb\x5f\xc2\x3b\x1e\x48\x48\x49\x42\x48\x6f\xd3\xde\xf3\x6e\x7b\xfe\x34\xc7\x80\x2d\x6b\xfc\x24\x8b\x5f\xc1\x41\x21\x80\x10\x07\x07\x14\x45\x00\x04\x31\x05\x00\x87\xb2\xc8\x2c\xa0\x48\x81\xa2\x43\xbd\x46\x50\xaf\x70\xac\x9f\x85\x01\xae\xcf\x2b\x40\x60\xc5\x76\xd7\x54\xfa\x0c\x2c\x96\x00\xe1\xcd\x9f\x08\x10\x94\xcb\xf8\x41\x75\x50\x86\x09\x43\xe0\x88\x18\xea\x3a\x73\x10\xab\xa3\x48\x9e\xe3\x9c\xb5\x8d\x22\xe6\x31\xea\x0b\x72\x2e\xd6\x47\x43\xe9\xa3\x4c\x79\x91\x19\xa9\x8f\x46\x1a\xa3\xb9\x40\x82\x98\xdb\x28\xe5\x31\x1a\x97\xe0\xe8\xc1\xdb\x28\x33\xf7\xd1\x09\xcb\xac\xea\xa5\x8f\x2e\x3e\x46\x85\x27\x9c\x96\x3e\x1a\x70\x1e\xa3\xce\x33\xcf\x4b\x9f\x21\x84\xd4\x47\xb3\x09\x16\xb2\xbe\x8b\xe0\x83\xb2\x32\x81\x5a\xa4\xb9\x8f\x26\x10\x93\xf9\x2a\x87\xab\x7c\xd2\x4e\x3e\x00\x45\x2a\xff\x1d\x58\x81\xbd\xee\x0b\x1c\xbc\xf2\xff\xc2\xbf\xa3\x1f\xd4\x08\x0a\x04\xf5\xd9\x48\x11\x23\x48\xfb\x55\x04\xc1\x59\xb4\xd2\x12\x40\xd0\xc1\xb9\xae\x8e\x11\x75\xfd\xeb\x58\xe5\x5f\x9f\x75\x42\xe9\xbf\xd7\xb1\x48\x63\xa6\xf1\x7c\x44\xe0\x08\x85\x37\x7b\x42\x9a\x76\x7b\x42\xae\xea\x24\x21\xdd\xac\x4d\x0a\x95\xd6\xfe\xb9\x59\x03\x8f\x56\x90\x79\xbf\x42\xdd\xf1\xcf\x71\x4d\x4a\xa5\x1c\x60\x4b\x45\xcc\x7b\x2a\x12\xde\xa7\x62\xe5\xee\xc3\x15\xcc\xec\x86\x37\xae\xb6\xa7\xef\xde\xd8\x46\x5e\x76\x66\xaf\x67\xee\xdd\xac\xa1\xf7\x65\xe6\xf2\x60\x3c\xec\x75\xc8\xf9\x03\x74\xc2\xaa\xc3\x8e\xc0\x4e\x42\xce\x8e\x8e\x82\xb7\x7a\xe6\x20\x78\x95\x49\xb5\x87\x6e\x11\x32\xd7\xfb\xb1\x4b\x9a\x26\xac\x56\xed\x04\xed\x79\x0f\x30\xe6\xe8\x12\x6e\xf2\x23\xd7\x2a\x3f\x19\x12\x8d\xed\x9f\x0f\xbd\xc4\xe6\xf1\xfa\x5c\x29\x8f\xb9\xb8\xae\xad\x8d\x1f\x6d\xfd\x6a\x21\xd5\xbf\x4e\xc0\xb7\x76\xd8\xec\x61\x16\x88\xbe\xce\x7e\xfd\x7d\x62\x25\x94\xf7\xfa\xc9\xfc\x40\x3f\xbf\x63\x25\x2f\xe9\xb7\xa7\xb4\xb3\x20\xe6\xb2\xa7\x70\x9e\x7e\x86\xc2\x8d\x94\xa9\xea\xc7\xcd\x48\x8b\x7c\x58\x00\x9b\x54\x2b\x37\x03\x0c\xee\x77\x0e\x77\x59\xf6\xe8\xe8\x10\x79\xcc\x8b\x5b\xad\x76\xae\x72\xf5\xc0\x56\x57\xe8\x5e\xec\xa2\x0f\xd8\x9e\xa0\x0d\x47\x92\xdb\x57\x6f\xf8\xc8\x13\x1f\x7a\x44\xce\x61\xc7\xc9\x80\xf1\xe7\x3c\x22\xd2\x22\x3b\x79\x06\xb2\x3d\x15\xe1\x81\x3c\x8f\x34\x06\x25\xf0\x7e\x05\xf1\xfd\x0a\xbe\xfc\xe0\x3e\xa3\xe1\x9e\x8a\xb8\x8f\x3f\x61\xce\x6f\xee\x73\xa6\xb8\x5f\x21\xa5\xdd\x0a\x02\x3f\x60\xbb\x2b\x15\x04\xe4\xb7\xda\x78\x27\xf6\x3f\xd0\xc2\x4a\x67\xbd\xa3\x5a\x46\xf3\x9d\x54\xef\xa9\xdf\x3a\xc2\xac\xcf\xd5\x95\xfa\x55\x40\x09\xb1\x7f\x6f\x16\x55\xb1\x61\x1d\x59\xbd\x5f\x43\x8a\xd0\x69\x15\x70\xea\x54\x3d\xbf\xd3\x9b\x8c\x2a\x8f\xd4\xea\x5e\xc2\xd8\x4b\xe5\x9f\xd3\xcf\x47\x9b\xea\x09\xe4\xe2\x2f\xc6\xbe\x0f\x76\x57\x79\x5b\x21\xb6\x34\x04\x58\x79\x6a\x05\x3c\xb1\xc5\xe9\x5d\x90\x3d\xa8\x80\x50\xfd\xdb\x3e\x02\x2a\x50\xd8\x46\x48\x2b\x4a\x26\x1a\x35\x59\xd0\xa8\x99\x27\x02\x13\xcd\x3a\x6b\xd6\x62\xa6\x99\x40\x8b\x11\x81\x91\x8a\xa9\x16\x9d\x55\x34\x10\x28\x1a\x18\x18\x5d\x67\xb3\xa2\xc5\x54\xc5\xe8\x3b\xb4\x77\xed\x7a\xa0\x69\xcb\x2a\xd1\xf6\xf9\x01\x0c\xf1\x4c\xaa\xab\x3c\x1d\x25\x38\x56\x89\x02\x75\x2b\x77\xae\x92\x05\x42\x8b\x20\x22\xb0\xea\x6e\x8d\x15\x0f\xf5\x77\x58\xa3\xb6\x55\x81\xdb\xf7\x27\x2b\xf4\xa7\xae\x6b\x74\x04\x09\xea\xc8\x70\x66\xaf\xd5\x56\xf2\x12\xa1\xad\xb7\xc9\xce\xaa\xf5\xf8\xa9\x99\xac\x98\x01\xa2\xa4\x25\x9b\x64\x85\x82\x36\x93\xca\x62\x19\x92\x64\x8e\x49\x6c\x9a\x0b\x05\x9e\x13\xa3\x26\xcb\x92\xa8\xf8\xe2\x82\x66\xb8\x4c\x3a\xa5\x8b\xe7\x01\x2b\xb7\xfa\xf6\xbe\x2e\x75\x29\x7e\xd5\xa4\xa9\xe6\x30\xdd\x3f\xf0\x19\xbf\xf5\xc0\x9a\xef\x60\xf2\xb8\x7d\xc6\xf7\xcf\x9c\xf3\xd8\xd7\xb9\x30\x3d\xf6\x95\x9b\xbb\x96\x97\xee\xca\x07\x77\x3d\xf4\x5f\x6f\x50\xdf\x10\x97\x84\x86\x76\x1b\xe6\xad\xfe\x6f\xcc\x49\xc0\x0d\xf3\x50\x6c\xd1\xed\x14\x0e\xdb\xa3\x30\x7a\x75\x9d\x36\xee\xa9\x57\x07\x2a\x42\x6f\x28\x35\x56\x04\xd3\xee\xaf\xb9\x80\x84\xba\xbe\xb3\x50\xc4\x35\x06\x8e\xa7\xaa\x85\x34\x94\x17\x2f\xba\x43\x43\x77\x62\xcd\x1e\x9a\xd5\x0a\xc5\xc1\xc9\x35\xee\xd6\x59\xb1\xcd\x31\x89\x98\x57\x5a\x78\xe4\x07\x1d\x33\xce\x1b\xcc\x58\x75\xcf\x46\x64\xf3\x25\x7c\x89\x6c\xa7\xe2\x1a\x8e\x3c\x4c\x11\xa2\xf2\xe7\x22\x0e\xc6\xa3\x88\x53\xff\x9a\x2a\x6a\xd2\xb8\x8d\x2d\xf7\xe3\xc9\x8d\x65\x3f\x89\x12\x8d\xeb\xd4\x74\xa0\x0b\x6d\xb3\xff\xfc\xb7\xf7\x1f\x35\xa8\x68\xae\x77\x58\xb0\xf8\x9d\xfd\x0f\x04\x74\xca\x62\xff\xc1\x58\xd9\xb0\xde\xad\x04\x14\x61\x9a\x3e\xc9\x7f\x3f\xe4\xff\x17\x7d\x23\x50\x31\xd7\x68\x6c\xc1\xf8\xde\x7a\xc7\xfc\x2f\xe5\x08\xb1\x0e\x0c\x08\x83\x27\x33\x2d\x1f\xe4\xc9\x7c\x88\x02\x83\x16\x2d\x04\xba\x28\x6a\xb6\xb8\xe7\xd2\x96\x33\xaf\xf1\x24\x8c\x5a\xcb\xd6\x7f\x5f\x73\xde\x1b\xed\xc1\x35\xef\x10\xf8\x6d\x0d\x5e\x6b\x3e\x5d\x9b\xbb\xaf\xef\x28\x4c\xa4\xc5\xa8\xeb\xf5\xd3\xc8\x30\x8e\x0a\xce\x39\x7c\x38\x62\xce\x59\x74\x98\x50\x9c\x4e\xa3\x43\x42\x7e\x80\x0e\xf1\xf7\xd0\xa1\xa2\x86\xe6\x23\xdf\x40\x86\x3b\x7d\xbd\x8f\x0e\xe1\x9a\x3f\xb6\xcf\x53\xfa\xb7\x89\x35\x0b\xc6\x0f\xda\xb5\x9d\x8d\x35\x16\x14\x8d\xd4\x54\xec\x0e\x2f\xcf\xc4\x9a\x17\x7c\x1d\xae\x3c\xf9\xa8\xff\x97\x43\x9e\xe4\xe6\xe9\x9e\xf8\xb7\x77\x78\xe2\xc0\xbf\x9c\xa1\x3e\xf6\x25\x8a\x90\x83\x8a\x35\xdf\xd3\x3c\xf0\xaf\xd1\xfa\x90\x4a\x99\x87\xb6\xe4\xfc\xc9\xfa\xc8\xf2\x06\x5a\xe8\x15\x12\xd5\xd2\xef\x52\x23\x50\xd6\x52\x11\xdc\xb6\x3e\x62\xa4\xa8\x6c\x61\x54\x53\xb0\xce\x5c\xbf\xbd\xea\xc5\x5e\xa9\x8f\x04\x62\xee\xa3\xd7\x6c\xe3\xd5\x73\x24\xf3\x37\x4e\x77\x47\x05\x08\xbc\xf2\xf1\xa7\x74\x48\x9f\x9d\x3b\x0f\x0a\x30\x7c\x3d\x9b\xec\xe7\x33\xce\xc0\xc0\x6b\x26\x16\x46\x8e\xdf\x2b\x9c\xf7\xce\x7e\xaa\xf5\x52\x8d\xd4\x2b\x32\x2b\x93\xd5\x0c\x51\x70\x68\x08\xac\xb5\xfd\x9b\xf3\x9f\xf6\x0c\x70\xa5\xa0\x3e\x73\xad\x5a\xee\xcf\x76\xbc\xe6\x04\x24\x58\x6d\xc3\x43\xfb\x0b\x4e\x68\x2e\x42\x37\x27\x06\x20\x0f\x24\xdd\x32\x4c\x18\x9e\x97\x7b\x35\xec\xc9\xd9\xc1\x03\x64\xfe\x7a\x35\xe3\xde\xd8\x8a\xe6\x5b\x22\xfb\x39\x6f\x5e\x0e\xed\x33\x98\x18\xb4\xf8\xc6\x8a\x16\x7a\xbd\x72\x58\x6c\xb5\x55\xae\xd1\xaf\x67\x59\xaf\x7a\xf3\x0c\xf7\x6a\x0f\x81\x9e\x9f\xc6\x9e\xf3\xa9\x1b\x19\x61\x0d\x91\x87\x31\x15\x89\x39\x76\x2d\xfb\xf2\x7c\xd3\x8b\xfd\xd8\x97\x33\xd8\x53\xa7\x06\xdb\xf3\xdc\x0b\x2e\x7f\x53\xf3\x6e\x11\xf5\x1d\xc4\xbc\xe3\xea\x06\xd9\xde\xe1\xf8\xb6\xd2\x4a\xfb\xd9\xfd\x76\xf6\xd7\x77\x7d\x5d\xf5\x0c\xa7\xb6\xd4\x84\x1d\x35\x98\xce\xe0\x76\x05\xdd\xcf\xb0\x9c\x9b\xc1\xf7\x33\xe4\x33\xb5\xeb\xe9\x30\xc3\xf9\x24\x47\xd3\x96\x1a\xea\x5e\x7b\xeb\xc3\x15\x91\x74\x1e\xb9\x12\x12\x8b\xf7\x33\xf9\x9e\x69\xf9\x25\x7b\xb3\x62\x4b\x9c\x53\x91\xa4\x69\x99\x96\xcc\xd1\x27\x0d\x13\x30\x08\x4f\xd1\xc9\x05\x53\xca\x13\xc1\x92\x9c\x6c\x99\x13\x32\x98\x84\x39\x66\xf3\x64\x89\x71\xba\xa9\x56\x6f\xbd\xcb\x1b\x59\xc9\x51\x3e\xe2\xd0\x7d\x53\xdd\xd7\x25\x37\x41\xa4\x65\xf9\x52\x11\x3c\x95\x93\x5d\xb3\x14\xac\x71\xeb\x73\x18\x0b\x4f\x57\xc4\x06\x9a\xba\x22\xa8\x9e\x01\x36\x1c\xc5\x37\x18\xeb\x01\x6a\x3f\x2b\x89\x83\x33\x28\x3a\x5f\x7f\xfd\x04\x66\xbe\xc8\x33\xd8\x07\x63\x32\x1d\x56\x38\xef\x63\xe3\x1b\x69\xa6\x86\x84\x51\x83\xc5\xad\x3c\x1b\xde\x0e\x35\x4b\x55\x56\x3f\x6f\x5b\x2f\xca\x13\x2f\x32\xfd\xb5\x3c\xe8\x75\x9f\x7c\xf6\x5c\xae\x84\x34\x4b\x08\x3c\x67\x55\x2d\x6e\x34\x27\x9f\x4c\x28\x72\x8e\x31\x13\x41\x98\xaa\x19\x65\xc9\x33\x2f\xb4\x04\x97\xc5\x55\x0b\x65\xe4\x64\x79\x0a\xb7\x95\x97\xef\x48\xe3\xc4\xb9\xdc\x6f\x22\xdb\x51\xa7\x40\x29\xf6\xa7\x6a\xb2\x7b\x0c\x9b\xab\x5d\x11\x54\xb9\xb6\x73\xfb\xf0\x80\xd3\xff\xca\x3a\xc5\x90\x82\xce\x9f\xcc\x2f\xa6\xf3\xf9\xff\xb3\x6c\xfe\x25\x29\x10\x44\x9e\xfc\x17\x35\x3e\x10\x5c\xf2\x5d\x34\xfb\x20\x16\x38\x3e\x1d\xbb\xa3\xf5\x62\x6e\x70\xbf\x76\xf2\xa2\xd6\x77\x3e\x3f\xeb\xb7\xbb\xc7\x67\xee\xdf\xff\x5e\xad\xec\x12\xf7\xfd\x93\xbd\x44\xc7\xb6\x72\x47\x76\x37\xd6\xf3\x86\xad\x74\x7e\xbc\x67\x27\xbf\x2e\xbf\x53\x3d\x43\xef\xe9\xe8\xc8\x11\x7f\xf2\x2c\xe9\xa7\xb2\xa8\x67\xba\xf1\xaa\xbe\xbe\x80\x2d\x10\xa3\xc5\x9b\xbc\xe9\x0f\xa3\x79\xc5\xca\xa3\x0f\x62\xf9\xc3\xd3\x92\x43\x2c\xbf\x62\x92\x86\x14\x6f\xfa\x03\xdf\x46\x8d\xb7\xf2\x3d\xea\x0f\xfc\x0f\xcb\xbf\x88\xe5\x83\xca\xff\x0d\x96\x9f\x97\xbf\xd5\x5f\xf1\x13\x58\xfe\x3b\x11\xe3\x61\x2f\xe0\x05\x5b\x24\xcb\x7f\x1c\x5b\x88\x55\x3d\x66\x13\xdb\xf5\x06\xfc\x0b\x71\xf8\xc2\xfa\x1f\x0e\x7f\xa2\xb1\x0f\x3b\x61\xd7\xcf\xef\x48\xf1\x71\x07\xed\xb6\x6f\xab\xc9\x29\xc3\x27\xf3\xd3\x63\xcf\x52\x33\xd1\x62\x75\x7c\xe9\xdd\xfc\xd6\xcf\xc1\xa2\xb1\xaa\xc6\x5b\x59\xfd\x38\xe6\x7e\xe3\xc4\xe1\x4d\xad\xf8\x47\xba\x95\x4f\x9d\x4a\xbf\xcb\x13\x5a\x7b\x99\xc7\x19\xf4\xcb\xdd\xca\x58\x30\x6e\xbb\x95\x31\xb7\x37\xfc\x0e\xba\x95\xdb\x53\xdf\xec\x56\xc6\x5c\xd2\xe3\x6e\xe5\x55\x73\x00\xae\x6f\x15\x03\xf7\x13\x27\x57\x99\xca\xd0\xad\x61\x31\x25\x7d\xb0\x27\xea\x85\x37\x5e\x9e\x47\x92\x58\x11\xee\xe5\x0d\x18\xb9\xed\xe8\xd8\x47\x9a\xb3\xb4\x1f\x21\xda\x1f\xcb\xb6\x9e\x44\xcb\x33\xb4\x1f\xa2\xbf\xc6\xad\x67\x6f\x58\x3c\x7b\xa3\xeb\x5c\xbf\xe2\xb9\xcc\x7e\xed\x60\x20\xc8\xf3\x5f\x42\x36\x37\x92\x29\xff\x44\x85\xb1\x72\xd2\x8a\x74\x3d\xaf\x73\x06\x8b\x06\x2a\xe7\x76\x66\x76\xb6\x3f\xe8\xac\xf7\x55\x26\x8a\xe4\x8b\xce\xfd\x2d\xec\xb6\x0f\xde\x76\x9e\x7e\xe7\x7f\xa0\xb8\xf4\x2a\x75\xd9\x7c\xe2\x1d\xf4\x4f\xd4\x14\x2e\x3d\x4f\x77\xbd\xaf\x39\xf0\x8c\xd2\xe3\x07\x61\xf9\xf2\x7e\x6e\xf5\xcd\x97\xab\x04\xb3\x18\x2f\xe3\x54\x20\xf7\x6f\xe3\xbe\xeb\xef\xbf\x46\x97\x3c\x4d\x3c\x87\xe0\xff\xe9\xd2\xab\x6b\x9c\xd2\x25\xc6\xe5\x89\x2e\x31\xe3\x6b\xba\xb4\xa9\x0f\x50\xc3\x41\xc3\xff\xf7\xb7\x77\x86\x87\x66\x01\xb1\x92\x65\x86\x10\xfb\xbb\xf4\xe3\xe9\x57\xf1\xd3\x3d\xd4\x73\x7d\xcf\xac\x21\xac\xf6\xff\xc7\x38\xad\xd8\x8a\x38\xc6\xde\xf7\xd7\xe8\xa9\xa8\x8e\xbd\xae\x60\x2e\xd2\x68\x4a\xb6\x52\x00\xa3\x37\xa6\x5e\x71\xc2\xf5\xaa\x45\x6c\xdd\x2a\xf5\x1e\x44\x1c\xe3\xd5\xbd\x53\xeb\x26\x94\x2b\x4a\xdb\xe0\x2e\x24\x9e\x9a\xc7\x5e\xfb\x56\xea\xc8\x12\xd6\x8e\x96\xe5\xda\xd1\xd2\xaa\x99\xc4\x65\x6a\xfc\x98\x5b\x17\xe1\x58\xa5\xe8\x90\xcd\x8a\x89\xc7\x7b\xa8\x80\x6d\x8e\xbc\x9d\xa3\x7e\x02\x4c\xa8\xa2\x64\x93\x4d\x46\x0c\xe2\x04\xaa\x04\xac\x85\x0a\xa7\xc4\x08\x64\xb3\x46\x4a\x8c\x3a\x4d\x38\x2d\xe0\x59\xcd\x7d\x9e\x7c\x9e\x30\xb0\xe5\x49\x08\x40\xd1\xb1\x10\x4e\xc5\x17\xaa\xac\xff\x5f\x00\x00\x00\xff\xff\x70\x41\x93\x93\x92\x48\x00\x00")

func compiledExecutorBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledExecutorBin,
		"compiled/Executor.bin",
	)
}

func compiledExecutorBin() (*asset, error) {
	bytes, err := compiledExecutorBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Executor.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExecutorBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x09\x92\xf2\xb8\x0e\xbe\x92\x16\x6b\xf1\x71\x12\xc7\xbe\xff\x11\x5e\x79\x09\x84\x0e\x10\x42\x4f\xd3\x3d\xf5\xa6\xa9\x1f\x28\x93\xd8\xb2\xd6\x4f\xb2\xf2\x2b\x38\x28\x04\x10\x52\x80\xc0\x8a\xa0\x08\x30\x15\x31\x05\x00\x16\x4b\x80\xf0\xe6\x5f\x04\x08\xca\x65\xfc\xa1\x3a\x28\xc3\x84\x21\x70\x44\x0c\x75\x9d\x39\x88\xd5\x51\x24\xcf\x71\xce\xda\x46\x11\xf3\x18\xf5\x05\x39\x17\xeb\xa3\xa1\xf4\x51\xa6\xbc\xc8\x8c\xd4\x47\x23\x8d\xd1\x5c\x20\x41\xcc\x6d\x94\xf2\x18\x8d\x4b\x70\xf4\xe0\x6d\x94\x99\xfb\xe8\x84\x65\x56\xf5\xd2\x47\x17\x1f\xa3\xc2\x13\x4e\x4b\x1f\x0d\x38\x8f\x51\xe7\x99\xe7\xa5\xcf\x10\x42\xea\xa3\xd9\x04\x0b\x59\xdf\x45\xf0\x41\x59\x99\x40\x2d\xd2\xdc\x47\x13\x88\xc9\x5c\xb9\xe8\x50\x16\x99\x39\x38\xa0\xd4\x5d\xd7\x5f\xae\xe3\xd2\x38\x5e\xa4\xf2\xdf\x81\x15\xd8\xeb\xbe\xc0\xc1\x2b\xff\x2f\xfc\x3b\xfa\x43\x8d\xa0\x40\x50\xef\x8d\x14\x31\x82\xb4\x97\x22\x08\xce\xa2\x95\x96\x00\x82\x0e\xce\x75\x75\x8c\xa8\xeb\xa7\x63\x95\x7f\xbd\xd7\x09\xa5\xbf\xae\x63\x91\xc6\x4c\xe3\xfe\x88\xc0\x11\x0a\x6f\xf6\x84\x34\xed\xf6\x84\x5c\xd5\x49\x42\xba\x59\x9b\x14\x2a\xad\xfd\x7d\xb3\x06\x1e\xad\x20\xf3\x7e\x85\xba\xe3\x9f\xe3\x9a\x94\x4a\x39\xc0\x96\x8a\x98\xf7\x54\x24\xbc\x4f\xc5\xca\xdd\x87\x2b\x98\xd9\x0d\x6f\x5c\x6d\x4f\xdf\xbd\xb1\x8d\xbc\xec\xcc\x5e\xcf\x5c\xbb\x59\x43\xef\xcb\xcc\xe5\xc1\x78\xd8\xeb\x90\xf3\x07\xe8\x84\x55\x87\x1d\x81\x9d\x84\x9c\x1d\x1d\x05\x6f\xf5\xcc\x41\xf0\x2a\x93\x6a\x0f\xdd\x22\x64\xae\xd7\x63\x97\x34\x4d\x58\xad\xda\x09\xda\xfd\x1e\x60\xcc\xd1\x25\xdc\xe4\x47\xae\x55\x7e\x32\x24\x1a\xdb\x3f\x1f\x7a\x89\xcd\xe3\xf5\xb9\x52\x1e\x73\x71\x5d\x5b\x1b\x3f\xda\xfa\xd5\x42\xaa\x7f\x9d\x80\x6f\xed\xb0\xd9\xc3\x2c\x10\x7d\x9d\xfd\xfa\x7a\x62\x25\x94\xf7\xfa\xc9\xfc\x40\x3f\xbf\x63\x25\x2f\xe9\xb7\xa7\xb4\xb3\x20\xe6\xb2\xa7\x70\x9e\x7e\x86\xc2\x8d\x94\xa9\xea\xc7\xcd\x48\x8b\x7c\x58\x00\x9b\x54\x2b\x37\x03\x0c\xee\x77\x0e\x77\x59\xf6\xe8\xe8\x10\x79\xcc\x8b\x5b\xad\x76\xae\x72\xf5\xc0\x56\x57\xe8\x5e\xec\xa2\x0f\xd8\xee\xa0\x0d\x47\x92\xdb\x57\x6f\xf8\xc8\x13\x1f\x7a\x44\xce\x61\xc7\xc9\x80\xf1\xe7\x3c\x22\xd2\x22\x3b\x79\x06\xb2\x3d\x15\xe1\x81\x3c\x8f\x34\x06\x25\xf0\x7e\x05\xf1\xfd\x0a\xbe\xfc\xe0\x3e\xa3\xe1\x9e\x8a\xb8\x8f\x3f\x61\xce\x6f\xee\x73\xa6\xb8\x5f\x21\xa5\xdd\x0a\x02\x3f\x60\xbb\x2b\x15\x04\xe4\xb7\xda\x78\x27\xf6\x3f\xd0\xc2\x4a\x67\xbd\xa2\x5a\x46\xf3\x9d\x54\xaf\xa9\xdf\xa8\xbd\xd7\xfb\xea\x4a\xfd\x57\x40\x09\xb1\x7f\x6f\x16\x55\xb1\x61\x1d\x59\xbd\x5f\x43\x8a\xd0\x69\x15\x70\xea\x54\x3d\xbf\xd2\x9b\x8c\x2a\x8f\xd4\xea\x5e\xc2\xd8\x4b\xe5\x9f\xd3\xcf\x47\x9b\xea\x09\xe4\xe2\x2f\xc6\xbe\x0f\x76\x57\x79\x5b\x21\xb6\x34\x04\x58\x79\x6a\x05\x3c\xb1\xc5\xe9\x5d\x90\x3d\xa8\x80\x50\xfd\xdb\x3e\x02\x2a\x50\xd8\x46\x48\x2b\x4a\x26\x1a\x35\x59\xd0\xa8\x99\x27\x02\x13\xcd\x3a\x6b\xd6\x62\xa6\x99\x40\x8b\x11\x81\x91\x8a\xa9\x16\x9d\x55\x34\x10\x28\x1a\x18\x18\x5d\x67\xb3\xa2\xc5\x54\xc5\xe8\x3b\xb4\x77\xed\x7a\xa0\x69\xcb\x2a\xd1\xf6\xfe\x01\x0c\xf1\x4c\xaa\xab\x3c\x1d\x25\x38\x56\x89\x02\x75\x2b\x77\xae\x92\x05\x42\x8b\x20\x22\xb0\xea\x6e\x8d\x15\x0f\xf5\x77\x58\xa3\xb6\x55\x81\xdb\xf7\x27\x2b\xf4\xbb\xae\x6b\x74\x04\x09\xea\xc8\x70\x66\xaf\xd5\x56\xf2\x12\xa1\xad\xb7\xc9\xce\xaa\xf5\xf8\xa9\x99\xac\x98\x01\xa2\xa4\x25\x9b\x64\x85\x82\x36\x93\xca\x62\x19\x92\x64\x8e\x49\x6c\x9a\x0b\x05\x9e\x13\xa3\x26\xcb\x92\xa8\xf8\xe2\x82\x66\xb8\x4c\x3a\xa5\x8b\xe7\x01\x2b\xb7\xfa\xf6\xbe\x2e\x75\x29\x7e\xd5\xa4\xa9\xe6\x30\xdd\x3f\xf0\x19\xbf\xf5\xc0\x9a\xef\x60\xf2\xb8\xbd\xc7\xf7\xf7\x9c\xf3\xd8\xd7\xb9\x30\x3d\xf6\x95\x9b\xab\x96\x97\xae\xca\x07\x57\x3d\xf4\x5f\x6f\x50\xdf\x10\x97\x84\x86\x76\x1b\xe6\xad\xfe\x6f\xcc\x49\xc0\x0d\xf3\x50\x6c\xd1\xed\x14\x0e\xdb\xa3\x30\x7a\x75\x9d\x36\xee\xa9\x57\x07\x2a\x42\x6f\x28\x35\x56\x04\xd3\xae\xaf\xb9\x80\x84\xba\xbe\xb3\x50\xc4\x35\x06\x8e\xbb\xaa\x85\x34\x94\x17\x2f\xba\x43\x43\x77\x62\xcd\x1e\x9a\xd5\x0a\xc5\xc1\xc9\x35\xee\xd6\x59\xb1\xcd\x31\x89\x98\x57\x5a\x78\xe4\x07\x1d\x33\xce\x1b\xcc\x58\x75\xcf\x46\x64\xf3\x25\x7c\x89\x6c\xa7\xe2\x1a\x8e\x3c\x4c\x11\xa2\xf2\xe7\x22\x0e\xc6\xa3\x88\x53\x3f\x4d\x15\x35\x69\xdc\xc6\x96\xfb\xf1\xe4\xc6\xb2\x9f\x44\x89\xc6\x75\x6a\x3a\xd0\x85\xb6\xd9\x7f\xfe\xdb\xfb\x8f\x1a\x54\x34\xd7\x2b\x2c\x58\xfc\xce\xfe\x07\x02\x3a\x65\xb1\xff\x60\xac\x6c\x58\xef\x56\x02\x8a\x30\x4d\x9f\xe4\xbf\x1f\xf2\xff\x8b\xbe\x11\xa8\x98\x6b\x34\xb6\x60\x7c\x6f\xbd\x63\xfe\x97\x72\x84\x58\x07\x06\x84\xc1\x93\x99\x96\x0f\xf2\x64\x3e\x44\x81\x41\x8b\x16\x02\x5d\x14\x35\x5b\xdc\x73\x69\xcb\x99\xd7\x78\x12\x46\xad\x65\xeb\xbf\xaf\x39\xef\x8d\xf6\xe0\x9a\x77\x08\xfc\xb6\x06\xaf\x35\x9f\xae\xcd\xdd\xd7\x77\x14\x26\xd2\x62\xd4\xf5\xf7\xd3\xc8\x30\x8e\x0a\xce\x39\x7c\x38\x62\xce\x59\x74\x98\x50\x9c\x4e\xa3\x43\x42\x7e\x80\x0e\xf1\xf7\xd0\xa1\xa2\x86\xe6\x23\xdf\x40\x86\x3b\x7d\xbd\x8f\x0e\xe1\x9a\x3f\xb6\xf7\x53\xfa\xb7\x89\x35\x0b\xc6\x0f\xda\xb5\x9d\x8d\x35\x16\x14\x8d\xd4\x54\xec\x0e\x2f\xcf\xc4\x9a\x17\x7c\x1d\xae\x3c\xf9\xa8\xff\x97\x43\x9e\xe4\xe6\xe9\x9e\xf8\xb7\x77\x78\xe2\xc0\xbf\x9c\xa1\x3e\xf6\x25\x8a\x90\x83\x8a\x35\xdf\xd3\x3c\xf0\xaf\xd1\xfa\x90\x4a\x99\x87\xb6\xe4\xfc\xc9\xfa\xc8\xf2\x06\x5a\xe8\x15\x12\xd5\xd2\xaf\x52\x23\x50\xd6\x52\x11\xdc\xb6\x3e\x62\xa4\xa8\x6c\x61\x54\x53\xb0\xce\x5c\xbf\xbd\xea\xc5\x5e\xa9\x8f\x04\x62\xee\xa3\xd7\x6c\xe3\xd5\x73\x24\xf3\x37\x4e\x77\x47\x05\x08\xbc\xf2\xf1\xa7\x74\x48\x9f\x9d\x3b\x0f\x0a\x30\x7c\x3d\x9b\xec\xe7\x33\xce\xc0\xc0\x6b\x26\x16\x46\x8e\xdf\x2b\x9c\xf7\xce\x7e\xaa\xf5\x52\x8d\xd4\x2b\x32\x2b\x93\xd5\x0c\x51\x70\x68\x08\xac\xb5\xfd\x9b\xf3\x9f\x76\x0f\x70\xa5\xa0\xde\x73\xad\x5a\xee\xcf\x76\xbc\xe6\x04\x24\x58\x6d\xc3\x43\xfb\x04\x27\x34\x17\xa1\x9b\x13\x03\x90\x07\x92\x6e\x19\x26\x0c\xcf\xcb\xbd\x1a\xf6\xe4\xec\xe0\x01\x32\x7f\xbd\x9a\x71\x6f\x6c\x45\xf3\x2d\x91\xfd\x9c\x37\x2f\x87\xf6\x19\x4c\x0c\x5a\x7c\x63\x45\x0b\xbd\x5e\x39\x2c\xb6\xda\x2a\xd7\xe8\xd7\xb3\xac\x57\xbd\x79\x86\x7b\xb5\x87\x40\xcf\x4f\x63\xcf\xf9\xd4\x8d\x8c\xb0\x86\xc8\xc3\x98\x8a\xc4\x1c\xbb\x96\x7d\xb9\xbf\xe9\xc5\x7e\xec\xcb\x19\xec\xa9\x53\x83\xed\x79\xee\x05\x97\xbf\xa9\x79\xb7\x88\xfa\x0e\x62\xde\x71\x75\x83\x6c\xef\x70\x7c\x5b\x69\xa5\xfd\xec\x7e\x3b\xfb\xeb\xbb\xbe\xae\x7a\x86\x53\x5b\x6a\xc2\x8e\x1a\x4c\x67\x70\xbb\x82\xee\x67\x58\xce\xcd\xe0\xfb\x19\xf2\x99\xda\xf5\x74\x98\xe1\x7c\x92\xa3\x69\x4b\x0d\x75\xaf\xbd\xf5\xe1\x8a\x48\x3a\x8f\x5c\x09\x89\xc5\xfb\x99\x7c\xcf\xb4\xfc\x92\xbd\x59\xb1\x25\xce\xa9\x48\xd2\xb4\x4c\x4b\xe6\xe8\x93\x86\x09\x18\x84\xa7\xe8\xe4\x82\x29\xe5\x89\x60\x49\x4e\xb6\xcc\x09\x19\x4c\xc2\x1c\xb3\x79\xb2\xc4\x38\xdd\x54\xab\xb7\xde\xe5\x8d\xac\xe4\x28\x1f\x71\xe8\xbe\xa9\xee\xeb\x92\x9b\x20\xd2\xb2\x7c\xa9\x08\x9e\xca\xc9\xae\x59\x0a\xd6\xb8\xf5\x39\x8c\x85\xa7\x2b\x62\x03\x4d\x5d\x11\x54\xcf\x00\x1b\x8e\xe2\x1b\x8c\xf5\x00\xb5\x9f\x95\xc4\xc1\x19\x14\x9d\xaf\xbf\x7e\x02\x33\x5f\xe4\x19\xec\x83\x31\x99\x0e\x2b\x9c\xf7\xb1\xf1\x8d\x34\x53\x43\xc2\xa8\xc1\xe2\x56\x9e\x0d\x6f\x87\x9a\xa5\x2a\xab\x9f\xb7\xad\x17\xe5\x89\x17\x99\xfe\x5a\x1e\xf4\xba\x4f\x3e\x7b\x2e\x57\x42\x9a\x25\x04\x9e\xb3\xaa\x16\x37\x9a\x93\x4f\x26\x14\x39\xc7\x98\x89\x20\x4c\xd5\x8c\xb2\xe4\x99\x17\x5a\x82\xcb\xe2\xaa\x85\x32\x72\xb2\x3c\x85\xdb\xca\xcb\x77\xa4\x71\xe2\x5c\xee\x37\x91\xed\xa8\x53\xa0\x14\xfb\x53\x35\xd9\x3d\x86\xcd\xd5\xae\x08\xaa\x5c\xdb\xb9\x7d\x78\xc0\xe9\x7f\x65\x9d\x62\x48\x41\xe7\x4f\xe6\x17\xd3\xf9\xfc\xff\x59\x36\xff\x92\x14\x08\x22\x4f\xfe\x8b\x1a\x1f\x08\x2e\xf9\x2e\x9a\x7d\x10\x0b\x1c\x9f\x8e\xdd\xd1\x7a\x31\x37\xb8\x5f\x3b\x79\x51\xeb\x3b\x9f\x9f\xf5\xdb\xdd\xe3\x33\xf7\xef\x7f\xaf\x56\x76\x89\xfb\xfe\xc9\x5e\xa2\x63\x5b\xb9\x23\xbb\x1b\xeb\x79\xc3\x56\x3a\x3f\xde\xb3\x93\x5f\x97\xdf\xa9\x9e\xa1\xf7\x74\x74\xe4\x88\x3f\x79\x96\xf4\x53\x59\xd4\x33\xdd\x78\x55\x5f\x5f\xc0\x16\x88\xd1\xe2\x4d\xde\xf4\x87\xd1\xbc\x62\xe5\xd1\x07\xb1\xfc\xe1\x69\xc9\x21\x96\x5f\x31\x49\x43\x8a\x37\xfd\x81\x6f\xa3\xc6\x5b\xf9\x1e\xf5\x07\xfe\x87\xe5\x5f\xc4\xf2\x41\xe5\xff\x06\xcb\xcf\xcb\xdf\xea\xaf\xf8\x09\x2c\xff\x9d\x88\xf1\xb0\x17\xf0\x82\x2d\x92\xe5\x3f\x8e\x2d\xc4\xaa\x1e\xb3\x89\xed\x7a\x03\xfe\x85\x38\x7c\x61\xfd\x0f\x87\x3f\xd1\xd8\x87\x9d\xb0\xeb\xfb\x77\xa4\xf8\xb8\x83\x76\xdb\xb7\xd5\xe4\x94\xe1\x93\xf9\xe9\xb1\x67\xa9\x99\x68\xb1\x3a\xbe\xf4\x6e\x7e\xeb\xe7\x60\xd1\x58\x55\xe3\xad\xac\x7e\x1c\x73\xbf\x71\xe2\xf0\xa6\x56\xfc\x23\xdd\xca\xa7\x4e\xa5\xdf\xe5\x09\xad\xbd\xcc\xe3\x0c\xfa\xe5\x6e\x65\x2c\x18\xb7\xdd\xca\x98\xdb\x13\x7e\x07\xdd\xca\xed\xae\x6f\x76\x2b\x63\x2e\xe9\x71\xb7\xf2\xaa\x39\x00\xd7\xa7\x8a\x81\xfb\x89\x93\xab\x4c\x65\xe8\xd6\xb0\x98\x92\x3e\xd8\x13\xf5\xc2\x13\x2f\xcf\x23\x49\xac\x08\xf7\xf2\x04\x8c\xdc\x76\x74\xec\x23\xcd\x59\xda\x8f\x10\xed\x8f\x65\x5b\x4f\xa2\xe5\x19\xda\x0f\xd1\x5f\xe3\xd6\xb3\x27\x2c\x9e\x3d\xd1\x75\xae\x5f\xf1\x5c\x66\xbf\x76\x30\x10\xe4\xf9\x2f\x21\x9b\x1b\xc9\x94\x7f\xa2\xc2\x58\x39\x69\x45\xba\x9e\xd7\x39\x83\x45\x03\x95\x73\x3b\x33\x3b\xdb\x1f\x74\xd6\xfb\x2a\x13\x45\xf2\x45\xe7\xfe\x14\x76\xdb\x07\x6f\x3b\x4f\xbf\xf3\x3f\x50\x5c\x7a\x95\xba\x6c\x3e\xf1\x0c\xfa\x27\x6a\x0a\x97\x9e\xa7\xbb\xde\xd7\x1c\x78\x46\xe9\xf1\x83\xb0\x7c\x79\x3e\xb7\xfa\xe6\xcb\xaf\x04\xb3\x18\x2f\xe3\x54\x20\xf7\x6f\xe3\xba\xeb\xeb\x5f\xa3\x4b\x9e\x26\x9e\x43\xf0\xff\x74\xe9\xd5\x35\x4e\xe9\x12\xe3\xf2\x44\x97\x98\xf1\x35\x5d\xda\xd4\x07\xa8\xe1\xa0\xe1\xff\xfb\xd3\x3b\xc3\x43\xb3\x80\x58\xc9\x32\x43\x88\xfd\x59\xfa\x71\xf7\xab\xf8\xe9\x1e\xea\xb9\x3e\x67\xd6\x10\x56\xfb\xff\x63\x9c\x56\x6c\x45\x1c\x63\xef\xfb\x6b\xf4\x54\x54\xc7\x5e\x57\x30\x17\x69\x34\x25\x5b\x29\x80\xd1\x1b\x53\x7f\x71\xc2\xf5\x57\x8b\xd8\xba\x55\xea\x35\x88\x38\xc6\xab\x7b\xa7\xd6\x4d\x28\x57\x94\xb6\xc1\x5d\x48\x3c\x35\x8f\xbd\xf6\xad\xd4\x91\x25\xac\x1d\x2d\xcb\xb5\xa3\xa5\x55\x33\x89\xcb\xd4\xf8\x31\xb7\x2e\xc2\xb1\x4a\xd1\x21\x9b\x15\x13\x8f\xe7\x50\x01\xdb\x1c\x79\x3b\x47\x7d\x07\x98\x50\x45\xc9\x26\x9b\x8c\x18\xc4\x09\x54\x09\x58\x0b\x15\x4e\x89\x11\xc8\x66\x8d\x94\x18\x75\x9a\x70\x5a\xc0\xb3\x9a\xfb\x3c\xf9\x3c\x61\x60\xcb\x93\x10\x80\xa2\x63\x21\x9c\x8a\x2f\x54\x59\xff\xbf\x00\x00\x00\xff\xff\x8e\x11\x6c\x61\x52\x48\x00\x00")

func compiledExecutorBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExecutorBinRuntime,
		"compiled/Executor.bin-runtime",
	)
}

func compiledExecutorBinRuntime() (*asset, error) {
	bytes, err := compiledExecutorBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Executor.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\xd3\x41\x4b\xc3\x30\x14\x07\xf0\xef\xf2\xce\x39\x4d\x1d\x92\xa3\xe8\xc1\x83\x20\x6e\xe0\x61\xf4\xf0\xd2\xbe\x4a\x68\x9a\x84\xe4\x65\x2e\x8c\x7d\x77\x69\x99\x5b\x0f\xe2\x2a\xa2\xed\xad\xd0\xfc\x79\x3f\xfe\xbc\xb7\xd9\x43\xe9\x6c\x64\xb4\x0c\x92\x43\x22\x01\xda\xfa\xc4\x11\xe4\xa6\x10\x60\xb1\x25\x90\xc0\x8e\xd1\xac\x92\xf7\x26\x83\x00\x97\xf8\xf8\x62\xff\xf9\x00\x04\x70\xf6\xdd\x57\xd2\x96\x17\x37\x4b\x38\x14\x02\x3c\x66\x54\x86\x40\xd6\x68\x22\x09\x88\x8c\x4c\x4f\x89\x51\x69\xa3\x39\x83\x84\xad\xa6\xf7\x73\xb6\x4e\xb6\x64\xed\x2c\x1c\xc4\x37\xac\xd3\xd0\x0a\x19\xcf\x61\x95\x99\x62\x3f\xf6\xf8\x5b\x19\x6c\x68\xa1\x3a\xcc\x05\x73\x1f\xbd\x5a\xfc\x87\xd9\xa6\xf6\xeb\xae\x4e\x68\x57\x36\x6b\xdd\xd2\x8c\x7a\x1e\x65\x5e\xe9\x37\x4b\xe1\x92\x1a\xab\x2a\x50\x8c\xb3\x51\xaf\xfb\xc5\x2e\x5d\x18\xd5\xf7\xf2\xfa\x0f\xe1\x83\x6b\xdb\x3d\xec\xbc\x0e\xd8\x67\x26\x5f\x83\xa1\xeb\xf1\x7e\xfa\x53\x1a\x7a\x9e\x83\xdb\x52\xf5\xea\x42\x33\x7d\x4f\x3f\x5b\xbc\xb9\x35\x79\xd7\xa1\x5e\xa8\x1e\xa5\xba\xfd\x25\xaa\xf8\x08\x00\x00\xff\xff\x20\x8c\x4d\x0b\x76\x06\x00\x00")

func compiledExtensionAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionAbi,
		"compiled/Extension.abi",
	)
}

func compiledExtensionAbi() (*asset, error) {
	bytes, err := compiledExtensionAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Extension.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x0b\x56\xeb\x3a\x0c\xdc\xd2\x48\xb2\x64\x79\x39\xfe\xee\x7f\x09\xef\x38\x4e\x29\x6d\x78\xe5\x26\x97\x0b\x87\x70\xa0\x74\x62\xeb\x33\x9a\x48\x8e\xc1\x61\x08\x50\x96\xe0\x20\x35\x02\x08\x1a\x0d\x80\x63\x34\x2d\x0a\x23\x14\x6a\x3e\x3f\xc1\x98\x77\x24\xcd\xbf\x43\x80\xfb\x7e\x03\x82\x18\x6d\xab\x72\x58\x16\x44\x63\x05\xe1\xe2\x95\x80\x60\x32\xf6\x8b\xcc\x61\x42\x4e\x86\xd6\x1a\x85\xcd\x4f\xd2\x38\x51\x89\x1c\xd4\x29\x2c\xb4\x85\x1d\x2d\x8e\xde\x33\x6f\x28\xe9\xbe\x36\x60\xa4\x91\x47\x5f\x68\xca\x3b\x4a\x23\x21\x32\x6d\x28\x23\x2e\xd4\xa0\x6d\x68\xaa\x0b\xd5\xba\xd0\x94\xab\x4a\x2b\x65\xa1\xbe\xaf\xad\x65\x58\x6b\x75\xd9\xe5\xb2\xdb\x6d\xca\xb1\x4b\x58\x91\x71\xd7\x85\x76\x87\xaa\xcb\xf2\x26\xdc\x35\x6a\xb9\x33\x7e\xaf\x44\xd1\x43\x25\x50\xfa\xdc\xe3\x43\x6d\xee\x09\x50\x72\x38\x3b\xcd\x0a\x30\x40\x89\x14\x8a\xdb\x9d\x44\x90\x84\x21\xef\xad\xf6\x63\x7d\x49\xa6\xff\xe0\x10\x83\xf8\xe4\x05\x0e\x87\x68\xc2\x6e\x15\xce\xa0\x27\x64\xab\x3d\x0d\xd0\x44\x36\x5f\x01\x7b\x14\xcb\x7f\xc2\xb4\xb5\xf4\xe1\x48\x92\x38\x6d\xd8\x3d\x5a\x17\x97\x2d\xfe\x20\x71\x7a\x58\xd1\xdf\x7e\x12\x6d\x3b\x38\xed\xdf\x8d\x10\x44\x1f\x33\x9f\x99\x50\x22\xbb\x7d\x9e\x60\x82\xec\xc8\x2f\x79\xf8\x8c\x89\x95\xc5\x5b\x44\x1a\xda\xe5\x5a\x50\xb6\x63\x04\x55\x4f\x46\x60\x64\x8f\x11\xc4\xb7\xa7\xe6\xb3\x8b\xec\xcc\xda\x13\x99\x31\xc9\x21\x33\x16\x3e\x9b\x59\x7b\xae\x76\x3c\x46\xf5\x11\x76\x26\x52\xf3\x63\xa4\x91\x8c\x10\x53\xb8\x5c\x59\x4e\x1f\xe4\x9f\xaa\x11\x3c\xe0\xcb\x14\xcc\xf5\xa8\x1f\xae\x63\x7a\xe9\x76\x3d\xf6\x41\x07\xab\x42\x38\x59\xbb\xe4\xf5\xcb\xf2\x14\xc9\xc7\x88\xb6\x71\x93\x43\x79\xd2\xfe\x41\x0d\x9f\xea\x3a\x91\x5d\xdb\xf5\x79\x06\xdb\x14\xc4\x99\x67\xcc\x44\x13\x17\xf1\x54\x77\x6b\xf4\x7e\x06\xfe\xcd\x3c\xc5\xae\x01\x84\xd5\xb1\xdf\x38\x93\x59\xd1\x8d\xdd\xe8\x90\x42\x7a\x63\x7d\x3c\xf5\x47\xcd\x83\xde\xee\x06\x24\x8d\xd2\xd6\x7d\xe9\xeb\xbf\x7d\x1d\xee\x6c\x4c\x9c\xe1\x44\xfb\x2e\x1a\xef\x6d\xde\x95\x34\xa7\xc5\x47\x4a\x4a\xeb\xd7\xae\x71\x99\x63\x47\xce\xec\x2e\x7b\xb6\xfc\x2f\xd8\x5c\x93\x70\x9b\x67\xec\x73\x3a\xb3\xb2\xcb\x36\xe7\xe8\x51\x23\x8f\x79\x4e\xee\x67\x64\x80\x96\xb9\xfe\xc6\x51\x19\xf3\x9c\x30\xe7\xe1\xdc\xef\x01\xbb\x8d\xc5\xd6\x9a\x83\x79\xeb\x4d\xfa\xc0\xd2\xba\x3f\x67\xf2\x3c\x2d\x2d\x5b\xbd\xee\xb6\x64\xfa\xb6\x6d\xe6\x6e\xfe\xe7\xd3\x33\xb3\xcf\x90\x0f\xb4\x5c\x14\x89\x6f\x75\xfc\x03\xad\x28\xca\x0b\xad\xe8\xac\xfa\x69\xad\xa8\xe8\x05\xad\xac\x6f\x17\xf5\xc2\x92\x7b\xf2\x9a\xfe\xb9\x5e\x1e\xec\x3e\x9c\x72\x0f\x3d\xe5\x4f\xd8\xaf\xf9\x15\xfb\xad\x5f\x61\x7f\x84\x73\xec\x7f\x34\x87\xbf\xa0\x22\x05\xcd\xc2\xe0\x5f\x56\x11\x7b\x9e\xff\x0f\x15\xb1\x1c\x2f\x54\xc4\x4a\xfb\xee\xe7\xc1\xbb\x57\x0c\xe9\xbf\x8c\xfd\xa8\xfc\x82\xfd\x68\x76\x81\xfd\x18\xeb\x77\xb3\x5f\x53\x71\x65\xe8\x8f\x9f\x04\xe2\x78\xd5\x5f\x1c\x57\xfa\x8b\xf3\xd9\xfe\xf2\x2e\xfb\xbf\x3b\x15\xb4\xac\xa4\x3d\xfc\xfc\x09\xcb\x9f\xdf\xff\x1e\x79\x2d\xf9\x0a\xaf\x0d\xdf\x79\xc2\x12\x1f\x12\xc9\xcb\x8f\x73\x99\x42\x7d\xc1\x65\x32\x5c\xe0\x32\x45\xfb\x4e\x2e\x39\x86\x1c\x62\x8d\xbf\xac\xdb\xe6\xf9\x26\xf0\xbf\xcc\x67\x6a\x17\x98\xcf\x22\xdf\xdd\x6d\x69\x24\x16\x13\xfa\x71\x25\xe7\x42\xaf\xf8\xac\x7a\x85\xcf\x56\xae\x29\x19\xc8\x64\x6a\x1c\x73\xcc\x91\x05\xea\x8c\x2c\x41\x33\x59\x0e\xec\x23\x96\x1c\x43\x76\x2d\xa5\xf7\xac\xc1\x52\x99\xaf\x02\xda\x9a\x25\xcd\x04\x68\x1b\xb1\x93\x87\xc4\x91\x29\xa3\xd3\x4c\x16\x9c\xfe\x0b\x00\x00\xff\xff\xe8\x8c\x18\x79\x7a\x16\x00\x00")

func compiledExtensionBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionBin,
		"compiled/Extension.bin",
	)
}

func compiledExtensionBin() (*asset, error) {
	bytes, err := compiledExtensionBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Extension.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x0b\x52\xe4\x3a\x0c\xbc\x52\x4b\xb2\x64\xf9\x38\xfe\xde\xff\x08\xaf\x1c\x67\x80\x99\xf0\x86\x4d\x96\x1d\x8a\x50\x14\xa4\x63\xeb\xd3\xea\x48\x8e\xc1\x61\x08\x50\x36\x20\x88\x11\x8c\x80\x1c\x34\x1a\x00\xd1\x58\x41\xb8\x78\x25\x20\x98\x8c\xfd\x22\x73\x98\x90\x93\xa1\xb5\x46\x61\xf3\x93\x34\x4e\x54\x22\x07\x75\x0a\x0b\x6d\x61\x47\x8b\xa3\xf7\xcc\x1b\x4a\xba\xaf\x0d\x18\x69\xe4\xd1\x17\x9a\xf2\x8e\xd2\x48\x88\x4c\x1b\xca\x88\x0b\x35\x68\x1b\x9a\xea\x42\xb5\x2e\x34\xe5\xaa\xd2\x4a\x59\xa8\xef\x6b\x6b\x19\xd6\x5a\x5d\x76\xb9\xec\x76\x9b\x72\xec\x12\x56\x64\xdc\x75\xa1\xdd\xa1\xea\xb2\xbc\x09\x77\x8d\x5a\x26\x5f\x8e\xd1\xb4\x48\x70\x90\xce\x4c\x8a\x2e\x1e\x17\xae\x1b\xb7\xa5\xcf\x3d\x3e\xd4\xe6\x9e\x00\x25\x87\xb3\xd3\xac\x00\x03\x94\x48\xa1\xb8\x3d\x49\x04\x49\x18\xf2\xd1\x6a\xc7\xc1\x2a\xc9\xf4\x1f\x1c\x62\x10\x9f\xbc\xc0\xe1\x10\x4d\xd8\xad\xc2\x19\xf4\x80\x6c\xb5\xa7\x01\x9a\xc8\xe6\x2b\x60\x8f\x62\xf9\x4f\x98\xb6\x96\x3e\x1c\x49\x12\xa7\x0d\x7b\x8f\xd6\xc5\x65\x8b\x3f\x48\x9c\x1e\x56\xf4\xb7\x9f\x44\xdb\x0e\x4e\xfb\xbd\x11\x82\xe8\x7d\xe6\x33\x13\x4a\x64\xb7\xbf\x27\x98\x20\x3b\xf2\x4b\x1e\xbe\x62\x62\x65\xf1\x16\x91\x86\x76\xb9\x16\x94\xed\x18\x41\xd5\x93\x11\x18\xd9\x7d\x04\xf1\xed\xad\xf9\xea\x22\x3b\xb3\xf6\x44\x66\x4c\x72\xc8\x8c\x85\xcf\x66\xd6\x1e\xab\x1d\x8f\x51\x7d\x86\x9d\x89\xd4\xfc\x18\x69\x24\x23\xc4\x14\x2e\x57\x96\xd3\x27\xf9\xa7\x6a\x04\x0f\xf8\x36\x05\x73\x3d\xea\x87\xeb\x98\x5e\xba\x5d\x8f\x7d\xd0\xc1\xaa\x10\x4e\xd6\x2e\x79\xfd\xb6\x3c\x45\xf2\x31\xa2\x6d\xdc\xe4\x50\x1e\xb4\x7f\x50\xc3\x97\xba\x4e\x64\xd7\x76\x7d\x9d\xc1\x36\x05\x71\xe6\x1d\x33\xd1\xc4\x45\x3c\xd5\xdd\x1a\x7d\x9c\x81\x7f\x33\x4f\xb1\x6b\x00\x61\x75\xec\x37\xce\x64\x56\x74\x63\x37\x3a\xa4\x90\xde\x58\x1f\x0f\xfd\x51\xf3\xa0\xb7\xa7\x01\x49\xa3\xb4\xf5\x5c\xfa\xfa\x6f\x5f\x87\x77\x36\x26\xce\x70\xa2\x7d\x17\x8d\x8f\x36\xdf\x95\x34\xa7\xc5\x67\x4a\x4a\xeb\xd7\xae\x71\x99\x63\x47\xce\xec\x2e\x7b\xb6\xfc\x2f\xd8\x5c\x93\x70\x9b\x67\xec\x73\x3a\xb3\xb2\xcb\x36\xe7\xe8\x5e\x23\xf7\x79\x4e\xee\x67\x64\x80\x96\xb9\xfe\xc6\x51\x19\xf3\x9c\x30\xe7\xe1\xdc\xef\x01\xbb\x8d\xc5\xd6\x9a\x83\x79\xeb\x4d\x7a\xc7\xd2\x7a\x3e\x67\xf2\x3c\x2d\x2d\x5b\xbd\xee\xb6\x64\xfa\xb6\x6d\xe6\x6e\xfe\xe7\xdb\x33\xb3\xcf\x90\x4f\xb4\x5c\x14\x89\x6f\x75\xfc\x03\xad\x28\xca\x13\xad\xe8\xac\xfa\x69\xad\xa8\xe8\x05\xad\xac\xbb\x8b\x7a\x61\xc9\x3d\x79\x4d\xff\x5c\x2f\x77\x76\xef\x4e\xb9\x87\x9e\xf2\x27\xec\xd7\xfc\x8c\xfd\xd6\xaf\xb0\x3f\xc2\x39\xf6\x3f\x9b\xc3\xdf\x50\x91\x82\x66\x61\xf0\x2f\xab\x88\x3d\xce\xff\xbb\x8a\x58\x8e\x17\x2a\x62\xa5\xbd\xfa\x7d\xf0\xee\x15\x43\xfa\x2f\x63\x3f\x2a\x3f\x61\x3f\x9a\x5d\x60\x3f\xc6\xfa\x6a\xf6\x6b\x2a\xae\x0c\xfd\xf1\x93\x40\x1c\xcf\xfa\x8b\xe3\x4a\x7f\x71\x3e\xdb\x5f\x3e\x64\xff\x77\xa7\x82\x96\x95\xb4\x87\x9f\x3f\x61\xf9\xe3\xf7\xdf\x3d\xaf\x25\x5f\xe1\xb5\xe1\x95\x27\x2c\xf1\x21\x91\xbc\xfc\x38\x97\x29\xd4\x27\x5c\x26\xc3\x05\x2e\x53\xb4\x57\x72\xc9\x31\xe4\x10\x6b\xfc\x65\xdd\x36\xcf\x2f\x81\xff\x65\x3e\x53\xbb\xc0\x7c\x16\x79\x75\xb7\xa5\x91\x58\x4c\xe8\xc7\x95\x9c\x0b\x3d\xe3\xb3\xea\x15\x3e\x5b\xb9\xa6\x64\x20\x93\xa9\x71\xcc\x31\x47\x16\xa8\x33\xb2\x04\xcd\x64\x39\xb0\x8f\x58\x72\x0c\xd9\xb5\x94\xde\xb3\x06\x4b\x65\x7e\x0a\x68\x6b\x96\x34\x13\xa0\x6d\xc4\x4e\x1e\x12\x47\xa6\x8c\x4e\x33\x59\x70\xfa\x2f\x00\x00\xff\xff\x6b\x77\x1a\x32\x3a\x16\x00\x00")

func compiledExtensionBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionBinRuntime,
		"compiled/Extension.bin-runtime",
	)
}

func compiledExtensionBinRuntime() (*asset, error) {
	bytes, err := compiledExtensionBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Extension.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionnativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x41\x4b\xc3\x40\x10\x85\xff\xcb\x9c\xf7\x14\xb5\x48\x8e\xa2\x07\x0f\x82\x58\xc1\x43\x09\x32\x49\x26\xb2\x64\x33\xbb\xec\xce\xc6\x86\xd2\xff\x2e\x09\xd5\xa2\x04\x1b\x04\xd3\xdc\x72\x98\x37\xf3\xe5\xf1\xde\x6e\x76\x50\x58\x0e\x82\x2c\x90\x8a\x8f\xa4\x40\xb3\x8b\x12\x20\xdd\x64\x0a\x18\x1b\x82\x14\x18\x45\xb7\xf4\x2a\xdb\x1b\x63\x8b\xfa\x89\x2a\x50\x60\xa3\x1c\xe6\x76\x9f\x63\xa0\x40\x3a\xd7\x7f\xe5\x9d\x50\xb8\x86\x7d\xa6\xc0\x61\x87\xb9\x21\x48\x2b\x34\x81\x14\x04\x41\xa1\x87\x28\x98\x6b\xa3\xa5\x83\x14\x5a\x4d\xef\x47\x69\x15\xb9\x10\x6d\x19\xf6\xea\x17\xb6\xaf\x9b\x1c\x9b\xa3\x36\x6a\x96\x8b\x64\x38\xfb\x9d\x3c\xef\xb9\x9f\x75\x43\xa7\xc0\xfb\x0d\xab\xcb\x85\x81\xdf\xdf\x4e\xf2\xfb\xb0\x60\x39\xdc\x6b\xfd\xc6\xe4\x4f\xb1\x63\x59\x7a\x0a\xe1\x1f\xd9\x47\x82\xfc\xe8\x6d\x4b\xe5\x8b\xf5\xf5\x94\x44\x24\x57\xab\x59\xf1\xac\xa0\x59\x47\xe7\x4c\x77\x7e\xba\x3f\x35\x6d\xf8\x81\xc2\xfa\x05\xf5\xad\x44\xc1\x1f\x85\x19\xc5\xc7\x9a\x92\xbc\xb7\xf4\xec\x95\x1b\x89\xed\xdd\xd6\x69\x8f\x83\x74\x82\xb1\x73\xd3\xcd\xf5\x4e\x65\x1f\x01\x00\x00\xff\xff\x46\xf2\x90\x9d\xb6\x06\x00\x00")

func compiledExtensionnativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionnativeAbi,
		"compiled/ExtensionNative.abi",
	)
}

func compiledExtensionnativeAbi() (*asset, error) {
	bytes, err := compiledExtensionnativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ExtensionNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionnativeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledExtensionnativeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionnativeBin,
		"compiled/ExtensionNative.bin",
	)
}

func compiledExtensionnativeBin() (*asset, error) {
	bytes, err := compiledExtensionnativeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ExtensionNative.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionnativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledExtensionnativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionnativeBinRuntime,
		"compiled/ExtensionNative.bin-runtime",
	)
}

func compiledExtensionnativeBinRuntime() (*asset, error) {
	bytes, err := compiledExtensionnativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ExtensionNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledImeternativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\xcd\x6a\xc3\x30\x0c\x7e\x17\x9d\x7d\x1a\x6c\x87\x1c\x77\xdf\x69\xc7\x52\x82\x12\xab\xc1\xcc\x91\x83\x2d\x75\x84\xd2\x77\x1f\x8c\x86\xec\xa7\x5b\x53\x48\xe3\x92\x63\x40\x12\xfa\x7e\xf4\x39\x9b\x03\xd4\x81\x93\x20\x0b\x14\x12\x95\x0c\x38\xee\x54\x12\x14\x9b\x03\x30\xb6\x04\x05\xa0\xb5\x11\x0c\x48\xdf\x0d\x5f\x94\x12\x1c\xb7\x66\x28\x60\x14\xb7\xa7\xb2\x95\x58\x36\x24\x60\x20\xa8\xfc\x1c\x32\x0e\x50\xc7\xf2\xf0\xf8\xf4\x39\xa0\xc3\x1e\x2b\x4f\x50\xec\xd0\x27\x32\x90\x04\x85\x5e\x54\xb0\x72\xde\x49\x0f\x05\xec\x1d\xbd\x8f\xbd\x3b\xe5\x5a\x5c\x60\x38\x9a\x59\x37\xc7\x24\x14\x2f\x2d\xfe\xb5\xff\x36\x8b\x9f\xa5\x54\x82\xa0\x7f\xd5\xae\xf3\x7d\x06\x6a\x4f\xdd\x93\xb9\x35\x63\x41\x1b\x94\xe5\xfc\x72\xbf\x51\xfa\x50\xbf\x91\x2d\xd1\xda\x6f\x20\x27\x01\xe1\xc0\x43\xd1\x9d\xc0\x69\xca\xa4\xd5\x25\xb5\xaa\x10\xfc\x44\xa9\xae\x40\x38\xc7\x15\x9f\xc4\xc8\x73\xcc\x4b\x39\xee\xd6\x56\x9b\x41\x88\x26\xaf\x12\x13\xd2\xa9\xc9\x1c\x4f\xb3\x90\xbc\x6a\x9f\x37\x2b\x8b\xd6\x01\x4e\xb6\x80\x5d\x5a\xb7\x7b\x79\x49\xfe\xfe\x39\x79\xd6\xc8\x64\xd7\x7c\x42\x0b\xbf\x15\xff\x24\xed\xda\xb9\x5e\xd4\xee\xdb\x8f\x00\x00\x00\xff\xff\xc6\xe9\x57\x95\x00\x0d\x00\x00")

func compiledImeternativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledImeternativeAbi,
		"compiled/IMeterNative.abi",
	)
}

func compiledImeternativeAbi() (*asset, error) {
	bytes, err := compiledImeternativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/IMeterNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledImeternativeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledImeternativeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledImeternativeBin,
		"compiled/IMeterNative.bin",
	)
}

func compiledImeternativeBin() (*asset, error) {
	bytes, err := compiledImeternativeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/IMeterNative.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledImeternativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledImeternativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledImeternativeBinRuntime,
		"compiled/IMeterNative.bin-runtime",
	)
}

func compiledImeternativeBinRuntime() (*asset, error) {
	bytes, err := compiledImeternativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/IMeterNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeasureAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcd\x31\x0a\xc2\x40\x10\x85\xe1\xbb\xbc\x7a\x4e\xb0\x77\xf0\x04\x21\xc5\x24\x4c\x60\x20\xce\x2e\xbb\x6f\x94\x45\xbc\xbb\x58\xd9\x58\x88\xf5\x0f\xff\xb7\x3c\xb0\xd7\x18\xd4\x20\x0a\x7b\x9a\xc0\xa3\x25\x07\xca\xb2\x0a\x42\xaf\x86\x02\x8f\xb0\x0e\x41\x4d\x7e\x5a\xd3\xa9\xdb\x69\x28\x87\x9e\xc3\x04\x83\x4a\xbb\x24\x75\xf3\xd3\x39\x51\xd0\xb2\x1b\x04\x9c\xed\x3d\x39\x32\x76\x7a\x0d\x3c\xe5\x27\xb4\x26\xff\x41\x6f\x6e\xf7\x6f\xe8\xfa\x0a\x00\x00\xff\xff\x0a\x34\xa0\xdd\xeb\x00\x00\x00")

func compiledMeasureAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeasureAbi,
		"compiled/Measure.abi",
	)
}

func compiledMeasureAbi() (*asset, error) {
	bytes, err := compiledMeasureAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Measure.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeasureBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\xc9\x6d\x04\x31\x0c\x6b\x89\xba\xe5\x72\x7c\xf6\x5f\x42\xe0\xf1\x6c\x26\xd9\x4f\x80\xac\x04\xf8\x90\x28\x83\x24\xec\x48\x38\x14\xc6\xa2\x09\x32\x27\x80\x60\xe1\x00\x12\x6b\x58\x33\x38\x81\x78\xe3\x08\x60\xec\x8e\x94\xbd\x2e\x01\x9e\x79\x07\x54\x9c\xf6\xad\x9c\x79\xb1\xe8\x20\xfc\x33\x0a\xa0\x2e\xeb\x0e\xf2\x84\x8b\xd6\xd1\x22\xb8\x90\x3a\x74\x5a\xec\x5a\x46\x97\xd1\x9a\xef\x9a\xb3\x85\xb5\x87\xfb\xad\x09\x56\xde\x14\x5d\x19\x6e\x6e\x0d\x78\x70\x3e\xde\x71\xa1\x8e\xc8\x17\x6e\xef\x82\xf8\x66\xf5\x57\x90\x3f\x9c\x2f\x97\x28\xe9\xa7\xa6\x4f\xfc\x01\x27\x1d\xd7\x41\x9b\xf3\xfd\x3e\x52\x20\x79\x55\x32\x12\xd2\xc8\x8e\xb6\xd1\x7e\x6b\xb3\xba\xe8\xd5\x9b\xd3\x42\xc6\xe9\xca\x3c\xa7\x1b\x75\xd2\x81\x4a\x6e\xce\x51\xa3\x06\x0b\x2c\x19\xc2\x73\x48\x82\xd8\x78\xa8\xae\xce\xea\x35\xb3\x6f\x1b\x3b\x8a\xa6\x90\x75\x96\x90\x32\x2b\x2b\xd7\xd5\x86\x64\x69\x2b\xf6\x07\x31\x48\x05\xb8\x7c\x05\x00\x00\xff\xff\x93\x05\x32\xb5\x80\x02\x00\x00")

func compiledMeasureBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeasureBin,
		"compiled/Measure.bin",
	)
}

func compiledMeasureBin() (*asset, error) {
	bytes, err := compiledMeasureBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Measure.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeasureBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\x5d\x6e\xc6\x20\x0c\xbb\x92\xf3\xe7\x84\xe3\x40\x69\xef\x7f\x84\x89\xd2\x6f\xdf\xb6\x97\x49\x5b\xf2\x00\x38\x16\xd8\x16\x44\x81\x70\x84\x12\x70\xa3\xac\x53\x8b\x24\x00\x8b\x3c\x20\xf8\x63\x35\xc0\x69\xd7\x53\xc2\x02\xcd\xfb\x1c\x99\xda\xc4\x09\x3f\x23\x17\x56\x79\xd8\x1c\x83\x0b\xa3\x46\xc6\x58\x6f\x17\xae\x19\xc3\xbc\x20\x41\xc4\xa3\x68\xa3\x01\xde\x9d\x0c\xc6\x00\xde\x3c\xce\x9f\xbc\x74\x22\xeb\xc5\x5b\xab\x21\x3f\x55\xfd\x56\xc2\xb7\xe6\x3b\x25\x29\xf9\xea\xe9\x3f\xf9\x40\x4b\x76\xea\x90\xa5\xf9\xb9\x1f\x65\xb0\xba\x91\xca\x82\x0d\x89\xed\x6d\x8e\xef\xde\xa2\x5f\xf2\x9a\x9d\x67\xa4\xcd\x3d\xb5\x73\xef\x1e\xd6\x6e\x02\x5d\x18\xd4\xec\xd9\x53\x0d\x51\x0a\xd3\x73\x5a\x41\x34\x74\xba\x5f\x87\x3a\x7b\xd5\xb1\x62\x3c\xd0\xbc\x4c\xe2\x50\x4b\x6b\x67\x57\xd7\x7e\x8d\x69\xd5\xc6\x95\xeb\x83\x04\xac\x03\xda\x3e\x02\x00\x00\xff\xff\x7f\x54\xea\x3e\x40\x02\x00\x00")

func compiledMeasureBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeasureBinRuntime,
		"compiled/Measure.bin-runtime",
	)
}

func compiledMeasureBinRuntime() (*asset, error) {
	bytes, err := compiledMeasureBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Measure.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeterAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xcb\xaa\x14\x31\x10\xfd\x97\x5a\x67\x25\x28\xd2\x3b\x5d\xb8\x13\x17\xba\xbb\x0c\x52\xdd\x5d\x2d\x81\xa4\x2a\x24\x95\x19\x9b\xcb\xfd\x77\x99\xb9\xfd\x42\xfb\xe5\x38\x32\xb3\xea\x86\x7a\x9e\x53\x75\x92\x3c\x3d\x43\x25\x9c\x14\x59\xa1\xd0\x98\xc9\x80\xe5\x90\x35\x41\xf1\x74\x30\xc0\xe8\x09\x8a\xd7\x8f\x01\xc9\xda\x99\x9e\x7b\x0b\x18\xd0\x36\x9c\xff\x92\x46\xcb\x3f\xe0\xe5\x60\x20\x60\x8b\xa5\x23\x28\x1a\x74\x89\x0c\x24\x45\xa5\xcf\x59\xb1\xb4\xce\x6a\x0b\x05\x84\x1c\x69\x0c\x6d\x32\x57\x6a\x85\xe1\xc5\x4c\xdb\xe9\xa2\x87\x7e\x86\xa2\xdf\x53\x20\xae\x29\x8e\x19\xb0\xae\x23\xa5\x74\x49\xd0\x3b\x1d\xd1\xe5\x49\x91\x6c\x59\xdf\xbc\x7d\x77\x69\xb0\x73\xc1\x10\xa2\x1c\x17\x90\xa5\x5c\x55\xe7\x94\x43\x82\x52\xc4\xed\x84\xc7\xc2\xbd\xd3\x16\xc8\x45\xce\x55\x14\xdd\xd7\x1c\x82\x6b\xb7\xa8\x9f\x42\xdb\x6e\xee\x68\xe9\xf4\x0f\xdc\x37\x51\xfc\x3a\xf1\x2a\xeb\x76\xf4\x92\x59\x57\x27\xa3\x11\x39\x35\x14\x3f\xbd\x16\x7b\xc0\xf1\xd4\x54\x59\x8f\x2e\xed\x99\xcd\xfb\x5b\xaa\xe2\xb7\x8e\x46\x5a\xe5\xc4\xb3\x92\x18\x7b\x2e\xd1\x21\x57\xf4\xa5\x99\x6f\xba\x33\xff\xd7\xbd\x5a\xe4\x33\xb5\xbe\x14\xf7\x48\x87\xcc\x0d\xd7\xf8\xae\x2b\x7c\x67\x29\xfb\xc7\x3e\x61\x3f\xe6\xc8\x54\xdf\xe1\x84\xfd\x6b\x1d\x9b\x3d\xf7\xdf\xe4\x72\x73\x4e\x4e\x9d\x9e\x67\xb0\x45\xf2\x68\xf9\x2c\xa6\xdb\x83\x44\x16\x6e\xbd\xe4\x34\xb7\x7c\x96\x6b\xfa\x49\x75\x4f\xc0\xf6\x2e\x2e\x04\x2c\xad\xe6\xe0\xde\x95\xde\xff\x1c\xf8\x36\xaa\xb5\x73\xa2\x23\xb1\x5e\x0d\x69\x65\x90\x0b\x11\xab\xef\x9a\xeb\x81\x7d\xb8\xbc\x73\xd0\xfd\x01\xec\xf0\x2b\x00\x00\xff\xff\x66\xc7\x72\x63\xff\x09\x00\x00")

func compiledMeterAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeterAbi,
		"compiled/Meter.abi",
	)
}

func compiledMeterAbi() (*asset, error) {
	bytes, err := compiledMeterAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Meter.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeterBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x09\x72\xe3\x30\x0e\xfc\x12\x0e\xe2\x7a\x0e\xcf\xff\x3f\x61\x8b\xa2\x7c\xc5\x19\xc7\xb2\x93\xcc\xee\x8e\x54\x71\x6c\x88\x04\xc1\x66\xa3\x09\x4a\xc1\x41\x21\x81\x10\x27\x07\x14\x45\x00\x04\x31\x05\x00\x87\xd1\xa4\x08\x28\xc2\x48\xb3\x1d\x02\x10\xcc\x27\x1c\xf3\x73\x30\xc0\xa5\xbf\x02\x24\x56\xdc\x5a\xe5\xb1\x3c\xb0\x58\x05\x84\x17\xaf\x00\x48\xca\x63\xbf\x50\x1d\x94\x41\x47\x6b\x1d\x18\xd3\x1c\xa7\x24\xb1\xcd\x1a\xd2\xb3\x95\x65\xc5\xb4\x5b\xd1\x51\xa1\xb5\xb6\xac\x39\x96\x95\xb8\xb8\xd1\xc9\xda\xf6\xb6\x8c\x5c\xbb\xa8\x6d\x56\x92\xbd\xad\x41\x06\x27\xc6\x65\xf5\xbc\xac\x21\xcd\xa3\xa4\xdd\xda\x71\x59\x73\x80\x44\x2d\x65\xb3\xb2\xed\xd6\x52\x58\xcc\x79\xb7\x36\x5d\xd6\xe6\x81\x2c\x75\xc5\x90\xa4\xec\xd6\xa6\xd4\x1b\xf7\x65\x75\x15\x93\x72\x59\x87\xcb\xfa\xd4\xfb\xf5\x81\x1a\xb3\xcf\x68\xa2\xb3\x4f\x02\x41\xdf\x56\x86\x00\xd0\xc9\x11\xd8\x49\xc8\xd9\xd1\x51\xe6\x1f\xad\x67\x81\x02\x0e\x82\xb1\xb7\x0d\x70\x70\x76\x9e\xfe\xa5\xcc\xf6\xb8\x46\x45\xd8\x30\x71\x82\xad\xbf\x27\xd8\x7d\x38\xce\x5e\x2b\x8a\xde\xe7\xf8\x02\xeb\x8e\xed\x6f\x3d\x57\xc0\x6d\x05\x97\x2f\xd6\xdd\x17\xcf\xb1\x75\xc6\xc8\xdb\xf8\xbc\x8d\x04\x90\x81\x31\x50\x6f\xe3\x9c\x9e\x83\x96\xef\xd3\x1c\x03\x81\x03\x06\x5f\xe1\x33\x5b\x7e\xc4\x07\x7d\x4c\x7e\x3a\xb0\x02\xaf\x88\x26\x3e\x2c\x76\xe6\xd7\x57\x17\xea\x05\xa3\xa0\xd8\x3c\xb0\x7c\xb4\xed\xd1\x21\x08\xe7\x9b\xb5\x20\x94\x75\x7f\x98\xd3\xc3\x99\x14\xb9\x9f\x49\xe9\x33\xc9\xa8\xdc\x7a\x3f\xe2\xb5\xdf\xe3\x43\xfc\x43\xf8\xfc\x18\xbe\xda\xf0\x6d\x7c\x49\xef\xf1\x25\x9d\xf8\xba\xca\xad\x77\x85\x19\xe1\xfa\x3c\x32\x42\xe8\xfd\x08\xb5\x7c\x3f\xd6\x67\x5c\x5c\xfb\xcb\xcc\xa0\xde\xee\xa3\x1d\xaa\x08\x91\x7e\x4e\x59\xf8\xac\x06\x7f\x56\x16\xc6\xf2\x94\xb2\xb0\xf2\x0f\x2a\x0b\xdb\x3d\x3e\x5c\xea\x2f\x2b\x4b\xf8\xfb\xca\xc2\x9d\xee\x66\x92\x12\xfe\x8f\x69\x40\xe4\xf7\x35\x20\xa9\xdd\x23\x61\xf3\xb3\xa8\xbd\x9c\x49\x29\x3e\xc1\xb7\xdb\x7f\x1f\xbe\x67\x2c\x2b\xb4\xa3\xb3\x55\xd0\xcd\xba\xb2\x7c\xce\x68\x55\x82\x53\x1d\x20\x2e\xfd\x6d\x08\x4b\x12\x20\x90\xa4\x43\x8b\x8a\xf6\x63\x95\xe0\xf4\x75\xca\xfa\x15\xe5\xb4\x2d\x7c\x99\x8f\xcc\xff\x48\xdb\x2b\x04\xe0\xf2\x7d\x8e\xba\xaa\x60\x3f\x84\xfc\x77\x8d\xec\x73\xd5\x44\xc0\xe9\x88\xc7\x83\x28\x0d\xaf\x52\x3a\x76\xe9\xa5\x57\x6b\x52\x1a\xa6\x61\x98\xc8\x1a\x76\x4f\x83\x5b\x9b\x35\x78\x85\x61\x85\x28\xb0\x4b\x21\x80\x5c\xbd\x5a\xe5\x12\x24\x9e\x9e\x65\x52\x9e\x3b\xc2\xc6\xc4\xc9\xc8\x8d\x8f\xfb\x0a\x33\x1c\x89\x59\x19\x4c\x3b\x2b\xb6\xdd\x3f\x5e\x9f\x1d\xde\x39\x87\xc0\x3e\x03\x48\x73\x0d\xe8\x1c\xbf\xf3\xcc\xe3\x8d\x09\xe6\xc0\x05\x65\xcf\x7e\x0d\xbc\xcd\x7e\xc9\x03\x2f\x4f\xb3\x88\x71\xdb\xd9\xdb\xd7\xb7\xbd\xdd\xd5\x0e\x34\xed\x73\xb5\xf7\x5d\x52\x4b\xb9\xf6\x79\xd1\x8f\xeb\x1d\xf6\x3a\xa7\x3f\xcf\x16\x3f\xc4\xc3\xef\xcc\x96\xbf\x93\xa7\x92\x26\x7e\xf3\x56\x04\xab\x5b\x35\x36\xd1\xb5\x01\x5e\xd9\x22\xbf\x4c\x8a\x0b\x27\x3e\xab\x87\x66\x55\x72\x89\xc5\xc1\x86\x92\x89\x86\x56\x4b\x1a\xda\x39\x13\xcc\xff\xc6\x26\x3a\xaf\x50\xd6\x98\xca\x68\x89\x40\x51\xab\x56\x1d\x66\x8a\xda\x95\x55\x4e\x1a\xf8\x40\x91\x37\x56\xfc\x9b\xab\xbc\xcd\x9a\x9c\x24\x01\xaf\x3a\xee\xa4\x92\xb3\x22\x96\xec\x69\xde\x73\x97\x0b\xde\x33\x62\x29\x0e\x9f\xaa\xbe\x53\x9e\x28\x20\xdd\x66\xce\x61\x15\x12\xc4\x16\xb0\x55\xba\xdb\xfa\xd0\x4f\xe8\x90\x1f\xd4\xff\x17\x91\xde\x79\xf6\x84\xe6\x05\x94\x07\x9a\x17\x38\x5e\xd0\xbc\x60\x79\x41\xf3\xd6\x2f\xfd\xa2\x3e\x49\xf7\xf5\x89\xa4\x77\xb4\xe0\xa3\xe2\xce\xf8\xc3\x98\xff\xc0\xbc\x8f\x7b\xdd\xa1\xbc\xf1\x74\xa4\x35\xa6\xed\xdd\x5d\x6e\x4d\x4c\x0e\x8e\x74\x9c\xfd\x11\x02\x3d\x5c\xff\x29\xf6\x67\xcf\x0f\xd8\x9f\xa3\xbf\xc0\xfe\x5c\xd2\x31\xf6\x1f\xe3\x84\x94\x7d\x57\x2c\x82\xbf\xb7\x2b\x12\x7c\xb5\x2b\x1a\xab\x68\x55\x25\xd0\x61\x44\xa0\x4d\xd1\xd8\x92\xca\xfc\x65\xa4\x62\x38\xfb\xcc\x6f\x9a\x9e\xd9\x15\xb7\x39\xd6\xe7\xf7\x80\xa3\x9c\xaf\xb5\x5a\x1b\xf1\xf7\xeb\xce\x52\xdb\x03\x16\x96\x8e\x2f\xb0\xb0\x0c\x7b\xab\xee\x5c\x7b\xf3\x21\xbd\xfa\xd6\xaa\xe0\x2f\x55\x9d\x9f\x69\xbc\x23\xe2\x86\x69\xcf\x59\xec\x28\xcb\x06\x26\x4d\x32\xc4\xd3\xb9\xb2\xe0\x1f\xd2\xd6\x5f\xc0\xec\xe6\x54\x78\x7e\xf3\xf6\x04\xc7\x1b\x8f\x07\x1c\x6f\xc2\x2f\x70\xbc\x69\x1c\xe3\xf8\xae\x9c\xad\xf7\x5f\x3c\x4f\xb4\x37\xce\x13\xb4\x9d\x28\xce\x67\x09\x80\xe7\xce\x13\x47\x39\x6a\x09\x0a\x8a\x0c\xe7\xff\x5f\x8e\xc2\xd7\x1c\xed\x0f\xcf\xff\xfd\xab\xf3\xff\x64\xe0\xa1\x88\x0f\xbe\xdb\x69\x6d\x90\x50\x6e\x58\x3a\x55\x8f\xa2\x51\xa9\x80\xfa\xa8\x6c\xde\x72\x0e\xa1\x92\x6d\x16\x7f\x35\x65\x44\x25\x1f\x22\x39\xb5\x21\xc4\x85\xfb\x38\xaf\xed\x13\xef\x76\x4e\x3b\x2b\x40\x46\x15\x25\xcb\x96\x8d\x18\xc4\x09\x18\x10\xd1\x4a\xa9\x6c\x43\xc4\x8c\xb2\x67\xa7\x90\x94\xd1\x33\xf5\x9e\x70\x54\xcd\x85\x1c\x4a\x1d\xe2\x35\x71\x69\xc5\x38\x05\xba\x79\x58\x03\xa0\xf8\x4f\x00\x00\x00\xff\xff\x26\x40\x91\xb8\xc0\x1e\x00\x00")

func compiledMeterBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeterBin,
		"compiled/Meter.bin",
	)
}

func compiledMeterBin() (*asset, error) {
	bytes, err := compiledMeterBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Meter.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeterBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x09\x76\x22\x31\x0e\xbd\x92\x16\x6b\x3b\x8e\xd7\xfb\x1f\x61\x9e\xcb\xc5\x16\xd2\x84\x82\x24\x3d\x33\x5d\xf5\x42\x40\xb8\x64\xf9\xfb\xeb\x4b\x46\xc1\x41\x21\x81\x90\x02\x24\x56\x04\x45\x80\x3c\xc4\x14\x00\x58\xac\x02\xc2\x8b\x57\x00\x24\xe5\xb1\x5f\xa8\x0e\xca\xa0\xa3\xb5\x0e\x8c\x69\xce\x53\x92\xd8\x66\x0d\xe9\xd9\xca\xb2\x62\xda\xad\xe8\xa8\xd0\x5a\x5b\xd6\x1c\xcb\x4a\x5c\xdc\xe8\x64\x6d\xfb\x58\x46\xae\x5d\xd4\x36\x2b\xc9\x3e\xd6\x20\x83\x13\xe3\xb2\x7a\x5e\xd6\x90\xe6\x51\xd2\x6e\xed\xb8\xac\x39\x40\xa2\x96\xb2\x59\xd9\x76\x6b\x29\x2c\xe6\xbc\x5b\x9b\x2e\x6b\xf3\x40\x96\xba\x62\x48\x52\x76\x6b\x53\xea\x8d\xfb\xb2\xba\x8a\x49\x99\x28\x3a\x8c\x26\x85\x93\x03\xca\x5c\x75\x85\x85\xee\xb2\xcb\x86\x78\x8d\xf9\xcc\x68\xa2\xf3\x99\x04\x82\xbe\xed\x0c\x01\xa0\x93\x23\xb0\x93\x90\xb3\xa3\xa3\xcc\x3f\x5a\xdf\x05\x0a\x38\x08\xc6\x3e\x36\xc0\xc1\xd9\x79\xfa\x97\x32\xc7\xe3\x9a\x15\x61\xc3\xc4\x09\xb6\xe7\x3d\xc1\xee\xc3\x71\x3e\xb5\xa2\xe8\x7d\xce\x2f\xb0\xee\xd8\xfe\xd6\xf7\x0a\xb8\xed\xe0\xf2\xc5\xba\xfb\xe2\x39\xb7\xce\x18\x79\x9b\x9f\xb7\x99\x00\x32\x30\x06\xea\x6d\x9c\xd3\x73\xd0\xf2\x7d\x5a\x63\x20\x70\xc0\xe0\x2b\x7c\xe6\xc8\x8f\xf8\xa0\x8f\xc9\x4f\x07\x56\xe0\x15\xd1\xc4\x87\xc5\xce\xfc\xfa\xea\x42\xbd\x60\x14\x14\x9b\x07\x96\x8f\xb6\x3d\x3a\x04\xe1\x7c\xb3\x17\x84\xb2\xee\x0f\x6b\x7a\xb8\x92\x22\xf7\x2b\x29\x7d\x26\x19\x95\x5b\xef\x47\xbc\xf6\x7b\x7c\x88\x7f\x08\x9f\x1f\xc3\x57\x1b\xbe\x8d\x2f\xe9\x3d\xbe\xa4\x13\x5f\x57\xb9\xf5\xae\x30\x23\x5c\xaf\x47\x66\x08\xbd\x9f\xa1\x96\xef\xc7\xfa\x8c\x8b\x6b\x7f\x99\x19\xd4\xdb\x7d\xb4\x43\x15\x21\xd2\xcf\x29\x0b\x9f\xd5\xe0\xcf\xca\xc2\x58\x9e\x52\x16\x56\xfe\x41\x65\x61\xbb\xc7\x87\x4b\xfd\x65\x65\x09\x7f\x5f\x59\xb8\xd3\xdd\x4a\x52\xc2\xff\x31\x0d\x88\xfc\xbe\x06\x24\xb5\x7b\x24\x6c\xbe\x16\xb5\x97\x33\x29\xc5\x27\xf8\x76\xfb\xef\xc3\xf7\x8c\x65\x85\x76\x74\xb5\x0a\xba\x59\x57\x96\xcf\x15\xad\x4e\x70\xaa\x03\xc4\xe5\x79\x1b\xc2\x92\x04\x08\x24\xe9\xd0\xa2\xa2\xfd\x58\x27\x38\x7d\x9d\xb2\x7e\x45\x39\x6d\x0b\x5f\xe6\x23\xeb\x3f\x32\xf6\x0a\x01\xb8\xbc\x9f\xb3\x12\x6c\x73\x1f\x42\xfe\xbb\x66\xf6\xb9\x6b\x22\xe0\x74\xc4\xe3\x41\x94\x86\x57\x29\x1d\xbb\xf4\xd2\xab\x35\x29\x0d\xd3\x30\x4c\x64\x0d\xbb\xa7\xc1\xad\xcd\x1e\xbc\xc2\xb0\x42\x14\xd8\xa5\x10\x40\xae\x5e\xad\x72\x09\x12\x4f\xcf\x32\x29\xcf\x8a\xb0\x31\x71\x32\x72\xe3\xe3\xbe\xc3\x0c\x47\x62\x56\x06\xd3\xce\x8a\x6d\xf7\x8f\xd7\x67\x87\x77\xce\x21\xb0\xaf\x00\xd2\xdc\x03\x3a\xc7\xef\x3c\xf3\x78\x63\x82\x39\x70\x41\xd9\xb3\x5f\x03\x6f\xb3\x5f\xf2\xc0\xcb\xb7\x59\xc4\xb8\xed\xec\xed\xeb\xdd\x3e\xee\xaa\x02\x4d\xfb\xdc\xed\xbd\x4a\x6a\x29\xd7\x3e\x2f\xfa\x71\x5d\x61\xaf\x73\xfa\xf3\x6c\xf1\x43\x3c\xfc\xce\x6c\xf9\x3b\x79\x2a\x69\xe2\x37\x6f\x45\xb0\xba\x75\x63\x13\x5d\x1b\xe0\x95\x2d\xf2\xcb\xa4\xb8\x70\xe2\xb3\x7e\x68\x76\x25\x97\x58\x1c\x6c\x28\x99\x68\x68\xb5\xa4\xa1\x9d\x33\xc1\xfc\x6f\x6c\xa2\xf3\x0a\x65\x8d\xa9\x8c\x96\x08\x14\xb5\x6a\xd5\x61\xa6\xa8\x5d\x59\xe5\xa4\x81\x0f\x14\x79\x63\xc5\xbf\xb9\xcb\xdb\xaa\xc9\x49\x12\xf0\xea\xe3\x4e\x2a\x39\x3b\x62\xc9\x9e\xe6\x3d\xab\x5c\xf0\x9e\x11\x4b\x71\xf8\xd4\xf5\x9d\xf2\x44\x01\xe9\x36\x73\x0e\xab\x90\x20\xb6\x80\xad\xd3\xdd\xf6\x87\x7e\x42\x87\xfc\xa0\xfe\xbf\x88\xf4\xce\xb3\x27\x34\x2f\xa0\x3c\xd0\xbc\xc0\xf1\x82\xe6\x05\xcb\x0b\x9a\xb7\x3e\xe9\x17\xfd\x49\xba\xef\x4f\x24\xbd\xa3\x05\x1f\x15\x77\xc6\x1f\xc6\xfc\x07\xe6\x7d\xac\x75\x87\xf2\xc6\xd3\x91\xd1\x98\x7c\x46\x93\x5b\x13\x93\x83\x33\x1d\x67\x7f\x84\x40\x0f\xd7\x7f\x8a\xfd\xd9\xf3\x03\xf6\xe7\xe8\x2f\xb0\x3f\x97\x74\x8c\xfd\xc7\x38\x21\x65\xaf\x8a\x45\xf0\xf7\xaa\x22\xc1\x57\x55\xd1\x58\x45\xab\x2a\x81\x0e\x23\x02\x6d\x8a\xc6\x96\x54\xe6\x27\x23\x15\xc3\xf9\xcc\x7c\xa7\xe9\x99\xaa\xb8\xad\xb1\x3e\x5f\x03\x8e\x72\xbe\xd6\x6a\x6d\xc4\xdf\xef\x3b\x4b\x6d\x0f\x58\x58\x3a\xbe\xc0\xc2\x32\xec\xad\xbe\x73\xd5\xe6\x43\x7a\xf5\xad\x5d\xc1\x5f\xea\x3a\x3f\xd3\x78\x47\xc4\x0d\xd3\x9e\xb3\xd8\x51\x96\x0d\x4c\x9a\x64\x88\xa7\x73\x67\xc1\x3f\xa4\xad\xbf\x80\xd9\xcd\xa9\xf0\xfc\xcb\xdb\x13\x1c\x6f\x3c\x1e\x70\xbc\x09\xbf\xc0\xf1\xa6\x71\x8c\xe3\xbb\x72\xb6\xde\x7f\xf1\x3c\xd1\xde\x38\x4f\xd0\x76\xa2\x38\x9f\x25\x00\x9e\x3b\x4f\x1c\xe5\xa8\x25\x28\x28\x32\x9c\xff\x7f\x39\x0a\x5f\x73\xb4\x3f\x3c\xff\xf7\xaf\xce\xff\x93\x81\x87\x22\x3e\xf8\xdb\x4e\x6b\x83\x84\x72\xc3\xd2\xa9\x7a\x14\x8d\x4a\x05\xd4\x47\x65\xf3\x96\x73\x08\x95\x6c\xb3\xf9\xab\x29\x23\x2a\xf9\x10\xc9\xa9\x0d\x21\x2e\xdc\xc7\x79\x6f\x9f\xf8\x6d\xe7\x54\x59\x01\x32\xaa\x28\x59\xb6\x6c\xc4\x20\x4e\xc0\x80\x88\x56\x4a\x65\x1b\x22\x66\x94\x3d\x3b\x85\xa4\x8c\x9e\xa9\xf7\x84\xa3\x6a\x2e\xe4\x50\xea\x10\xaf\x89\x4b\x2b\xc6\x29\xd0\xcd\xc3\x1a\x00\xc5\x7f\x02\x00\x00\xff\xff\x60\x48\x68\x7e\x80\x1e\x00\x00")

func compiledMeterBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeterBinRuntime,
		"compiled/Meter.bin-runtime",
	)
}

func compiledMeterBinRuntime() (*asset, error) {
	bytes, err := compiledMeterBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Meter.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMetererc20Abi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xcb\xaa\x14\x31\x10\xfd\x97\x5a\x67\x25\x28\xd2\x3b\x5d\xb8\x13\x17\xba\xbb\x0c\x52\xdd\x5d\x2d\x81\xa4\x2a\x24\x95\x19\x9b\xcb\xfd\x77\x99\xb9\xfd\x42\xfb\xe5\x38\x32\xb3\xea\x86\x7a\x9e\x53\x75\x92\x3c\x3d\x43\x25\x9c\x14\x59\xa1\xd0\x98\xc9\x80\xe5\x90\x35\x41\xf1\x74\x30\xc0\xe8\x09\x8a\xd7\x8f\x01\xc9\xda\x99\x9e\x7b\x0b\x18\xd0\x36\x9c\xff\x92\x46\xcb\x3f\xe0\xe5\x60\x20\x60\x8b\xa5\x23\x28\x1a\x74\x89\x0c\x24\x45\xa5\xcf\x59\xb1\xb4\xce\x6a\x0b\x05\x84\x1c\x69\x0c\x6d\x32\x57\x6a\x85\xe1\xc5\x4c\xdb\xe9\xa2\x87\x7e\x86\xa2\xdf\x53\x20\xae\x29\x8e\x19\xb0\xae\x23\xa5\x74\x49\xd0\x3b\x1d\xd1\xe5\x49\x91\x6c\x59\xdf\xbc\x7d\x77\x69\xb0\x73\xc1\x10\xa2\x1c\x17\x90\xa5\x5c\x55\xe7\x94\x43\x82\x52\xc4\xed\x84\xc7\xc2\xbd\xd3\x16\xc8\x45\xce\x55\x14\xdd\xd7\x1c\x82\x6b\xb7\xa8\x9f\x42\xdb\x6e\xee\x68\xe9\xf4\x0f\xdc\x37\x51\xfc\x3a\xf1\x2a\xeb\x76\xf4\x92\x59\x57\x27\xa3\x11\x39\x35\x14\x3f\xbd\x16\x7b\xc0\xf1\xd4\x54\x59\x8f\x2e\xed\x99\xcd\xfb\x5b\xaa\xe2\xb7\x8e\x46\x5a\xe5\xc4\xb3\x92\x18\x7b\x2e\xd1\x21\x57\xf4\xa5\x99\x6f\xba\x33\xff\xd7\xbd\x5a\xe4\x33\xb5\xbe\x14\xf7\x48\x87\xcc\x0d\xd7\xf8\xae\x2b\x7c\x67\x29\xfb\xc7\x3e\x61\x3f\xe6\xc8\x54\xdf\xe1\x84\xfd\x6b\x1d\x9b\x3d\xf7\xdf\xe4\x72\x73\x4e\x4e\x9d\x9e\x67\xb0\x45\xf2\x68\xf9\x2c\xa6\xdb\x83\x44\x16\x6e\xbd\xe4\x34\xb7\x7c\x96\x6b\xfa\x49\x75\x4f\xc0\xf6\x2e\x2e\x04\x2c\xad\xe6\xe0\xde\x95\xde\xff\x1c\xf8\x36\xaa\xb5\x73\xa2\x23\xb1\x5e\x0d\x69\x65\x90\x0b\x11\xab\xef\x9a\xeb\x81\x7d\xb8\xbc\x73\xd0\xfd\x01\xec\xf0\x2b\x00\x00\xff\xff\x66\xc7\x72\x63\xff\x09\x00\x00")

func compiledMetererc20AbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledMetererc20Abi,
		"compiled/MeterERC20.abi",
	)
}

func compiledMetererc20Abi() (*asset, error) {
	bytes, err := compiledMetererc20AbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterERC20.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMetererc20Bin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x09\x72\xe3\x30\x0e\xfc\x12\x0e\xe2\xe0\x73\x78\xfe\xff\x09\x5b\x10\x15\x1f\x71\xc6\xb1\x6c\x27\xb3\xbb\x63\x55\x64\x07\x22\x41\xb2\xd9\x68\x80\x52\x70\x50\x48\x20\xc4\xc9\x01\x45\x11\x00\x41\x4c\x01\xc0\x61\x76\xa9\x02\x8a\x30\x73\xf2\xf8\x06\x82\x78\xc2\x39\xee\x93\x01\xce\xfd\x15\x20\xb1\xe2\xd6\xaa\xcc\xe5\x81\xc5\x1a\x20\x3c\xf9\xc9\x00\x49\x79\xee\x1f\x54\x07\x65\xd0\xd9\xfb\x00\xc6\x14\xe3\xd4\x24\xb6\x59\xb3\x8c\x62\x75\x59\x31\xed\x56\x74\x54\xe8\xbd\x2f\x6b\xc9\xcb\x4a\x5c\xdd\xe8\xc3\xda\xf7\xb6\x8c\xdc\x86\xa8\x6d\x56\x92\xbd\xad\x41\x01\x27\xc6\x65\xf5\xb2\xac\x59\xba\xe7\x9a\x76\xeb\xc0\x65\x2d\x19\x24\xb7\x5a\x37\x2b\xdb\x6e\xad\x95\xc5\x9c\x77\x6b\xd7\x65\xed\x9e\x91\xa5\xad\x39\x24\xa9\xbb\xb5\x2b\x8d\xce\x63\x59\x5d\xc5\xa4\x9e\xf7\xe1\xbc\x3f\xed\x76\x7f\xa0\xe5\xe8\x33\xbb\x68\xf4\x49\x20\xe8\xdb\xce\x10\x00\x3a\x39\x02\x3b\x09\x39\x3b\x3a\x4a\xfc\xd1\x7a\x96\x51\xc0\x41\x30\xef\x6d\x33\x38\x38\x3b\x87\x7f\xa9\xd1\x1e\xd7\xa8\x08\x1b\x26\x4e\xb0\xf5\xf7\x04\xbb\x0f\xc7\xe8\xb5\x66\x31\x46\x8c\x2f\xb0\xae\xbc\xfd\xad\xe7\x0a\xb8\xed\xe0\xf2\xc5\xba\xfb\xe2\x18\x5b\x63\x8e\xbc\x8d\xcf\xdb\x48\x00\x05\x18\x33\xea\xf5\x3c\xc3\x73\xa6\xe5\xfb\x63\x8d\x19\x81\x33\x4c\xbe\xc0\x27\x5a\x7e\xc6\x07\x7d\x06\x3f\x1d\x58\x81\xd7\x8c\x02\x1f\x16\x3b\xf1\xeb\xbb\x0f\xea\x19\xa3\x4c\x79\xf3\xc0\xf2\xd9\xb6\xcf\x0e\x41\xb8\x5c\xed\x05\xa1\xac\xeb\xd3\x9a\xee\xae\xa4\xca\xed\x4a\xea\x88\x20\xa3\x7a\xed\xfd\x88\xd7\x71\x8b\x0f\xf1\x0f\xe1\xf3\x63\xf8\x6a\x9f\x2f\xe3\x4b\x7a\x8b\x2f\x69\xe0\xeb\xc6\xd7\xde\x15\x62\x86\xeb\x7e\x64\x84\xac\xb7\x23\xb4\xfa\x7e\xac\x4f\xb8\xb8\xb5\xa7\x99\x41\xa3\xdf\xce\x76\xaa\x22\x64\xcd\x3f\xa6\x2c\x7c\x52\x83\x3f\x2b\x0b\x63\x7d\x48\x59\x58\xf9\x07\x95\x85\xed\x16\x1f\xae\xed\x97\x95\x25\x17\x7d\x99\xf9\x3c\xe8\x66\x25\x29\xe1\xff\x98\x06\xe4\xda\x5f\x46\x22\xa9\xdd\x22\x61\x71\xaf\x19\x9f\x8e\xa4\x94\xbf\xc0\x77\xd8\x7f\x1f\xbe\x27\x2c\x5b\x92\xa3\xab\x55\xd0\xcd\xba\xa2\x3c\x56\xb4\x2a\xc1\x50\x07\xc8\xe7\xfe\x36\x85\x25\x09\x10\x48\xd2\xa9\x55\x45\xc7\xb1\x4a\x30\x7c\x7d\x44\xfd\x9a\x65\xd8\x16\xbe\xcc\x47\xd6\x7f\xa4\xed\x05\x02\x70\xfe\x1d\xa3\xae\x2a\xd8\x0f\x21\xff\xae\x91\x3d\x76\x4d\x04\x9c\x8e\x78\x3c\x88\xd2\xf4\x26\x75\xe0\x90\x51\x47\xb3\x2e\xb5\x63\x9a\x86\x89\xac\xe3\xf0\x34\xb9\xf7\xa8\xc1\x1b\x4c\xab\x44\x19\x87\x54\x02\x28\xcd\x9b\x35\xae\x99\xc4\xd3\xa3\x4c\x2a\x91\x11\x36\x26\x06\x23\x37\x3e\xee\x3b\xac\x3d\x0d\x15\xb3\x14\x65\x73\x52\x31\x4a\x43\xd1\x92\x66\x53\x3d\x84\xbd\x32\x98\x0e\x56\xec\xfb\xd8\x78\x79\xae\x78\xe5\x8c\x02\xfb\xea\x20\xc5\xfe\xd0\x69\x6d\xce\x11\xe3\x1b\x4b\xcc\x81\x2b\xca\xae\x0c\x9a\xe7\xb5\x32\x48\x99\x78\x7e\x1a\xc7\x05\xee\x3b\xb3\xc7\xfa\xb5\xb7\xbb\xc8\x4e\x61\x0f\x26\xec\x19\x54\x5b\xbe\xf4\x79\xd6\x96\xcb\xec\x7b\x19\xef\x5f\x47\x92\x1f\xe2\xe8\x3b\x23\xe9\xef\xc4\xb0\xa4\xc0\x2f\x2e\x45\xb0\x38\x09\x2e\x74\x6d\x82\x37\xb6\x5c\x9e\x26\xc5\x99\x13\x5f\xd5\x4a\x51\xb1\x9c\xe7\xe2\x60\x53\xc9\x44\xb3\xb6\xe0\xb6\x0e\x2e\x04\xf1\x6d\x6c\xa2\xf1\xc9\xca\x9a\x43\x35\x2d\x11\x28\x6a\xd3\xa6\xd3\x4c\x51\x87\xb2\xca\x87\x3e\xde\x51\xeb\x8d\x15\xff\xe6\x2e\x6f\xab\x26\x27\x49\xc0\xab\xc6\xfb\x50\xd0\xa8\x96\xd5\x3d\xc5\x15\x19\xb0\xed\x67\xaa\x5d\x8d\xf8\xa3\x22\x3c\xe9\x11\x20\x5d\x47\xce\x5b\x15\x4a\x10\x7b\x86\xad\x42\xde\xf6\x8e\x7e\x42\xa3\xfc\x60\xde\x78\x72\x17\x76\x0e\x3e\xa0\x87\x99\xec\x8e\x1e\x66\xae\x4f\xe8\x61\x16\x7c\x42\x0f\xd7\x7f\xfa\x4d\x5d\x93\x6e\xeb\x1a\x49\xaf\xe8\xc4\x67\x35\xde\xea\x5a\x66\xfe\x03\x2b\x3f\xe5\xc8\x63\x31\xe5\xe9\x48\x6b\x5c\xef\xfc\x2a\x98\x98\x1c\x1c\xe9\xbd\x91\x91\xb3\xc0\xc8\xae\xff\x54\x64\x94\x9a\xee\x44\x46\x69\xfe\x44\x64\x94\x3e\x8e\x45\xc6\x31\xbe\x48\xdd\xb3\x69\xb5\xfa\x7b\xd9\x94\xe0\xbb\x6c\x6a\xac\xa2\x4d\x95\x40\xa7\x11\x81\x76\x45\xe3\xc5\x4b\x02\x23\x15\xc3\xe8\x13\xbf\x34\x3d\x92\x4d\x63\x8d\xae\x07\x72\xc7\x1b\xe3\xa1\xb5\x66\x7d\xe6\xbf\x5f\xcb\x36\x90\x3b\x0c\x6d\x98\x9f\x60\x68\xa3\xf9\x52\x2d\xbb\xf2\xfd\x21\x9d\x7b\x6b\xa5\xf1\x97\x2a\xd9\xaf\x72\x83\x23\xe2\x86\xe9\x98\x11\xf5\x6f\x64\xe0\xc4\xa4\x49\xa6\x78\x3a\x55\x2b\xfc\x43\x9a\xfc\x0b\x78\x5e\x9d\x50\x4f\x6f\x01\x1f\xe0\x7f\xf7\x7b\xfc\xef\xf9\x19\xfe\xf7\x72\x90\xff\xbb\xe2\x0e\xfe\xcd\xf3\x4b\x7f\xe1\xfc\x42\xdb\x09\xe6\x74\x76\x01\x78\xec\xfc\xf2\x4e\xfe\x5a\x82\x8a\x22\xd3\xf9\xff\x97\xbf\xf0\x3d\x7f\xc7\xb8\xc7\xdf\x31\xbf\xe1\x6f\xb0\xf3\xd0\x8c\x0f\xbe\x83\xea\x7d\x92\x50\xe9\x58\x07\x35\xcf\x55\x73\xa3\x0a\xea\xb3\xb1\x79\x2f\x25\x0b\xd5\x62\x13\x95\x5b\x2a\x88\x4a\x3e\x45\x4a\xea\x53\x88\x2b\x8f\x79\xda\xdb\x07\xde\x41\x7d\x64\x6b\x80\x82\x2a\x4a\x56\xac\x18\x31\x88\x13\x54\x6a\x71\x2f\xd3\xe6\x74\xa3\x81\xd0\xb4\xd6\xce\xd5\x5c\x4b\x72\x9f\x38\xc4\x53\x69\x54\xbb\xa9\x58\x9d\x2c\x39\xf4\x91\x33\xb4\xad\x7e\x06\xca\xff\x09\x00\x00\xff\xff\xf1\x6d\x79\xdb\x68\x1f\x00\x00")

func compiledMetererc20BinBytes() ([]byte, error) {
	return bindataRead(
		_compiledMetererc20Bin,
		"compiled/MeterERC20.bin",
	)
}

func compiledMetererc20Bin() (*asset, error) {
	bytes, err := compiledMetererc20BinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterERC20.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMetererc20BinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x09\x76\x22\x31\x0e\xbd\x92\x16\x6b\xf1\x71\xbc\xde\xff\x08\xf3\x54\xae\xb0\x84\x34\xa1\x80\xa4\x67\xa6\xab\x1e\x84\x08\x97\x65\x7d\x7f\x7d\xc9\x28\x38\x28\x24\x10\x52\x80\xc4\x8a\xa0\x08\x50\xa6\x98\x02\x00\x8b\x35\x40\x78\xf2\xca\x00\x49\x79\xee\x17\xaa\x83\x32\xe8\xec\x7d\x00\x63\x0a\x3f\x35\x89\x6d\xd6\x2c\xa3\x58\x5d\x56\x4c\xbb\x15\x1d\x15\x7a\xef\xcb\x5a\xf2\xb2\x12\x57\x37\xfa\xb0\xf6\x7d\x2c\x23\xb7\x21\x6a\x9b\x95\x64\x1f\x6b\x50\xc0\x89\x71\x59\xbd\x2c\x6b\x96\xee\xb9\xa6\xdd\x3a\x70\x59\x4b\x06\xc9\xad\xd6\xcd\xca\xb6\x5b\x6b\x65\x31\xe7\xdd\xda\x75\x59\xbb\x67\x64\x69\x6b\x0d\x49\xea\x6e\xed\x4a\xa3\xf3\x58\x56\x57\x31\xa9\x81\xa2\xc3\xec\x52\x39\x39\xa0\x44\xd4\x0d\x16\xba\xcb\x2e\x1b\xe2\x2d\xc7\x33\xb3\x8b\xc6\x33\x09\x04\x7d\xdb\x19\x02\x40\x27\x47\x60\x27\x21\x67\x47\x47\x89\x17\xad\xef\x32\x0a\x38\x08\xe6\x7d\x6c\x06\x07\x67\xe7\x98\x5f\x6a\x8c\xc7\xe5\x15\x61\xc3\xc4\x09\xb6\xe7\x3d\xc1\x3e\x87\x63\x3c\xb5\x56\x31\x46\xf8\x17\x58\x77\xde\x5e\xeb\x7b\x05\xdc\x76\x70\xcd\xc5\xba\xcf\xc5\xe1\x5b\x63\x8d\xbc\xf9\xe7\xcd\x13\x40\x01\xc6\x8c\x7a\xbd\xce\x98\x39\xd3\x9a\xfb\x23\xc6\x8c\xc0\x19\x26\x5f\xe0\x13\x23\x3f\xe3\x83\x3e\x83\x9f\x0e\xac\xc0\x6b\x45\x81\x0f\x8b\x9d\xf8\xf5\xdd\x85\x7a\xc6\x28\x53\xde\x66\x60\xf9\x6c\xdb\x57\x87\x20\x5c\xae\xf6\x82\x50\xd6\xfd\x29\xa6\xbb\x91\x54\xb9\x8d\xa4\x8e\x48\x32\xaa\xd7\xb3\x1f\x99\x75\xdc\xe2\x43\xfc\x43\xf8\xfc\x18\xbe\xda\xe7\xcb\xf8\x92\xde\xe2\x4b\x1a\xf8\xba\xf1\xf5\xec\x0a\xb1\xc2\xf5\x7e\xc4\x43\xd6\x5b\x0f\xad\xbe\x1f\xeb\x13\x2e\x6e\xed\x69\x66\xd0\xe8\xb7\xab\x9d\xaa\x08\x59\xf3\x8f\x29\x0b\x9f\xd4\xe0\xcf\xca\xc2\x58\x1f\x52\x16\x56\xfe\x41\x65\x61\xbb\xc5\x87\x6b\xfb\x65\x65\xc9\x45\x5f\x66\x3e\x0f\xba\x89\x24\x25\xfc\x1f\xd3\x80\x5c\xfb\xcb\x48\x24\xb5\x5b\x24\x2c\xde\x6b\xc6\xa7\x33\x29\xe5\x2f\xf0\x1d\xf6\xdf\x87\xef\x09\xcb\x96\xe4\x68\xb4\x0a\xba\x59\x57\x96\x47\x44\xab\x13\x0c\x75\x80\x7c\x7e\xde\xa6\xb0\x24\x01\x02\x49\x3a\xb5\xaa\xe8\x38\xd6\x09\xc6\x5c\x1f\x59\xbf\x56\x19\xb6\x85\x2f\xf3\x91\xf8\x8f\x8c\xbd\x40\x00\xce\x9f\xc3\x2b\xc1\xe6\xfb\x10\xf2\xef\xf2\xec\xb1\x6b\x22\xe0\x74\x64\xc6\x83\x28\x4d\x6f\x52\x07\x0e\x19\x75\x34\xeb\x52\x3b\xa6\x69\x98\xc8\x3a\x0e\x4f\x93\x7b\x8f\x1e\xbc\xc1\xb4\x4a\x94\x71\x48\x25\x80\xd2\xbc\x59\xe3\x9a\x49\x3c\x3d\xca\xa4\x12\x15\x61\x63\x62\x30\x72\xe3\xe3\xbe\xc3\xda\xd3\x50\x31\x4b\xd1\x36\x27\x15\xa3\x34\x14\x2d\x69\x36\xd5\x43\xd8\x2b\x83\xe9\x60\xc5\xbe\xfb\xc6\xcb\x73\xc5\x2b\x67\x14\xd8\xa3\x83\x14\xfb\x43\xa7\xd8\x9c\x23\xc7\x37\x96\x98\x03\x57\x94\x5d\x19\x34\xcf\x6b\x65\x90\x32\xf1\xfc\x6d\x1c\x17\xb8\xef\xcc\x1e\xeb\xd3\x3e\xee\xa2\x3a\x85\x3d\x98\xb0\x57\x50\x6d\xf9\x72\xce\xb3\xb6\x5c\x56\xdf\xcb\x7c\xff\x3a\x93\xfc\x10\x47\xdf\x99\x49\x7f\x27\x87\x25\x05\x7e\x71\x2b\x82\xc5\x49\x70\xa1\x6b\x13\xbc\xb1\xe5\xf2\x34\x29\xce\x9c\xf8\xaa\x57\x8a\x8e\xe5\xbc\x16\x07\x9b\x4a\x26\x9a\xb5\x05\xb7\x75\x70\x21\x88\xbf\xc6\x26\x1a\x57\x56\xd6\x1c\xaa\x69\x89\x40\x51\x9b\x36\x9d\x66\x8a\x3a\x94\x55\x3e\xf4\xf1\x8e\x5a\x6f\xac\xf8\x37\x77\x79\x8b\x9a\x9c\x24\x01\xaf\x1e\xef\x43\x41\xa3\x5b\x56\xf7\x14\x77\x54\xc0\xb6\x9f\xa9\x76\x35\xe2\x8f\x8e\xf0\xa4\x47\x80\x74\x9d\x39\x6f\x55\x28\x41\xec\x19\xb6\x0e\x79\xdb\x3b\xfa\x09\x8d\xf2\x83\x75\xe3\xc9\x5d\xd8\x39\xf8\x80\x1e\x66\xb2\x3b\x7a\x98\xb9\x3e\xa1\x87\x59\xf0\x09\x3d\x5c\xff\xe9\x37\x7d\x4d\xba\xed\x6b\x24\xbd\xa2\x13\x9f\xd5\x78\xeb\x6b\x99\xf9\x0f\xac\xfc\x54\x23\x8f\xe5\x94\xa7\x23\xa3\x31\xf9\xd6\x07\x83\x89\xc9\x41\x4f\xef\xcd\x8c\x9c\x05\x46\x76\xfd\xa7\x32\xa3\xd4\x74\x27\x33\x4a\xf3\x27\x32\xa3\xf4\x71\x2c\x33\x8e\xf1\x45\xea\x5e\x4d\xab\xd5\xdf\xab\xa6\x04\xdf\x55\x53\x63\x15\x6d\xaa\x04\x3a\x8d\x08\xb4\x2b\x1a\x2f\x5e\x12\x18\xa9\x18\xc6\x33\xf1\x49\xd3\x23\xd5\x34\x62\x74\x3d\x50\x3b\xde\x98\x0f\xad\x35\xeb\x33\xff\xfd\x5e\xb6\x81\xdc\x61\x68\xc3\xfc\x04\x43\x1b\xcd\x97\x7a\xd9\x55\xef\x0f\xe9\xdc\x5b\x3b\x8d\xbf\xd4\xc9\x7e\x55\x1b\x1c\x11\x37\x4c\xc7\x8c\xac\x7f\x23\x03\x27\x26\x4d\x32\xc5\xd3\xa9\x5b\xe1\x1f\xd2\xe4\x5f\xc0\xf3\xea\x84\x7a\xfa\x15\xf0\x01\xfe\x77\xbf\xc7\xff\x9e\x9f\xe1\x7f\x2f\x07\xf9\xbf\x2b\xee\xe0\xdf\x3c\xbf\xf4\x17\xce\x2f\xb4\x9d\x60\x4e\x67\x17\x80\xc7\xce\x2f\xef\xe4\xaf\x25\xa8\x28\x32\x9d\xff\x7f\xf9\x0b\xdf\xf3\x77\x8c\x7b\xfc\x1d\xf3\x1b\xfe\x06\x3b\x0f\xad\xf8\xe0\x6f\x50\xbd\x4f\x12\x2a\x1d\xeb\xa0\xe6\xb9\x6a\x6e\x54\x41\x7d\x36\x36\xef\xa5\x64\xa1\x5a\x6c\xa2\x72\x4b\x05\x51\xc9\xa7\x48\x49\x7d\x0a\x71\xe5\x31\x4f\x7b\xfb\xc0\x6f\x50\x1f\xd5\x1a\xa0\xa0\x8a\x92\x15\x2b\x46\x0c\xe2\x04\x95\x5a\xbc\x97\x69\x73\xba\xd1\x40\x68\x5a\x6b\xe7\x6a\xae\x25\xb9\x4f\x1c\xe2\xa9\x34\xaa\xdd\x54\xac\x4e\x96\x1c\xfa\xc8\x19\xda\xd6\x3f\x03\xe5\xff\x04\x00\x00\xff\xff\x06\x8a\xd5\x6a\x28\x1f\x00\x00")

func compiledMetererc20BinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledMetererc20BinRuntime,
		"compiled/MeterERC20.bin-runtime",
	)
}

func compiledMetererc20BinRuntime() (*asset, error) {
	bytes, err := compiledMetererc20BinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterERC20.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMetergovAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xcb\xaa\x14\x31\x10\xfd\x97\x5a\x67\x25\x28\xd2\x3b\x5d\xb8\x13\x17\xba\xbb\x0c\x52\xdd\x5d\x2d\x81\xa4\x2a\x24\x95\x19\x9b\xcb\xfd\x77\x99\xb9\xfd\x42\xfb\xe5\x38\x32\xb3\xea\x86\x7a\x9e\x53\x75\x92\x3c\x3d\x43\x25\x9c\x14\x59\xa1\xd0\x98\xc9\x80\xe5\x90\x35\x41\xf1\x74\x30\xc0\xe8\x09\x8a\xd7\x8f\x01\xc9\xda\x99\x9e\x7b\x0b\x18\xd0\x36\x9c\xff\x92\x46\xcb\x3f\xe0\xe5\x60\x20\x60\x8b\xa5\x23\x28\x1a\x74\x89\x0c\x24\x45\xa5\xcf\x59\xb1\xb4\xce\x6a\x0b\x05\x84\x1c\x69\x0c\x6d\x32\x57\x6a\x85\xe1\xc5\x4c\xdb\xe9\xa2\x87\x7e\x86\xa2\xdf\x53\x20\xae\x29\x8e\x19\xb0\xae\x23\xa5\x74\x49\xd0\x3b\x1d\xd1\xe5\x49\x91\x6c\x59\xdf\xbc\x7d\x77\x69\xb0\x73\xc1\x10\xa2\x1c\x17\x90\xa5\x5c\x55\xe7\x94\x43\x82\x52\xc4\xed\x84\xc7\xc2\xbd\xd3\x16\xc8\x45\xce\x55\x14\xdd\xd7\x1c\x82\x6b\xb7\xa8\x9f\x42\xdb\x6e\xee\x68\xe9\xf4\x0f\xdc\x37\x51\xfc\x3a\xf1\x2a\xeb\x76\xf4\x92\x59\x57\x27\xa3\x11\x39\x35\x14\x3f\xbd\x16\x7b\xc0\xf1\xd4\x54\x59\x8f\x2e\xed\x99\xcd\xfb\x5b\xaa\xe2\xb7\x8e\x46\x5a\xe5\xc4\xb3\x92\x18\x7b\x2e\xd1\x21\x57\xf4\xa5\x99\x6f\xba\x33\xff\xd7\xbd\x5a\xe4\x33\xb5\xbe\x14\xf7\x48\x87\xcc\x0d\xd7\xf8\xae\x2b\x7c\x67\x29\xfb\xc7\x3e\x61\x3f\xe6\xc8\x54\xdf\xe1\x84\xfd\x6b\x1d\x9b\x3d\xf7\xdf\xe4\x72\x73\x4e\x4e\x9d\x9e\x67\xb0\x45\xf2\x68\xf9\x2c\xa6\xdb\x83\x44\x16\x6e\xbd\xe4\x34\xb7\x7c\x96\x6b\xfa\x49\x75\x4f\xc0\xf6\x2e\x2e\x04\x2c\xad\xe6\xe0\xde\x95\xde\xff\x1c\xf8\x36\xaa\xb5\x73\xa2\x23\xb1\x5e\x0d\x69\x65\x90\x0b\x11\xab\xef\x9a\xeb\x81\x7d\xb8\xbc\x73\xd0\xfd\x01\xec\xf0\x2b\x00\x00\xff\xff\x66\xc7\x72\x63\xff\x09\x00\x00")

func compiledMetergovAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledMetergovAbi,
		"compiled/MeterGov.abi",
	)
}

func compiledMetergovAbi() (*asset, error) {
	bytes, err := compiledMetergovAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterGov.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMetergovBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x09\x72\xe3\x30\x0e\xfc\x12\x0e\xe2\xe0\x73\x78\xfe\xff\x09\x5b\x10\xe5\x2b\xce\x38\x96\x9d\x64\x76\x77\xa4\xb2\xe3\x40\x24\x48\x36\x1b\x0d\x50\x0a\x0e\x0a\x09\x84\x38\x39\xa0\x28\x02\x20\x88\x29\x00\x38\xcc\x2e\x55\x40\x11\x66\x8a\x76\x08\x40\x10\x4f\x38\xc7\xf7\x64\x80\x4b\x7f\x05\x48\xac\xb8\xb5\x2a\x73\x79\x60\xb1\x06\x08\x2f\x5e\x19\x20\x29\xcf\xfd\x42\x75\x50\x06\x9d\xbd\x0f\x60\x4c\x31\x4e\x4d\x62\x9b\x35\xcb\x28\x56\x97\x15\xd3\x6e\x45\x47\x85\xde\xfb\xb2\x96\xbc\xac\xc4\xd5\x8d\x4e\xd6\xbe\xb7\x65\xe4\x36\x44\x6d\xb3\x92\xec\x6d\x0d\x0a\x38\x31\x2e\xab\x97\x65\xcd\xd2\x3d\xd7\xb4\x5b\x07\x2e\x6b\xc9\x20\xb9\xd5\xba\x59\xd9\x76\x6b\xad\x2c\xe6\xbc\x5b\xbb\x2e\x6b\xf7\x8c\x2c\x6d\xcd\x21\x49\xdd\xad\x5d\x69\x74\x1e\xcb\xea\x2a\x26\xf5\xb2\x0f\x97\xfd\x69\xf7\xfb\x03\x2d\x47\x9f\xd9\x45\xa3\x4f\x02\x41\xdf\x76\x86\x00\xd0\xc9\x11\xd8\x49\xc8\xd9\xd1\x51\xe2\x43\xeb\x59\x46\x01\x07\xc1\xbc\xb7\xcd\xe0\xe0\xec\x1c\xfe\xa5\x46\x7b\x5c\xa3\x22\x6c\x98\x38\xc1\xd6\xdf\x13\xec\x3e\x1c\xa3\xd7\x9a\xc5\x18\x31\xbe\xc0\xba\xf3\xf6\x59\xcf\x15\x70\xdb\xc1\xe5\x8b\x75\xf7\xc5\x31\xb6\xc6\x1c\x79\x1b\x9f\xb7\x91\x00\x0a\x30\x66\xd4\xdb\x79\x86\xe7\x4c\xcb\xf7\x69\x8d\x19\x81\x33\x4c\xbe\xc2\x27\x5a\x7e\xc4\x07\x7d\x06\x3f\x1d\x58\x81\xd7\x8c\x02\x1f\x16\x3b\xf3\xeb\xab\x0b\xf5\x82\x51\xa6\xbc\x79\x60\xf9\x68\xdb\x67\x87\x20\x5c\x6e\xf6\x82\x50\xd6\xfd\x61\x4d\x0f\x57\x52\xe5\x7e\x25\x75\x44\x90\x51\xbd\xf5\x7e\xc4\xeb\xb8\xc7\x87\xf8\x87\xf0\xf9\x31\x7c\xb5\xe3\xdb\xf8\x92\xde\xe3\x4b\x1a\xf8\xba\xca\xad\x77\x85\x98\xe1\xfa\x3e\x32\x42\xd6\xfb\x11\x5a\xfd\x7e\xac\xcf\xb8\xb8\x8e\x97\x99\x41\xa3\xdf\xcf\x76\xaa\x22\xe4\xf4\x73\xca\xc2\x67\x35\xf8\xb3\xb2\x30\xd6\xa7\x94\x85\x95\x7f\x50\x59\xd8\xee\xf1\xe1\xda\x7e\x59\x59\xb2\xbf\xaf\x2c\x3c\xe8\x6e\x25\x29\xe1\xff\x98\x06\xe4\xf2\xbe\x06\x24\xb5\x7b\x24\x2c\xbe\xab\xda\xcb\x91\x94\xf2\x27\xf8\x0e\xfb\xef\xc3\xf7\x8c\x65\x83\x7e\x74\xb5\x0a\xba\x59\x57\x94\xc7\x8a\x56\x25\x18\xea\x00\xfd\xd2\xdf\xa6\xa8\x8a\x91\xb1\x0a\x41\x1a\x2a\x96\xcc\x74\x1a\x69\x7d\xae\x12\x0c\x5f\xa7\xa8\x5f\xb3\x0c\xdb\xc2\x97\xf9\xc8\xfa\x8f\xb4\xbd\x42\x00\x2e\xbf\x63\xd4\x55\x05\xfb\x21\xe4\xbf\x6b\x64\x8f\x5d\x13\x01\xa7\x23\x1e\x0f\xa2\x34\xbd\x49\x1d\x38\x64\xd4\xd1\xac\x4b\xed\x98\xa6\x61\x22\xeb\x38\x3c\x4d\xee\x3d\x6a\xf0\x06\xd3\x2a\x51\xc6\x21\x95\x00\x4a\xf3\x66\x8d\x6b\x26\xf1\xf4\x2c\x93\x4a\x64\x84\x8d\x89\xc1\xc8\x8d\x8f\xfb\x0e\x33\x1c\x99\xb3\x72\x21\xd6\x01\x70\xf2\x8f\xd7\x67\x87\x77\xce\x21\xb0\xaf\x00\x52\xec\x01\x9d\xe7\xef\x1c\x71\xbc\x31\xc1\x1c\xb8\xa2\xec\xd1\xaf\x19\x6f\xa3\x5f\xca\xc4\xcb\xd3\x22\x62\xdc\x77\xf6\x8e\xf5\x6b\x6f\x77\x95\x81\xc2\x1e\xbb\xbd\x67\x49\xad\xf5\xda\xe7\x45\x3f\xae\x33\xec\x75\x4c\x7f\x1e\x2d\x7e\x88\x87\xdf\x19\x2d\x7f\x27\x4e\x25\x05\x7e\x71\x2b\x82\xb5\xad\x1a\x0b\x74\x6d\x82\x37\xb6\x5c\x5e\x26\xc5\x85\x13\x9f\xd5\x43\x51\x95\x5c\xe6\xe2\x60\x53\xc9\x44\xb3\x36\x4b\x9a\x75\x70\x21\x88\xbf\xc6\x26\x1a\x57\x56\xd6\xac\xa2\xc3\x12\x81\xa2\x36\x6d\x3a\xcd\x14\x75\x28\xab\x9c\x34\xf0\x81\x22\x6f\xac\xf8\x37\x77\x79\x5b\x35\x39\x49\x02\x5e\x75\xdc\x49\x25\xa3\x22\x96\xe2\x29\xee\xc8\x72\x99\xf7\x88\x58\x8a\xc3\xa7\xaa\xef\x14\x27\x0a\x48\xb7\x91\x73\x58\x85\x18\xca\x24\x83\xa8\x3b\xb7\xfd\xa1\x9f\xd0\x21\x3f\xa8\xff\x2f\x22\xbd\xf3\xec\x09\xcd\xcb\x50\x1f\x68\x5e\xc6\xf9\x82\xe6\x65\x96\x17\x34\x6f\xfd\xa7\x5f\xd4\x27\xe9\xa6\x3e\x61\x49\x02\x29\xbd\xa3\x05\x1f\x15\x37\xe6\x9f\x8d\xf9\x0f\xcc\xfb\x98\xeb\x0e\xc5\x8d\xa7\x23\xad\x31\x6d\xef\xee\x4a\xef\x62\x72\x70\xa4\xa3\xec\x07\xc9\x59\x60\x64\xd7\x7f\x8a\xfd\xc5\xcb\x03\xf6\x97\x3c\x5e\x60\x7f\xa9\xe9\x18\xfb\x8f\x71\x42\xea\x9e\x15\xab\xe0\xef\x65\x45\x82\xaf\xb2\x62\x9c\x12\xb4\xa9\x12\xc4\x09\x81\x40\xbb\xa2\xb1\xa5\x38\x41\x10\x18\xa9\x18\x46\x9f\xf8\xa5\xe9\x99\xac\xb8\xad\xb1\x3d\x9f\x03\x8e\x72\x7e\x94\x92\x79\x6a\xfd\xeb\x75\x67\x6d\xfd\x01\x0b\xeb\xc0\x17\x58\x58\xa7\xbd\x55\x77\xae\xdc\x7c\x48\xaf\xbe\xb5\x2a\xf8\x4b\x55\xe7\x67\x1a\xef\x88\xb8\x61\x3a\x4a\x11\x3b\xca\x32\xaa\x75\x24\xb5\xe1\xe9\x5c\x59\xf0\x0f\x69\xeb\x2f\x60\x76\x73\x2a\x3c\xbf\x79\x7b\x82\xe3\x9d\xe7\x03\x8e\x77\xe1\x17\x38\xde\x35\x1f\xe3\xf8\xae\x9c\x7d\x8c\x5f\x3c\x4f\xf4\x37\xce\x13\xb4\x9d\x28\xce\x67\x09\x80\xe7\xce\x13\x47\x39\xda\xa7\x59\xd1\x9e\xd6\x7b\xde\xff\x4f\x8e\xc2\xd7\x1c\x1d\x0f\xcf\xff\xe3\xab\xf3\x7f\x30\xf0\xd0\x8c\x0f\xbe\xdb\xe9\x7d\x92\x50\xe9\x58\x07\x35\xcf\x55\x73\xa3\x0a\xea\xb3\xb1\x79\x2f\x25\x0b\xd5\x62\x51\xfc\xb5\x54\x10\x95\x7c\x8a\x94\xd4\xa7\x10\x57\x1e\xf3\xbc\xb7\x4f\xbc\xdb\x39\x65\x56\x80\x82\x2a\x4a\x56\xac\x18\x31\x88\x13\x58\x2a\xe6\x73\x50\x13\xc5\x6e\x9e\xe6\x2c\xb9\xe7\x19\xd9\x7f\x8e\x4a\x09\x78\x0c\x03\x1f\x62\x62\xe2\xc2\xea\xa5\xb8\x1b\x27\x8a\x60\x94\x06\x40\xf9\x3f\x01\x00\x00\xff\xff\xb0\x39\xdd\x2a\xc0\x1e\x00\x00")

func compiledMetergovBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledMetergovBin,
		"compiled/MeterGov.bin",
	)
}

func compiledMetergovBin() (*asset, error) {
	bytes, err := compiledMetergovBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterGov.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMetergovBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x09\x76\xdb\x30\x0e\xbd\x12\x16\x62\xe1\x71\xb8\xde\xff\x08\xf3\x20\xca\x5b\x9c\x3a\x96\x9d\xa4\x33\x53\xe9\xc5\x75\x61\x0a\x04\x3f\x3f\x3e\x40\x29\x38\x28\x24\x10\x52\x80\xc4\x8a\xa0\x08\x50\xa6\x98\x02\x00\x8b\x35\x40\x78\xf1\xca\x00\x49\x79\xee\x17\xaa\x83\x32\xe8\xec\x7d\x00\x63\x8a\x79\x6a\x12\xdb\xac\x59\x46\xb1\xba\xac\x98\x76\x2b\x3a\x2a\xf4\xde\x97\xb5\xe4\x65\x25\xae\x6e\x74\xb2\xf6\x7d\x2c\x23\xb7\x21\x6a\x9b\x95\x64\x1f\x6b\x50\xc0\x89\x71\x59\xbd\x2c\x6b\x96\xee\xb9\xa6\xdd\x3a\x70\x59\x4b\x06\xc9\xad\xd6\xcd\xca\xb6\x5b\x6b\x65\x31\xe7\xdd\xda\x75\x59\xbb\x67\x64\x69\x2b\x86\x24\x75\xb7\x76\xa5\xd1\x79\x2c\xab\xab\x98\xd4\x40\xd1\x61\x76\xa9\x9c\x1c\x50\x62\xd5\x0d\x16\xba\xcb\x2e\x1b\xe2\x2d\xc7\x33\xb3\x8b\xc6\x33\x09\x04\x7d\xdb\x19\x02\x40\x27\x47\x60\x27\x21\x67\x47\x47\x89\x3f\x5a\xbf\x65\x14\x70\x10\xcc\xfb\xd8\x0c\x0e\xce\xce\xe1\x5f\x6a\x8c\xc7\x35\x2b\xc2\x86\x89\x13\x6c\xcf\x7b\x82\xdd\x87\x63\x3c\xb5\xa2\x18\x23\xe6\x17\x58\x77\xde\xfe\xd6\xef\x0a\xb8\xed\xe0\xf2\xc5\xba\xfb\xe2\x98\x5b\x23\x46\xde\xe6\xe7\x6d\x26\x80\x02\x8c\x19\xf5\x36\xce\xf0\x9c\x69\xf9\x3e\xad\x31\x23\x70\x86\xc9\x57\xf8\xc4\xc8\x8f\xf8\xa0\xcf\xe0\xa7\x03\x2b\xf0\x8a\x28\xf0\x61\xb1\x33\xbf\xbe\xba\x50\x2f\x18\x65\xca\x9b\x07\x96\x8f\xb6\x3d\x3a\x04\xe1\x72\xb3\x17\x84\xb2\xee\x0f\x6b\x7a\xb8\x92\x2a\xf7\x2b\xa9\x23\x92\x8c\xea\xad\xf7\x23\x5e\xc7\x3d\x3e\xc4\x3f\x84\xcf\x8f\xe1\xab\x1d\xdf\xc6\x97\xf4\x1e\x5f\xd2\xc0\xd7\x55\x6e\xbd\x2b\x44\x84\xeb\xf3\xc8\x0c\x59\xef\x67\x68\xf5\xfb\xb1\x3e\xe3\xe2\x3a\x5e\x66\x06\x8d\x7e\x1f\xed\x54\x45\xc8\xe9\xe7\x94\x85\xcf\x6a\xf0\x67\x65\x61\xac\x4f\x29\x0b\x2b\xff\xa0\xb2\xb0\xdd\xe3\xc3\xb5\xfd\xb2\xb2\x64\x7f\x5f\x59\x78\xd0\xdd\x4a\x52\xc2\xff\x31\x0d\xc8\xe5\x7d\x0d\x48\x6a\xf7\x48\x58\x7c\x56\xb5\x97\x33\x29\xe5\x4f\xf0\x1d\xf6\xdf\x87\xef\x19\xcb\x06\xfd\xe8\x6a\x15\x74\xb3\xae\x2c\x8f\x15\xad\x4e\x30\xd4\x01\xfa\xe5\x79\x9b\xa2\x2a\x46\xc6\x2a\x04\x69\xa8\x58\x32\xd3\x69\xa4\xf5\xb9\x4e\x30\x7c\x9d\xb2\x7e\x45\x19\xb6\x85\x2f\xf3\x91\xf5\x1f\x19\x7b\x85\x00\x5c\xbe\xc7\xac\x04\xdb\xdc\x87\x90\xff\xae\x99\x3d\x76\x4d\x04\x9c\x8e\x78\x3c\x88\xd2\xf4\x26\x75\xe0\x90\x51\x47\xb3\x2e\xb5\x63\x9a\x86\x89\xac\xe3\xf0\x34\xb9\xf7\xe8\xc1\x1b\x4c\xab\x44\x19\x87\x54\x02\x28\xcd\x9b\x35\xae\x99\xc4\xd3\xb3\x4c\x2a\x51\x11\x36\x26\x06\x23\x37\x3e\xee\x3b\xcc\x70\x24\x66\xe5\x42\xac\x03\xe0\xe4\x1f\xaf\xcf\x0e\xef\x9c\x43\x60\x5f\x01\xa4\xd8\x03\x3a\xc7\xef\x1c\x79\xbc\x31\xc1\x1c\xb8\xa2\xec\xd9\xaf\x19\x6f\xb3\x5f\xca\xc4\xcb\xaf\x45\xc4\xb8\xef\xec\x1d\xeb\xdb\x3e\xee\xaa\x02\x85\x3d\x76\x7b\xaf\x92\x5a\xeb\xb5\xcf\x8b\x7e\x5c\x57\xd8\xeb\x9c\xfe\x3c\x5b\xfc\x10\x0f\xbf\x33\x5b\xfe\x4e\x9e\x4a\x0a\xfc\xe2\x56\x04\x6b\x5b\x37\x16\xe8\xda\x04\x6f\x6c\xb9\xbc\x4c\x8a\x0b\x27\x3e\xeb\x87\xa2\x2b\xb9\xc4\xe2\x60\x53\xc9\x44\xb3\x36\x4b\x9a\x75\x70\x21\x88\x7f\x8d\x4d\x34\xae\xac\xac\x59\x45\x87\x25\x02\x45\x6d\xda\x74\x9a\x29\xea\x50\x56\x39\x69\xe0\x03\x45\xde\x58\xf1\x6f\xee\xf2\xb6\x6a\x72\x92\x04\xbc\xfa\xb8\x93\x4a\x46\x47\x2c\xc5\x53\xdc\x51\xe5\x32\xef\x19\xb1\x14\x87\x4f\x5d\xdf\x29\x4f\x14\x90\x6e\x33\xe7\xb0\x0a\x31\x94\x49\x06\xd1\x77\x6e\xfb\x43\x3f\xa1\x43\x7e\x50\xff\x5f\x44\x7a\xe7\xd9\x13\x9a\x97\xa1\x3e\xd0\xbc\x8c\xf3\x05\xcd\xcb\x2c\x2f\x68\xde\xfa\x9f\x7e\xd1\x9f\xa4\x9b\xfe\x84\x25\x09\xa4\xf4\x8e\x16\x7c\x54\xdc\x88\x3f\x1b\xf3\x1f\x98\xf7\xb1\xd6\x1d\xca\x1b\x4f\x47\x46\x63\xf2\x88\xa6\xf4\x2e\x26\x07\x67\x3a\xca\x7e\x90\x9c\x05\x46\x76\xfd\xa7\xd8\x5f\xbc\x3c\x60\x7f\xc9\xe3\x05\xf6\x97\x9a\x8e\xb1\xff\x18\x27\xa4\xee\x55\xb1\x0a\xfe\x5e\x55\x24\xf8\xaa\x2a\xc6\x29\x41\x9b\x2a\x41\x9c\x10\x08\xb4\x2b\x1a\x5b\x8a\x13\x04\x81\x91\x8a\x61\x3c\x13\xdf\x34\x3d\x53\x15\xb7\x35\xb6\xe7\x6b\xc0\x51\xce\x8f\x52\x32\x4f\xad\x7f\xbd\xef\xac\xad\x3f\x60\x61\x1d\xf8\x02\x0b\xeb\xb4\xb7\xfa\xce\x55\x9b\x0f\xe9\xd5\xb7\x76\x05\x7f\xa9\xeb\xfc\x4c\xe3\x1d\x11\x37\x4c\x47\x29\x62\x47\x59\x46\xb5\x8e\xa4\x36\x3c\x9d\x3b\x0b\xfe\x21\x6d\xfd\x05\xcc\x6e\x4e\x85\xe7\x37\x6f\x4f\x70\xbc\xf3\x7c\xc0\xf1\x2e\xfc\x02\xc7\xbb\xe6\x63\x1c\xdf\x95\xb3\x8f\xf1\x8b\xe7\x89\xfe\xc6\x79\x82\xb6\x13\xc5\xf9\x2c\x01\xf0\xdc\x79\xe2\x28\x47\xfb\x34\x2b\xda\xd3\x7a\xcf\xfb\xff\xc9\x51\xf8\x9a\xa3\xe3\xe1\xf9\x7f\x7c\x75\xfe\x0f\x06\x1e\x8a\xf8\xe0\xbb\x9d\xde\x27\x09\x95\x8e\x75\x50\xf3\x5c\x35\x37\xaa\xa0\x3e\x1b\x9b\xf7\x52\xb2\x50\x2d\x16\xcd\x5f\x4b\x05\x51\xc9\xa7\x48\x49\x7d\x0a\x71\xe5\x31\xcf\x7b\xfb\xc4\xbb\x9d\x53\x65\x05\x28\xa8\xa2\x64\xc5\x8a\x11\x83\x38\x81\xa5\x62\x3e\x07\x35\x51\xec\xe6\x69\xce\x92\x7b\x9e\x51\xfd\xe7\xa8\x94\x80\xc7\x30\xf0\x21\x26\x26\x2e\xac\x5e\x8a\xbb\x71\xa2\x48\x46\x69\x00\x94\xff\x13\x00\x00\xff\xff\xf6\x31\x24\xec\x80\x1e\x00\x00")

func compiledMetergovBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledMetergovBinRuntime,
		"compiled/MeterGov.bin-runtime",
	)
}

func compiledMetergovBinRuntime() (*asset, error) {
	bytes, err := compiledMetergovBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterGov.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMetergoverc20Abi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xcb\xaa\x14\x31\x10\xfd\x97\x5a\x67\x25\x28\xd2\x3b\x5d\xb8\x13\x17\xba\xbb\x0c\x52\xdd\x5d\x2d\x81\xa4\x2a\x24\x95\x19\x9b\xcb\xfd\x77\x99\xb9\xfd\x42\xfb\xe5\x38\x32\xb3\xea\x86\x7a\x9e\x53\x75\x92\x3c\x3d\x43\x25\x9c\x14\x59\xa1\xd0\x98\xc9\x80\xe5\x90\x35\x41\xf1\x74\x30\xc0\xe8\x09\x8a\xd7\x8f\x01\xc9\xda\x99\x9e\x7b\x0b\x18\xd0\x36\x9c\xff\x92\x46\xcb\x3f\xe0\xe5\x60\x20\x60\x8b\xa5\x23\x28\x1a\x74\x89\x0c\x24\x45\xa5\xcf\x59\xb1\xb4\xce\x6a\x0b\x05\x84\x1c\x69\x0c\x6d\x32\x57\x6a\x85\xe1\xc5\x4c\xdb\xe9\xa2\x87\x7e\x86\xa2\xdf\x53\x20\xae\x29\x8e\x19\xb0\xae\x23\xa5\x74\x49\xd0\x3b\x1d\xd1\xe5\x49\x91\x6c\x59\xdf\xbc\x7d\x77\x69\xb0\x73\xc1\x10\xa2\x1c\x17\x90\xa5\x5c\x55\xe7\x94\x43\x82\x52\xc4\xed\x84\xc7\xc2\xbd\xd3\x16\xc8\x45\xce\x55\x14\xdd\xd7\x1c\x82\x6b\xb7\xa8\x9f\x42\xdb\x6e\xee\x68\xe9\xf4\x0f\xdc\x37\x51\xfc\x3a\xf1\x2a\xeb\x76\xf4\x92\x59\x57\x27\xa3\x11\x39\x35\x14\x3f\xbd\x16\x7b\xc0\xf1\xd4\x54\x59\x8f\x2e\xed\x99\xcd\xfb\x5b\xaa\xe2\xb7\x8e\x46\x5a\xe5\xc4\xb3\x92\x18\x7b\x2e\xd1\x21\x57\xf4\xa5\x99\x6f\xba\x33\xff\xd7\xbd\x5a\xe4\x33\xb5\xbe\x14\xf7\x48\x87\xcc\x0d\xd7\xf8\xae\x2b\x7c\x67\x29\xfb\xc7\x3e\x61\x3f\xe6\xc8\x54\xdf\xe1\x84\xfd\x6b\x1d\x9b\x3d\xf7\xdf\xe4\x72\x73\x4e\x4e\x9d\x9e\x67\xb0\x45\xf2\x68\xf9\x2c\xa6\xdb\x83\x44\x16\x6e\xbd\xe4\x34\xb7\x7c\x96\x6b\xfa\x49\x75\x4f\xc0\xf6\x2e\x2e\x04\x2c\xad\xe6\xe0\xde\x95\xde\xff\x1c\xf8\x36\xaa\xb5\x73\xa2\x23\xb1\x5e\x0d\x69\x65\x90\x0b\x11\xab\xef\x9a\xeb\x81\x7d\xb8\xbc\x73\xd0\xfd\x01\xec\xf0\x2b\x00\x00\xff\xff\x66\xc7\x72\x63\xff\x09\x00\x00")

func compiledMetergoverc20AbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledMetergoverc20Abi,
		"compiled/MeterGovERC20.abi",
	)
}

func compiledMetergoverc20Abi() (*asset, error) {
	bytes, err := compiledMetergoverc20AbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterGovERC20.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMetergoverc20Bin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x09\x72\xe3\x30\x0e\xfc\x12\x0e\xe2\x7a\x0e\xcf\xff\x3f\x61\x8b\xa2\xe2\x23\xce\x38\x96\xed\x64\x76\x77\xa4\x8a\xed\x40\x24\x48\x36\x1b\x0d\x50\x0a\x0e\x0a\x09\x84\x38\x39\xa0\x28\x02\x20\x88\x29\x00\x38\x8c\x26\x45\x40\x11\x46\x24\x9f\xdf\x40\x30\x9f\x70\xcc\xcf\xc1\x00\xe7\xfe\x0a\x90\x58\x71\x6b\x95\xc7\xf2\xc0\x62\x15\x10\x9e\xbc\x02\x20\x29\x8f\xfd\x42\x75\x50\x06\x1d\xad\x75\x60\x4c\x73\x9c\x92\xc4\x36\x6b\x48\xcf\x56\x96\x15\xd3\x6e\x45\x47\x85\xd6\xda\xb2\xe6\x58\x56\xe2\xe2\x46\x1f\xd6\xb6\xb7\x65\xe4\xda\x45\x6d\xb3\x92\xec\x6d\x0d\x32\x38\x31\x2e\xab\xe7\x65\x0d\x69\x1e\x25\xed\xd6\x8e\xcb\x9a\x03\x24\x6a\x29\x9b\x95\x6d\xb7\x96\xc2\x62\xce\xbb\xb5\xe9\xb2\x36\x0f\x64\xa9\x6b\x0e\x49\xca\x6e\x6d\x4a\xbd\x71\x5f\x56\x57\x31\x29\xe7\x7d\x38\xef\x4f\xbd\xdd\x1f\xa8\x31\xfb\x8c\x26\x3a\xfb\x24\x10\xf4\x6d\x67\x08\x00\x9d\x1c\x81\x9d\x84\x9c\x1d\x1d\x65\xfe\xd1\x7a\x16\x28\xe0\x20\x18\x7b\xdb\x00\x07\x67\xe7\xe9\x5f\xca\x6c\x8f\x6b\x54\x84\x0d\x13\x27\xd8\xfa\x7b\x82\xdd\x87\xe3\xec\xb5\x66\xd1\xfb\x1c\x5f\x60\xdd\xb1\xfd\xad\xe7\x0a\xb8\xed\xe0\xf2\xc5\xba\xfb\xe2\x39\xb6\xce\x39\xf2\x36\x3e\x6f\x23\x01\x64\x60\x0c\xd4\xeb\x79\x4e\xcf\x41\xcb\xf7\xc7\x1a\x03\x81\x03\x06\x5f\xe0\x33\x5b\x7e\xc6\x07\x7d\x4c\x7e\x3a\xb0\x02\xaf\x19\x4d\x7c\x58\xec\xc4\xaf\xef\x2e\xd4\x33\x46\x41\xb1\x79\x60\xf9\x6c\xdb\x67\x87\x20\x9c\xaf\xf6\x82\x50\xd6\xfd\x69\x4d\x77\x57\x52\xe4\x76\x25\xa5\xcf\x20\xa3\x72\xed\xfd\x88\xd7\x7e\x8b\x0f\xf1\x0f\xe1\xf3\x63\xf8\x6a\x1b\x2f\xe3\x4b\x7a\x8b\x2f\xe9\xc4\xd7\x8d\xaf\xbd\x2b\xcc\x19\xae\xcf\x23\x23\x84\xde\x8e\x50\xcb\xfb\xb1\x3e\xe1\xe2\x56\x9f\x66\x06\xf5\x76\x3b\xdb\xa1\x8a\x10\x1a\x3f\xa6\x2c\x7c\x52\x83\x3f\x2b\x0b\x63\x79\x48\x59\x58\xf9\x07\x95\x85\xed\x16\x1f\x2e\xf5\x97\x95\x25\xb2\xbe\xcc\x7c\xee\x74\xb3\x92\x94\xf0\x7f\x4c\x03\xa2\xb4\x97\x91\x48\x6a\xb7\x48\xd8\xfc\x2c\x81\x4f\x47\x52\x8a\x2f\xf0\xed\xf6\xdf\x87\xef\x09\xcb\x9a\xe4\xe8\x6a\x15\x74\xb3\xae\x28\x9f\x2b\x5a\x95\xe0\x54\x07\xb0\x73\x7f\x1b\xc2\x92\x04\x08\x52\x4a\x98\xc6\xf1\x4a\x70\xfa\xfa\x88\xfa\x35\xcb\x69\x5b\xf8\x32\x1f\x59\xff\x91\xb6\x17\x08\xc0\xf9\xf7\x1c\x75\x55\xc1\x7e\x08\xf9\x77\x8d\xec\x73\xd7\x44\xc0\xe9\x88\xc7\x83\x28\x0d\xaf\x52\x3a\x76\xe9\xa5\x57\x6b\x52\x1a\xa6\x61\x98\xc8\x1a\x76\x4f\x83\x5b\x9b\x35\x78\x85\x61\x85\x28\xb0\x4b\x21\x80\x5c\xbd\x5a\xe5\x12\x24\x9e\x1e\x65\x52\x9e\x19\x61\x63\xe2\x64\xe4\xc6\xc7\x7d\x87\xb5\xa5\xae\x62\x96\x66\xd9\x9c\x54\x8c\x52\x57\xb4\xa4\x61\xaa\x87\xb0\x57\xce\xc4\xda\xa7\xcf\x35\x36\x5e\x9e\x2b\x5e\x39\xa3\xc0\xbe\x3a\x48\x73\x7f\xe8\xb4\x36\xe7\x19\xe3\x1b\x4b\xcc\x81\x0b\xca\xae\x0c\x1a\xe3\x5a\x19\x24\x0f\x3c\x3f\x9d\xc7\x05\x6e\x3b\xb3\xfb\xfa\xb5\xb7\xbb\xc8\x4e\xd3\x3e\x99\xb0\x67\x50\xad\x71\xe9\xf3\xac\x2d\x97\xd9\xf7\x32\xde\xbf\x8e\x24\x3f\xc4\xd1\x77\x46\xd2\xdf\x89\x61\x49\x13\xbf\x79\x2b\x82\xcd\x93\xe0\x42\xd7\x06\x78\x65\x8b\xfc\x34\x29\xce\x9c\xf8\xaa\x56\x9a\x15\xcb\x79\x2e\x0e\x36\x94\x4c\x34\xb4\x4e\x6e\x6b\xe7\x4c\x30\xbf\x8d\x4d\x74\x5e\xa1\xac\xa1\xa2\xdd\x12\x81\xa2\x56\xad\x3a\xcc\x14\xb5\x2b\xab\x7c\xe8\xe3\x1d\xb5\xde\x58\xf1\x6f\xee\xf2\xb6\x6a\x72\x92\x04\xbc\x6a\xbc\x0f\x05\x9d\xd5\xb2\xba\xa7\x79\xcf\x0c\x58\xf7\x33\xd5\xae\x46\xfc\x51\x11\x9e\xf4\x08\x90\xae\x23\xe7\xad\x0a\xc5\x90\x07\x19\xcc\x7a\x75\xdb\x3b\xfa\x09\x8d\xf2\x83\x79\xe3\xc9\x5d\xd8\x39\xf8\x80\x1e\x06\xd9\x1d\x3d\x0c\x2e\x4f\xe8\x61\x08\x3e\xa1\x87\xeb\x3f\xfd\xa6\xae\x49\xb7\x75\x4d\x4a\xaf\xe8\xc4\x67\x35\xde\xea\x5a\x66\xfe\x03\x2b\x3f\xe5\xc8\x63\x31\xe5\xe9\x48\x6b\x5c\xef\xfc\x0a\x98\x98\x1c\x1c\xe9\x9d\x91\x01\x12\x21\xd0\xc3\xf5\x9f\x8a\x8c\x5c\xd2\x9d\xc8\xc8\xd5\x9f\x88\x8c\xdc\xfa\xb1\xc8\x38\xc6\x17\x29\x7b\x36\x2d\x56\x7e\x2f\x9b\x12\x7c\x97\x4d\x8d\x55\xb4\xaa\x12\xe8\x30\x22\xd0\xa6\x68\xbc\x78\x49\x60\xa4\x62\x38\xfb\xcc\x5f\x9a\x1e\xc9\xa6\x73\x8d\xae\x07\x72\xc7\x1b\xe3\xa1\xe7\x1c\x3c\xb4\xfc\xf5\x5a\xb6\x82\xdc\x61\x68\xc5\x78\x82\xa1\x95\xc6\x4b\xb5\xec\xca\xf7\x87\x74\xee\xad\x95\xc6\x5f\xaa\x64\xbf\xca\x0d\x8e\x88\x1b\xa6\x7d\xcc\xa8\x7f\x23\x03\xa9\x94\x9e\xd4\xba\xa7\x53\xb5\xc2\x3f\xa4\xc9\xbf\x80\xe7\xd5\x09\xf5\xf4\x16\xf0\x01\xfe\x37\xbf\xc7\xff\x16\xcf\xf0\xbf\xe5\x83\xfc\xdf\x15\xb7\xf3\x6f\x9e\x5f\xda\x0b\xe7\x17\xda\x4e\x30\xa7\xb3\x0b\xc0\x63\xe7\x97\x77\xf2\xb7\x0d\xb3\xac\x2d\xad\xf7\xd1\xff\x9f\xfc\x85\xef\xf9\xdb\xfb\x3d\xfe\xf6\xf1\x0d\x7f\x27\x3b\x0f\xcd\xf8\xe0\x3b\xa8\xd6\x06\x09\xe5\x86\xa5\x53\xf5\x28\x1a\x95\x0a\xa8\x8f\xca\xe6\x2d\xe7\x10\x2a\xd9\x06\x2a\xd7\x94\x11\x95\x7c\x88\xe4\xd4\x86\x10\x17\xee\xe3\xb4\xb7\x0f\xbc\x83\xfa\xc8\xd6\x00\x19\x55\x94\x2c\x5b\x36\x62\x10\x27\x00\xa9\x3e\xba\xd7\x96\x28\x41\x74\xb7\x1e\x3c\xbc\xf7\xca\x4d\x14\xba\x04\x98\x75\x1a\x21\xb5\x0a\x57\x0d\x45\x31\x2f\xd0\xa8\x54\x51\xb0\x0c\x40\xf1\x9f\x00\x00\x00\xff\xff\x70\x00\xc3\x43\x68\x1f\x00\x00")

func compiledMetergoverc20BinBytes() ([]byte, error) {
	return bindataRead(
		_compiledMetergoverc20Bin,
		"compiled/MeterGovERC20.bin",
	)
}

func compiledMetergoverc20Bin() (*asset, error) {
	bytes, err := compiledMetergoverc20BinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterGovERC20.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMetergoverc20BinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x09\x76\xdb\x30\x0e\xbd\x12\x16\x62\x3b\x0e\xd7\xfb\x1f\x61\x1e\x45\xc5\x4b\x9c\x3a\x96\xed\xa4\x33\x53\xe9\xc5\x75\x61\x0a\x24\x3e\x3f\x3e\x40\x29\x38\x28\x24\x10\x52\x80\xc4\x8a\xa0\x08\x90\x87\x98\x02\x00\x8b\x55\x40\x78\xf2\x0a\x80\xa4\x3c\xf6\x0b\xd5\x41\x19\x74\xb4\xd6\x81\x31\xcd\x79\x4a\x12\xdb\xac\x21\x3d\x5b\x59\x56\x4c\xbb\x15\x1d\x15\x5a\x6b\xcb\x9a\x63\x59\x89\x8b\x1b\x7d\x58\xdb\x3e\x96\x91\x6b\x17\xb5\xcd\x4a\xb2\x8f\x35\xc8\xe0\xc4\xb8\xac\x9e\x97\x35\xa4\x79\x94\xb4\x5b\x3b\x2e\x6b\x0e\x90\xa8\xa5\x6c\x56\xb6\xdd\x5a\x0a\x8b\x39\xef\xd6\xa6\xcb\xda\x3c\x90\xa5\xae\x35\x24\x29\xbb\xb5\x29\xf5\xc6\x7d\x59\x5d\xc5\xa4\x4c\x14\x1d\x46\x93\xc2\xc9\x01\x65\x46\x5d\x61\xa1\xbb\xec\xb2\x21\x5e\x63\x3e\x33\x9a\xe8\x7c\x26\x81\xa0\x6f\x3b\x43\x00\xe8\xe4\x08\xec\x24\xe4\xec\xe8\x28\xf3\x8f\xd6\x6f\x81\x02\x0e\x82\xb1\x8f\x0d\x70\x70\x76\x9e\xfe\xa5\xcc\xf1\xb8\x66\x45\xd8\x30\x71\x82\xed\x79\x4f\xb0\xfb\x70\x9c\x4f\xad\x55\xf4\x3e\xe7\x17\x58\x77\x6c\x7f\xeb\x77\x05\xdc\x76\x70\xf9\x62\xdd\x7d\xf1\x9c\x5b\xe7\x1a\x79\x9b\x9f\xb7\x99\x00\x32\x30\x06\xea\xf5\x3a\xa7\xe7\xa0\xe5\xfb\x23\xc6\x40\xe0\x80\xc1\x17\xf8\xcc\x91\x9f\xf1\x41\x1f\x93\x9f\x0e\xac\xc0\x6b\x45\x13\x1f\x16\x3b\xf1\xeb\xbb\x0b\xf5\x8c\x51\x50\x6c\x1e\x58\x3e\xdb\xf6\xd5\x21\x08\xe7\xab\xbd\x20\x94\x75\x7f\x8a\xe9\x6e\x24\x45\x6e\x23\x29\x7d\x26\x19\x95\x6b\xef\x47\xbc\xf6\x5b\x7c\x88\x7f\x08\x9f\x1f\xc3\x57\xdb\x78\x19\x5f\xd2\x5b\x7c\x49\x27\xbe\x6e\x7c\xed\x5d\x61\xae\x70\x7d\x1e\x99\x21\xf4\x76\x86\x5a\xde\x8f\xf5\x09\x17\xb7\xfa\x34\x33\xa8\xb7\xdb\xd5\x0e\x55\x84\xd0\xf8\x31\x65\xe1\x93\x1a\xfc\x59\x59\x18\xcb\x43\xca\xc2\xca\x3f\xa8\x2c\x6c\xb7\xf8\x70\xa9\xbf\xac\x2c\x91\xf5\x65\xe6\x73\xa7\x9b\x48\x52\xc2\xff\x31\x0d\x88\xd2\x5e\x46\x22\xa9\xdd\x22\x61\xf3\xb3\x04\x3e\x9d\x49\x29\xbe\xc0\xb7\xdb\x7f\x1f\xbe\x27\x2c\x6b\x92\xa3\xd1\x2a\xe8\x66\x5d\x59\x3e\x23\x5a\x9d\xe0\x54\x07\xb0\xf3\xf3\x36\x84\x25\x09\x10\xa4\x94\x30\x8d\xe3\x9d\xe0\xf4\xf5\x91\xf5\x6b\x95\xd3\xb6\xf0\x65\x3e\x12\xff\x91\xb1\x17\x08\xc0\xf9\xfb\x9c\x95\x60\x9b\xfb\x10\xf2\xef\x9a\xd9\xe7\xae\x89\x80\xd3\x11\x8f\x07\x51\x1a\x5e\xa5\x74\xec\xd2\x4b\xaf\xd6\xa4\x34\x4c\xc3\x30\x91\x35\xec\x9e\x06\xb7\x36\x7b\xf0\x0a\xc3\x0a\x51\x60\x97\x42\x00\xb9\x7a\xb5\xca\x25\x48\x3c\x3d\xca\xa4\x3c\x2b\xc2\xc6\xc4\xc9\xc8\x8d\x8f\xfb\x0e\x6b\x4b\x5d\xc5\x2c\xcd\xb6\x39\xa9\x18\xa5\xae\x68\x49\xc3\x54\x0f\x61\xaf\x9c\x89\xb5\x4f\x9f\x6b\x6e\xbc\x3c\x57\xbc\x72\x46\x81\x3d\x3a\x48\x73\x7f\xe8\x14\x9b\xf3\xcc\xf1\x8d\x25\xe6\xc0\x05\x65\x57\x06\x8d\x71\xad\x0c\x92\x07\x9e\x7f\x9d\xc7\x05\x6e\x3b\xb3\xfb\xfa\xb6\x8f\xbb\xa8\x4e\xd3\x3e\x99\xb0\x57\x50\xad\x71\xe9\xf3\xac\x2d\x97\xd5\xf7\x32\xdf\xbf\xce\x24\x3f\xc4\xd1\x77\x66\xd2\xdf\xc9\x61\x49\x13\xbf\x79\x2b\x82\xcd\x93\xe0\x42\xd7\x06\x78\x65\x8b\xfc\x34\x29\xce\x9c\xf8\xaa\x57\x9a\x1d\xcb\x79\x2d\x0e\x36\x94\x4c\x34\xb4\x4e\x6e\x6b\xe7\x4c\x30\xff\x35\x36\xd1\x79\x85\xb2\x86\x8a\x76\x4b\x04\x8a\x5a\xb5\xea\x30\x53\xd4\xae\xac\xf2\xa1\x8f\x77\xd4\x7a\x63\xc5\xbf\xb9\xcb\x5b\xd4\xe4\x24\x09\x78\xf5\x78\x1f\x0a\x3a\xbb\x65\x75\x4f\xf3\x9e\x15\xb0\xee\x67\xaa\x5d\x8d\xf8\xa3\x23\x3c\xe9\x11\x20\x5d\x67\xce\x5b\x15\x8a\x21\x0f\x32\x98\xfd\xea\xb6\x77\xf4\x13\x1a\xe5\x07\xeb\xc6\x93\xbb\xb0\x73\xf0\x01\x3d\x0c\xb2\x3b\x7a\x18\x5c\x9e\xd0\xc3\x10\x7c\x42\x0f\xd7\xff\xf4\x9b\xbe\x26\xdd\xf6\x35\x29\xbd\xa2\x13\x9f\xd5\x78\xeb\x6b\x99\xf9\x0f\xac\xfc\x54\x23\x8f\xe5\x94\xa7\x23\xa3\x31\xf9\xd6\x07\x83\x89\xc9\xc1\x99\xde\x99\x19\x20\x11\x02\x3d\x5c\xff\xa9\xcc\xc8\x25\xdd\xc9\x8c\x5c\xfd\x89\xcc\xc8\xad\x1f\xcb\x8c\x63\x7c\x91\xb2\x57\xd3\x62\xe5\xf7\xaa\x29\xc1\x77\xd5\xd4\x58\x45\xab\x2a\x81\x0e\x23\x02\x6d\x8a\xc6\x8b\x97\x04\x46\x2a\x86\xf3\x99\xf9\x4d\xd3\x23\xd5\x74\xc6\xe8\x7a\xa0\x76\xbc\x31\x1f\x7a\xce\xc1\x43\xcb\x5f\xef\x65\x2b\xc8\x1d\x86\x56\x8c\x27\x18\x5a\x69\xbc\xd4\xcb\xae\x7a\x7f\x48\xe7\xde\xda\x69\xfc\xa5\x4e\xf6\xab\xda\xe0\x88\xb8\x61\xda\xc7\xcc\xfa\x37\x32\x90\x4a\xe9\x49\xad\x7b\x3a\x75\x2b\xfc\x43\x9a\xfc\x0b\x78\x5e\x9d\x50\x4f\x6f\x01\x1f\xe0\x7f\xf3\x7b\xfc\x6f\xf1\x0c\xff\x5b\x3e\xc8\xff\x5d\x71\x3b\xff\xe6\xf9\xa5\xbd\x70\x7e\xa1\xed\x04\x73\x3a\xbb\x00\x3c\x76\x7e\x79\x27\x7f\xdb\x30\xcb\xda\xd2\x7a\x1f\xfd\xff\xc9\x5f\xf8\x9e\xbf\xbd\xdf\xe3\x6f\x1f\xdf\xf0\x77\xb2\xf3\xd0\x8a\x0f\xbe\x83\x6a\x6d\x90\x50\x6e\x58\x3a\x55\x8f\xa2\x51\xa9\x80\xfa\xa8\x6c\xde\x72\x0e\xa1\x92\x6d\xa0\x72\x4d\x19\x51\xc9\x87\x48\x4e\x6d\x08\x71\xe1\x3e\x4e\x7b\xfb\xc0\x3b\xa8\x8f\x6a\x0d\x90\x51\x45\xc9\xb2\x65\x23\x06\x71\x02\x90\xea\xa3\x7b\x6d\x89\x12\x44\x77\xeb\xc1\xc3\x7b\xaf\xdc\x44\xa1\x4b\x80\x59\xa7\x11\x52\xab\x70\xd5\x50\x14\xf3\x02\x8d\x4a\x15\x05\xcb\x00\x14\xff\x09\x00\x00\xff\xff\x87\xe7\x6f\xf2\x28\x1f\x00\x00")

func compiledMetergoverc20BinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledMetergoverc20BinRuntime,
		"compiled/MeterGovERC20.bin-runtime",
	)
}

func compiledMetergoverc20BinRuntime() (*asset, error) {
	bytes, err := compiledMetergoverc20BinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterGovERC20.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeternativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x94\x3f\x6b\xc3\x30\x10\xc5\xbf\xcb\xcd\x9a\x0a\xed\xe0\xb1\x7b\xa7\x8e\x21\x98\x73\x7c\x31\x02\xf9\x24\xa4\x77\x29\x26\xe4\xbb\x17\x4a\x8d\xfb\x27\x25\x1e\xdc\xc4\x64\x14\xdc\x1d\xef\xf7\x78\x7a\x9b\x23\xed\xa2\x16\xb0\x82\x2a\x64\x13\x47\x5e\x93\xa1\x50\xb5\x39\x92\x72\x2f\x54\x11\xb7\x6d\x26\x47\x18\xd2\xf8\x92\x52\xe8\xb4\x75\xe3\x80\x32\xfc\x41\xea\x1e\xb9\xee\x04\xe4\x28\x1a\x7e\x1e\x99\x0e\x98\x57\x3c\x3c\x3e\x7d\x1c\x48\x3c\x70\x13\x84\xaa\x3d\x87\x22\x8e\x0a\x18\xf2\x62\xe0\xc6\x07\x8f\x81\x2a\x3a\x78\x79\x9b\x76\xf7\xa6\x3b\xf8\xa8\x74\x72\x8b\x2a\xe7\x02\xc9\x97\x84\x7f\xdd\xff\x1f\xe1\x67\x2d\x45\x04\x87\x57\x4b\x29\x0c\x37\xb0\xf6\x73\x7b\xb6\xb7\x6e\x1a\xe8\xa3\x29\xce\x8b\xfb\x45\xd9\xd5\xc5\x9a\x4b\x78\x4d\x8c\x61\x26\x9b\x46\x1d\x87\x56\x42\x58\x73\xdb\x7e\x03\x5c\x9a\x63\x46\x96\xba\x1b\x87\x69\x81\x86\xe9\xd6\x51\x31\x7f\xff\xd4\x67\xcb\x2a\xed\x3d\xff\xd4\xf5\x04\xf9\xde\xbd\xbe\x6a\x29\x6e\xdf\x03\x00\x00\xff\xff\xeb\xb1\xae\x26\x0d\x08\x00\x00")

func compiledMeternativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeternativeAbi,
		"compiled/MeterNative.abi",
	)
}

func compiledMeternativeAbi() (*asset, error) {
	bytes, err := compiledMeternativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeternativeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledMeternativeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeternativeBin,
		"compiled/MeterNative.bin",
	)
}

func compiledMeternativeBin() (*asset, error) {
	bytes, err := compiledMeternativeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterNative.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeternativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledMeternativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeternativeBinRuntime,
		"compiled/MeterNative.bin-runtime",
	)
}

func compiledMeternativeBinRuntime() (*asset, error) {
	bytes, err := compiledMeternativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledNewmeternativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\xc1\x6e\xa3\x30\x10\xfd\x97\x39\x73\x5a\x69\xf7\xc0\x71\xa5\x3d\xe6\xb4\xbd\x45\x11\x1a\xf0\x84\x5a\x31\x63\x64\x8f\xd3\xa2\x28\xff\x5e\x89\x86\x40\x1b\x92\x50\x89\x40\xc4\xd1\x8a\xdf\xcb\xbc\xf7\x66\xc6\xac\x0f\x90\x59\xf6\x82\x2c\x10\x8b\x0b\x14\x81\xe6\x32\x88\x87\x78\x7d\x00\xc6\x82\x20\x06\x54\xca\x41\x04\x52\x95\xcd\x89\xbc\x87\xe3\x26\x6a\x2e\x30\x8a\xde\x53\x52\x88\x4b\x72\x12\x88\xc0\x06\xf9\x4e\xd2\x12\x04\xcd\xf2\xeb\xf7\x9f\x9a\xa0\xc4\x0a\x53\x43\x10\x6f\xd1\x78\x8a\xc0\x0b\x0a\xad\x82\x60\xaa\x8d\x96\x0a\x62\xd8\x6b\x7a\x6b\xb1\xdb\xc0\x99\x68\xcb\x70\x8c\x46\xad\x1c\xbd\x90\xbb\x57\x78\x17\xff\x98\xc2\x7b\x2d\x15\x2b\x68\xfe\x87\xb2\x34\xd5\x0c\xd6\x9e\xd0\x83\xbd\x8d\xda\x0b\x85\x0d\x2c\xfd\xc5\x5d\xaa\x34\x36\xdb\x91\x4a\x50\xa9\x2f\x22\x07\x09\x61\xcb\xcd\xa5\x27\x91\x93\x27\x3e\xa4\xf7\xd2\x4a\xad\x35\x03\xa3\xfa\x81\xc2\x31\xa6\xf8\x14\xc6\x3c\xc3\x3c\x55\xc7\x3d\xba\xd5\x46\x08\x22\x9f\x37\x89\x01\xdb\x29\x9f\x79\x3d\x8d\x62\xf2\xa2\xfb\x3c\x5f\xd8\x6a\x6d\xe4\xcc\xb6\x60\xa7\xce\xed\x59\x5e\x92\xeb\x1f\x27\x7f\x83\x63\x52\x4b\x1e\xa1\x89\xdf\x8a\x1b\x9b\x76\xe9\x5e\x4f\xdd\xee\x5d\xcf\xcf\x74\x9f\x71\x5c\xb2\x5d\x50\xd5\xf6\xb8\x90\x89\x75\x35\x1b\xb2\xe5\xaa\xb0\xc1\xf7\xf9\xa5\x59\xd1\x3b\xa9\xf3\x4f\x27\x5d\x49\x63\x59\xaf\x87\x57\x41\xd7\x4c\xbd\x81\x29\x48\x5e\xad\x6a\x31\x5e\x9c\xe6\xbc\x9b\xc3\x8a\x84\xdc\x8b\xc3\x6c\x47\xee\xdf\x9e\xba\x7f\x40\xf5\xf1\xb8\xf9\x08\x00\x00\xff\xff\x3e\x80\x29\x9a\x33\x0e\x00\x00")

func compiledNewmeternativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledNewmeternativeAbi,
		"compiled/NewMeterNative.abi",
	)
}

func compiledNewmeternativeAbi() (*asset, error) {
	bytes, err := compiledNewmeternativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/NewMeterNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledNewmeternativeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x59\x72\xe3\x3a\x0c\xbc\x12\x40\x6c\xe4\x71\xb8\xe1\xfe\x47\x78\x45\x51\x99\xe7\x44\x63\x8f\xac\x78\x51\xa5\x22\x57\xf2\xd1\xa2\xa1\x66\xb3\xd5\x04\xad\x10\x41\x81\x41\x82\x22\xa2\xb7\x08\x8a\x00\x48\x0a\x00\x94\xc6\x7f\x27\x80\x8b\x51\x00\x4c\x8a\xcb\x28\x47\xb1\x65\x9c\x58\x05\x84\x83\x57\x02\x60\x25\x5f\x2f\xd4\x08\x4a\x20\x88\x2d\x01\x21\x2f\xcf\x51\xb1\x89\xa6\x24\xd0\xd3\x82\x22\xb7\x15\x35\xed\xa4\xd8\x26\xda\x60\xa2\x01\x72\x57\x01\x9c\xa8\x97\x15\x2d\xa5\xb3\x5a\x5f\xd0\xc0\x71\xa2\x04\x2d\xe7\x10\xc3\x44\xf3\x5a\xd7\x18\x0a\x8a\xf8\x82\x12\xf0\x44\x53\xac\xea\x25\xce\xa7\x91\xe0\x44\x73\x20\xed\x00\x30\xd1\xbc\xd6\xcd\x04\xd9\x83\xad\x68\xa3\x89\x16\x61\xb3\xc8\x65\x41\x39\xe4\x15\x1d\x0c\x12\x4c\x0e\x6c\x36\xd1\x5a\x03\x81\xf2\x9c\x05\xb7\xfa\x81\x56\x6b\x9e\x26\x07\xe1\x95\x43\x73\xb3\xac\x8d\x27\xaa\xeb\xd8\x9e\x73\x22\xd7\xf9\x34\x29\x69\xa2\x63\x52\x2c\x2e\x13\xed\x2c\x26\x65\xac\x64\x04\x6f\x52\x88\x23\xa0\x0c\xdd\x20\xcc\x15\x9e\xb8\x8c\x55\x47\x1a\x08\x47\x20\x05\x8a\x08\x98\x20\x42\x1c\x1e\xf8\xb3\x86\xff\xba\x50\x13\x28\x04\x18\xdf\x4d\x21\x61\x02\x59\x3e\xc3\x56\x9c\x44\x07\x17\x06\xc1\x08\x31\x44\x1c\x9e\x5b\xc6\xe2\x32\x66\xbd\x93\x10\x28\x81\xd3\x25\x5b\x49\x5b\xb6\xb1\x3f\x93\xad\x7f\x61\x7b\x4f\xd5\x7b\xc6\xde\xa3\xc2\x70\xc9\x57\x15\xfa\xb8\x63\xf9\xb8\xb6\x01\x6c\x53\x35\xb0\x3e\x5e\xdb\xf1\xfd\xab\x7a\x47\xb1\x31\x03\x80\x4b\x66\xc2\x5b\x66\x89\x5e\xcd\xcc\xfd\xb3\xb6\x28\xf3\x73\x8f\xc6\x65\xeb\xdf\xd0\x9f\xe9\xdf\x94\xfd\xb0\x23\x08\x61\xc3\x96\xd8\x5f\xac\x7b\x16\xdf\x38\x82\xa4\x6d\x99\xa5\xf0\x44\x1d\x0b\xd8\x71\x1d\xcb\xd6\xbf\x54\xda\xa8\x5a\xbe\x51\xb5\xf9\xa6\xea\xd8\x19\x9e\xa7\x41\x55\x39\xcc\x96\x49\xb7\x6c\x4d\x5e\xec\xa5\x86\xb2\xf1\x12\x47\xda\x32\xab\x4f\xf0\xd2\x6d\x66\xa5\x7d\x3b\x5d\xb8\xc7\xcd\x4c\x24\x3c\x61\x2f\xbf\x39\x93\xae\xdf\x9f\x89\xf0\xf6\xfd\x16\x51\x45\x70\x6c\x87\x3d\x28\xf6\x17\x7d\xca\xab\xf5\xf1\x5a\x36\x1e\x94\x2a\x5b\x66\xb5\x2b\x22\x18\x1d\x9f\xaf\x6f\xf3\x5b\xc3\x8b\xf3\x1b\x31\xe0\x51\x3f\x0c\xee\xe6\xdd\x88\xbc\x95\x64\xa5\x41\xc8\x3d\x46\x63\x0d\x85\xc0\x13\x45\x15\xea\x96\x0d\xb0\x3a\xf4\x9a\x82\xd7\x10\x1b\x77\xb1\xc6\x1a\x92\xa2\x07\xe4\x38\xde\xe5\x3f\xd5\x23\x3d\xbf\x83\xbb\x5c\xa5\x08\xff\x63\x40\x31\x2c\xe7\xab\x7e\x79\xdf\x5c\xbb\xa2\xb1\x26\x53\x15\x71\x6d\xc6\x16\xc4\xd5\x54\x8c\xf7\x9c\xaf\x46\x35\xf9\xd0\x9f\xe4\x43\xfb\x4f\x7a\x66\xd4\xe5\x24\x26\xb0\xae\x8e\xfe\x60\x7d\xdb\x6d\x7d\x15\x8d\x8c\x55\x2c\xec\x3b\xbf\xbe\x57\x5f\xa2\xb3\xe9\xfb\x69\xec\x55\xff\x1a\xeb\xf8\x43\xad\x42\x26\x06\x06\x5a\x2d\x3d\x40\xdf\x45\xdb\x47\xf8\x76\x38\xf7\x44\xaa\xca\xae\x54\xa8\xea\x4a\x5a\x54\xc6\xf1\x5e\x51\x59\xaf\x64\xc4\x3e\x55\xe5\xb1\x59\x40\x91\xce\xa4\x29\xf8\xbf\x35\x55\x13\x37\x32\xd1\x1d\x69\xb0\xdb\xa9\x4b\x06\x8c\x9d\xf0\xc1\xfa\x9e\x2e\x6b\x0f\xb9\xf6\xc6\xce\x76\x34\x6b\x7f\x5e\x1e\xec\xec\x12\x6e\x24\xc0\x09\xf2\xe0\x7c\x7e\xdd\xb1\x77\x8d\x44\xd8\xeb\xd8\xdf\xde\xe0\x8b\xbe\xb6\x33\x71\x77\x76\x07\x47\x7a\x83\x9f\xea\xdd\xbd\xbb\xd9\xde\x93\xc3\x6f\xd6\x7e\x33\x15\xae\x66\xef\x6f\xef\x75\xac\x33\xb8\xd5\x87\xbd\xbd\xf7\x3a\x9b\xbe\x87\x3c\x7b\x5d\xe1\x77\xeb\x7b\xc2\xbd\xec\xce\x73\x2e\x07\x13\x0b\xda\x87\xd2\x0f\xc8\xdb\x1f\x9a\xb5\xbb\x77\xb1\x9d\x9d\xed\x3b\xb2\xf6\x84\x5e\xbd\xbb\xef\xba\xed\xd6\x37\xf6\x5d\x27\xcb\xd9\x7d\xe7\xb0\xbd\xbf\x20\x1c\xcf\x59\x18\xa8\x68\xb0\x6c\xd9\x02\x81\xc4\x00\x16\x6b\x86\x90\x33\x96\x4a\xaa\x44\x81\x25\xc5\xc0\x31\x78\xa1\xd6\x53\x33\x55\x32\xf7\x52\xad\x66\x0f\xcc\x91\xbd\x73\x82\x8e\x5d\x22\x77\x03\x80\x90\xfe\x0b\x00\x00\xff\xff\x5d\x6a\xce\xa2\x20\x24\x00\x00")

func compiledNewmeternativeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledNewmeternativeBin,
		"compiled/NewMeterNative.bin",
	)
}

func compiledNewmeternativeBin() (*asset, error) {
	bytes, err := compiledNewmeternativeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/NewMeterNative.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledNewmeternativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x69\x72\xab\x3c\x10\xbc\xd2\xec\x23\x1d\x47\xeb\xfd\x8f\xf0\x95\x10\x79\x5f\x12\x9e\xfd\x30\xf1\x42\xb9\x82\x2b\x7f\x1a\x31\xb4\x5a\x4d\x6b\x14\x83\x00\x06\x02\x4a\x06\x20\x6c\x08\x86\x00\x1d\xd5\x0d\x00\x58\xbd\x00\xc2\xc1\x2b\x02\x88\x71\x5f\x2f\xb4\x00\xc6\xa0\x88\x35\x02\xa3\x2c\xef\x31\xf5\x89\xc6\xa8\xd0\xe2\x82\xa2\xd4\x15\x75\x6b\x6c\x58\x27\x5a\x61\xa2\x04\xa9\x99\x02\x4e\xb4\xe7\x15\xcd\xb9\x89\x79\x5b\x50\x92\x30\x51\x86\x9a\x12\x05\x9a\x68\x5a\xeb\xba\x40\x46\xd5\xbe\xa0\x0c\x32\xd1\x18\x8a\xf5\x1c\xe6\xdb\x58\x71\xa2\x89\xd8\x1a\x00\x4c\x34\xad\x75\x13\x43\xea\xe4\x2b\x5a\x79\xa2\x59\xc5\x3d\x48\x5e\x50\xa1\xb4\xa2\x83\x41\x84\xc9\x41\xdc\x27\x5a\x0a\x31\x98\xcc\x59\x48\x2d\x1f\x68\xf1\xda\xe3\xe4\xa0\xb2\x72\xa8\xdd\x3d\x59\x95\x89\xda\x3a\xb6\xa5\x14\xb9\xdb\x7c\x9b\xe6\x38\xd1\x31\x29\xd1\xae\x13\x6d\xa2\xae\x79\xac\x64\x80\x5e\x35\xb3\x04\x40\x1d\xba\x01\xcd\x15\x9e\xb8\x8e\x55\x47\x1e\x88\x04\x60\x03\x0e\x08\x18\x21\x40\x18\x1e\xf8\xb3\x86\xff\xba\xd0\x22\x18\x10\x8c\x67\x23\x45\x8c\xa0\xcb\x6f\xd8\x4a\xa2\xda\xe0\x22\xa0\x18\x20\x50\xc0\xe1\xb9\x65\x2c\x2e\x63\xd6\x3b\x11\x81\x23\x74\xfe\xcc\x56\xe3\x96\x6d\x68\x8f\x64\xdb\xbf\xb1\xbd\xa5\xea\x2d\x63\x6f\x51\x61\xb8\xe4\xbb\x0a\x6d\xdc\xf1\x74\x5c\x5b\x02\xdf\x54\x25\xb1\xfb\x6b\x3b\x9e\xbf\xa8\x77\x50\x1f\x33\x00\xf8\xcc\x4c\x65\xcb\x2c\xf2\xb3\x99\xf5\xfe\x55\x5b\xd4\xf9\xbb\x45\xe3\xbc\xf5\x2f\xb5\x47\xfa\x37\xa6\x7e\xd8\x11\x8c\xb0\x61\xcb\xd2\x9f\xac\x7b\xd2\xbe\x71\x04\x6b\xdd\x32\x8b\xf4\x40\x1d\x33\xf8\x71\x1d\xf3\xd6\xbf\x9c\xeb\xa8\x9a\x7f\x50\xb5\xf6\x4d\xd5\xb1\x33\x3c\x4e\x83\x62\x7a\x98\xad\xb0\x6d\xd9\xba\x3e\xd9\x4b\x15\x75\xe3\x25\x09\xbc\x65\x56\x1e\xe0\xa5\xeb\xcc\x72\xfd\x71\xba\x48\x0b\x9b\x99\x28\x3d\x60\x2f\xbf\x3a\x93\x66\x3f\x9f\x89\xca\xf6\xfb\x56\x35\x43\xe8\x58\x0f\x7b\x50\xfd\x2f\xfa\xe4\x67\xeb\xd3\x4b\xde\x78\x50\x8b\x6e\x99\x95\x66\x88\xe0\x7c\x7c\xbe\x7d\x9b\xdf\x46\x4f\xce\x6f\x44\xc2\xa3\x7e\x18\xdc\xbd\x37\x67\xee\x35\x47\xcf\x15\x28\xb5\x10\x5c\x8c\x32\x43\x8f\x1c\x4c\xb9\x79\x72\xc0\xd2\xa1\x95\x48\xbd\x50\xa8\xd2\xd4\xab\x18\x45\xc3\x4e\x28\x61\x7c\xcb\x7f\xaa\x07\x7e\x7c\x07\xf7\x79\x95\x02\xfc\x8f\x01\x07\x5a\xce\x57\xed\xf3\x7d\xef\xd6\x0c\x5d\x2c\xba\x99\x6a\xb7\xea\xe2\xa4\xdd\xdc\xd4\x65\xcf\xf9\x6a\x54\xd3\x0f\xfd\x59\x3f\xb4\xff\xa2\x67\x42\x5b\x4e\x62\x0a\xeb\xea\xd8\x1b\xeb\x5b\xaf\xeb\x6b\xe8\xec\x62\xea\xb4\xef\xfc\xfa\x5a\x7d\x99\xcf\xa6\xef\x97\xb1\x17\xfd\xeb\x62\xe3\x0f\xad\x28\xbb\x3a\x38\x58\xf1\x78\x07\x7d\x17\x6d\xef\xe1\xdb\xe1\xdc\x13\xa9\xaa\xbb\x52\xa1\x58\x37\xb6\x6c\x3a\x8e\xf7\x86\x26\x76\x21\x23\xf6\xa9\xaa\xf7\xcd\x02\x0e\x7c\x26\x4d\xa1\xff\x5b\x53\x73\xed\xce\xae\xb6\x23\x0d\x76\x3b\x75\xc9\x80\xb1\x13\xde\x59\xdf\xd3\x65\xed\x21\xd7\x5e\xd9\xd9\x8e\x66\xed\xfb\xe5\xc1\xce\x2e\xe1\x4a\x02\x9c\x20\x0f\xce\xe7\xd7\x1d\x7b\xd7\x48\x84\xbd\x8e\xfd\xed\x0d\xbe\xe9\xeb\x3b\x13\x77\x67\x77\x70\xa4\x37\x78\x57\xef\xee\xdd\xcd\xf6\x9e\x1c\x7e\xb3\xf6\x87\xa9\x70\x31\x7b\x7f\x7b\xaf\x63\x9d\xc1\xb5\x3e\xec\xe5\xbd\xd7\xd9\xf4\x3d\xe4\xd9\xcb\x0a\xbf\x5a\xdf\x13\xee\x65\x37\x9e\x73\x85\x5c\x9d\xac\x0d\xa5\xef\x90\xb7\x6f\x9a\xb5\xbb\x77\xb1\x9d\x9d\xed\x2b\xb2\xf6\x84\x5e\xbd\xb9\xef\xba\xee\xd6\x17\xf6\x5d\x27\xcb\xd9\x7d\xe7\xb0\xbd\xff\x41\x38\x9e\xb3\x30\x50\x35\xf2\xe4\xc9\x89\x41\x03\x81\x87\x92\x80\x52\xc2\x5c\xd8\x8c\x99\x44\x63\x20\x09\xd4\x33\xd7\x16\xab\x9b\xb1\xf7\x9e\x8b\x97\xd4\x49\x24\x48\x6f\x12\xa1\x61\xd3\x20\xcd\x01\x80\xe2\x7f\x01\x00\x00\xff\xff\x71\x85\x28\xa4\xfa\x23\x00\x00")

func compiledNewmeternativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledNewmeternativeBinRuntime,
		"compiled/NewMeterNative.bin-runtime",
	)
}

func compiledNewmeternativeBinRuntime() (*asset, error) {
	bytes, err := compiledNewmeternativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/NewMeterNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xc1\x6a\xc3\x30\x0c\x86\xdf\xe5\x3f\xfb\xd4\xb1\x1d\xf2\x0e\x3b\xed\x58\xc2\x50\x12\x75\x98\xa5\x72\x88\xa4\xac\xa6\xe4\xdd\xc7\x4a\x12\xc3\xe8\x08\x65\x47\xe3\xcf\xbf\x3e\xa3\xff\x78\x45\x9b\x44\x8d\xc4\x50\x9d\xa8\x57\x0e\x88\x32\xb8\x29\xaa\xe3\x15\x42\x67\x46\x85\xf7\x4f\xce\x08\xb0\x3c\xfc\x9c\x9a\x6c\xac\x4f\x07\xcc\xa1\x00\x13\xf5\xce\x05\xf1\x28\x76\x78\x7e\xc1\x5c\x87\x15\x51\x36\x04\x24\xb7\x25\xbc\x0e\x18\x28\x53\xd3\xf3\x36\x58\x8d\x8c\x5f\xdd\xa8\x89\x7d\xb4\x8c\x0a\x92\x64\x85\xb6\xec\x93\x4b\x6b\x31\xc9\x6d\x7e\x91\xb7\xd1\x1f\x71\x2f\x62\x1f\xbf\xc4\xb6\x97\xf7\xbf\xb3\x2f\x3d\x45\xfe\x7a\x54\xb7\xe8\xf0\x85\x5b\xb7\x34\xee\x39\x51\xd7\x8d\xac\xfa\x7f\x27\x92\x24\xf9\x9c\x5c\xef\x15\x20\x4a\xc7\x17\xee\x56\xdf\xc5\xe2\xcf\x3a\x6c\xf8\x92\xb4\xf0\xfb\xed\x78\xbb\x2d\x61\xb9\xe7\x89\xc5\x30\xd7\xdf\x01\x00\x00\xff\xff\xfb\x8f\x43\xc8\x9d\x02\x00\x00")

func compiledParamsAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsAbi,
		"compiled/Params.abi",
	)
}

func compiledParamsAbi() (*asset, error) {
	bytes, err := compiledParamsAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x09\x92\xeb\x3a\x08\xbc\x52\x03\x62\x3b\x8e\xac\xe5\xfe\x47\xf8\x25\xdb\x89\x33\xcb\xcf\x4c\xf2\x6a\xe4\xaa\x48\x01\xcc\xd2\x0d\xb2\x21\x60\x28\x50\x96\x12\x20\x35\x02\x08\xea\x06\x20\x30\xbb\x6e\x0a\x23\x94\x42\xb1\x76\x30\x96\x46\x72\xfd\x4e\x01\xae\xf7\x0d\x28\x62\xb4\x5b\xa9\x1f\x1e\x44\xbd\x81\xf0\xe6\x4a\xa0\x98\xcc\x73\x91\x05\x4c\xd8\x65\x96\x2c\xa0\xb2\xc7\x69\xea\x4b\x1a\xa3\x56\xab\xed\x94\xa6\x1f\xd2\x26\xa5\x21\x86\x1e\xd2\xde\xd4\x75\xbb\xea\xba\xea\xb5\xf8\x52\x2f\x52\x57\x3d\x01\x31\x48\x10\x28\x11\x08\xc8\x92\x82\x92\x2c\x61\xe0\x75\x44\x72\xee\x5a\xd1\xcf\x32\xdd\x1f\x23\x90\x88\x9a\x6e\xc0\x63\xd4\x2a\x5f\xa3\x36\x7b\x2d\xea\x3d\x02\x6f\x65\x45\xd8\x99\xa0\x40\x70\xd0\x62\x64\xb7\xa5\xdd\xe6\xd4\x24\x41\x12\x53\x1e\x33\x19\xdf\xd4\x3f\xc9\x08\x62\xf3\xa3\x57\xbf\xb3\xf1\xd3\x22\x7b\xc5\xf6\xe7\x6c\x77\x14\xb7\x2b\xa7\x57\xbc\x8b\xbc\x62\x4d\x85\x74\xc7\x85\x7a\x5f\xb8\xac\x4c\x7c\x22\x9a\x78\xd6\x77\x5b\x19\x47\x85\x28\x58\x38\x9e\x2c\x2e\x96\x20\xc1\x4b\x43\xf5\xc2\x20\xe0\xd3\xd8\xd5\xd2\x9a\x17\x4b\x1b\x52\x19\xa6\x1e\xa6\x26\xae\x5e\x6c\x3a\x33\x9c\x4d\x9d\x96\xdd\x3a\x59\xf9\x1c\x4f\xf1\x04\xd3\x35\x01\x78\x05\x17\x13\x2e\x69\x35\xa5\x86\x84\x9c\xde\xe4\x71\x3e\xff\x65\xd6\xc1\x1f\x10\x92\x5b\xc7\xdf\xf6\x07\x74\x1e\x7b\x9b\xcf\x09\x00\xee\xf5\x85\xac\xd9\xd9\xfb\xd9\x03\xb2\x91\x9e\x7d\xce\xeb\xb6\x78\xec\x73\xad\x93\x2e\xad\x43\x5d\xfa\xa1\x97\x71\x9c\x4e\xbb\xfd\x39\x7c\xae\x5c\x7c\x72\x0c\xe1\x62\x33\xa0\xa4\x53\x1b\x8d\x9e\xe1\x1b\x89\x8c\xc9\x93\x52\x8a\xe4\xc6\x5a\xdb\x56\xad\xea\xb0\x9c\x4c\x39\x22\x6d\xb6\xec\xe4\x19\xfc\xdb\x49\xad\x47\x85\x76\xdc\x5c\xaf\x32\xb6\x75\x52\x8c\x51\xef\x7c\xf1\x1f\xf1\xc5\xff\xcf\xd7\xad\x2a\xfe\x99\x21\xe1\xfe\x84\x21\x29\xf4\x9c\xa1\xc3\xff\x92\x33\x82\xe8\x7c\xeb\xf6\x2d\x3a\x7c\x5e\xb7\xaa\xd2\xf7\xb7\xe9\xda\xcf\x7f\x6f\xa2\x9e\x5c\xc9\x66\xaf\x67\xbd\xf4\x17\x98\xff\x0e\xcf\xae\xcf\xf0\x1c\xf9\x0e\x9e\x73\xbe\x81\x27\xd6\x27\xac\x92\xa9\xb1\x57\xaf\xce\x02\x0d\x06\x4d\x61\xd3\xe8\xc8\x1c\x39\x3c\xda\x14\xe3\x59\x19\x62\x22\x3d\xbc\x94\x2d\x2a\x35\x90\x28\xa5\x90\x52\x9f\x52\xbb\xc8\x2c\x5c\x8f\x84\x39\xff\x0b\x00\x00\xff\xff\xff\xc3\xb3\x95\xc2\x08\x00\x00")

func compiledParamsBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsBin,
		"compiled/Params.bin",
	)
}

func compiledParamsBin() (*asset, error) {
	bytes, err := compiledParamsBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x59\x76\xe4\x30\x08\xbc\x52\x01\x62\x3b\x8e\xac\xe5\xfe\x47\x98\x27\xdb\xbd\x24\x93\xe9\xc4\x3d\x2f\xf2\x87\xd5\x40\xb3\x54\x01\x36\x04\x0c\x05\xca\x06\x14\x31\x82\x11\xa0\xae\x6e\x00\x44\xbd\x81\xf0\xe6\x49\xa0\x98\xcc\xf3\x90\x05\x4c\xd8\x65\x96\x2c\xa0\xb2\xc7\x69\xea\x4b\x1a\xa3\x56\xab\xed\x94\xa6\x1f\xd2\x26\xa5\x21\x86\x1e\xd2\xde\xd4\x75\x5b\x59\x05\x66\xd7\x4d\x4a\x80\x74\x69\x2c\x8e\x6c\x0f\xb9\xee\x15\xa4\xae\x7a\x02\x62\x90\x20\x50\x22\x10\x90\x25\x05\x25\x59\xc2\xc0\xeb\x8a\xe4\xdc\xb5\xa2\x9f\x65\xba\x3f\x46\x20\x11\x35\xdd\x80\xe7\xa8\x55\xfe\x8e\xda\xec\x5a\xd4\x7b\x04\xde\xca\x8a\xb0\x33\x41\x81\xe0\xa0\xc5\xc8\x6e\x4b\xbb\xcd\xa9\x49\x82\x24\xa6\x3c\x67\x32\xbe\xa8\x7f\x92\x11\xc4\xe6\x47\xaf\x7e\x67\xe3\xbb\x43\x76\xc5\xf6\xfb\x6c\x77\x14\xb7\x47\x4e\x57\xbc\x8b\x5c\xb1\xa6\x42\xba\xe3\x42\xbd\x2f\x5c\x56\x26\x3e\x11\x4d\x3c\xeb\xbb\xad\x8c\xa3\x42\x14\x2c\x1c\x4f\x16\x17\x4b\x90\xe0\xa5\xa1\xfa\xc0\x20\xe0\xd3\xd8\xd5\xd2\x9a\x17\x4b\x1b\x52\x19\xa6\x1e\xa6\x26\xae\x5e\x6c\x3a\x33\x9c\x4d\x9d\x96\xdd\xba\x59\xf9\x1c\x4f\xf1\x02\xd3\x35\x01\xb8\x82\x8b\x09\x97\xb4\x9a\x52\x43\x42\x4e\x6f\xf2\x3c\x9f\xff\x33\xeb\xe0\x0f\x08\xc9\xad\xe3\x6f\xef\x27\x74\x9e\x7b\x9b\xcf\x09\x00\xee\xf5\x85\xac\xd9\xd9\xfb\xd9\x03\xb2\x91\x9e\x7d\xce\x6b\x5b\x3c\xf7\xb9\xd6\x49\x0f\xad\x43\x5d\xfa\xa1\x97\x71\xdc\x4e\xbb\xfd\x39\x7c\xae\x5c\x7c\x72\x0c\xe1\x62\x33\xa0\xa4\x53\x1b\x8d\x9e\xe1\x1b\x89\x8c\xc9\x93\x52\x8a\xe4\xc6\x5a\xdb\x56\xad\xea\xb0\x9c\x4c\x39\x22\x6d\xb6\xec\xe4\x19\xfc\xd3\x49\xad\x47\x85\x76\x6c\xae\xab\x8c\x6d\x9d\x14\x63\xd4\x3b\x5f\xfc\x4b\x7c\xf1\xbf\xf9\xba\x55\xc5\xdf\x33\x24\xdc\x5f\x30\x24\x85\x5e\x33\x74\xf8\x5f\x72\x46\x10\x9d\xff\xba\x7d\x8b\x0e\x9f\x8f\xad\xaa\xf4\xf5\x36\x5d\xef\xf3\xd7\x9b\xa8\x27\x57\xb2\xd9\xeb\x59\x2f\xfd\x06\xe6\x3f\xc3\xb3\xeb\x2b\x3c\x47\xbe\x83\xe7\x9c\x6f\xe0\x89\xf5\x09\xab\x64\x6a\xec\xd5\xab\xb3\x40\x83\x41\x53\xd8\x34\x3a\x32\x47\x0e\x8f\x36\xc5\x78\x56\x86\x98\x48\x0f\x2f\x65\x8b\x4a\x0d\x24\x4a\x29\xa4\xd4\xa7\xd4\x2e\x32\x0b\xd7\x23\x61\xce\x3f\x01\x00\x00\xff\xff\xc5\xf7\x54\x77\x82\x08\x00\x00")

func compiledParamsBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsBinRuntime,
		"compiled/Params.bin-runtime",
	)
}

func compiledParamsBinRuntime() (*asset, error) {
	bytes, err := compiledParamsBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsnativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x41\x4e\xc3\x30\x10\x45\xef\x32\x6b\xaf\x8a\x60\x91\x3b\x70\x82\x2a\x42\x93\x74\x8a\x2c\xcc\x38\xca\xfc\x09\x58\x55\xef\x8e\x5a\x51\x27\x10\xa4\x88\x2e\x2d\x7f\xfb\xbf\xf7\xf7\x27\xea\xb3\x1a\x58\x41\xcd\x91\x93\x49\xa0\xa8\x83\xc3\xa8\xd9\x9f\x48\xf9\x5d\xa8\xa1\x37\x29\x14\x08\x65\xb8\x1c\xba\x02\xb1\x87\x1d\x9d\x43\xbd\x9f\x38\xb9\xcc\x09\x8f\x8a\xdd\xe3\x13\x9d\xdb\x70\x4b\x28\x23\x4e\xf2\x62\x02\x0a\x94\x1d\xdf\x0d\x6d\xa0\x81\x0b\x77\x49\x6a\xbb\x81\x21\xcf\x0e\xee\x62\x8a\x28\x97\xb7\x59\x6f\xa1\x5a\x71\x74\xed\x11\xb3\x5e\x29\x66\x03\x8c\xbe\x14\x58\xf5\xcb\xa7\xf4\x8e\x3c\xfe\x80\xa8\x1a\xf3\xf7\x7c\x38\x8c\x62\x76\x35\xd8\x06\x9c\xa2\x7c\xfc\x17\x6d\x63\xdb\x15\xf9\xeb\xaf\xe5\xfe\x80\x5e\xce\x7e\x3f\x74\xfb\x15\x00\x00\xff\xff\x4b\xb6\x04\x06\x13\x02\x00\x00")

func compiledParamsnativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsnativeAbi,
		"compiled/ParamsNative.abi",
	)
}

func compiledParamsnativeAbi() (*asset, error) {
	bytes, err := compiledParamsnativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ParamsNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsnativeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledParamsnativeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsnativeBin,
		"compiled/ParamsNative.bin",
	)
}

func compiledParamsnativeBin() (*asset, error) {
	bytes, err := compiledParamsnativeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ParamsNative.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsnativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledParamsnativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsnativeBinRuntime,
		"compiled/ParamsNative.bin-runtime",
	)
}

func compiledParamsnativeBinRuntime() (*asset, error) {
	bytes, err := compiledParamsnativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ParamsNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x8f\xda\x30\x10\xfd\x2f\x3e\xe7\x44\xd5\x1e\x72\x45\xea\x8d\xaa\x6a\xd5\x13\x42\xd5\xc4\x19\xa8\x85\x33\x8e\x3c\x63\x50\x84\xfa\xdf\x57\xa0\x25\x31\x4b\x84\x77\xf9\xd8\x84\x23\xe2\x4d\x3c\xcf\xf3\xde\xf3\xcc\x77\x4a\x3b\x62\x01\x12\x95\x2f\xc1\x32\x66\xca\x50\x1d\x84\x55\x3e\xdf\x29\x82\x0a\x55\xae\xfe\x32\xda\xa5\xca\x94\x34\xf5\xfe\x27\x94\xa5\x47\x66\xf5\x3f\xeb\x10\x84\xdb\x19\xb0\xa0\xef\x81\x2d\xb2\x23\x8c\x51\x5a\x94\x0b\xf2\x7a\xce\x22\x53\x35\x34\x50\x58\x6c\x7b\x60\x01\xc1\x59\x10\x28\x8c\x35\xd2\xa8\x5c\x91\xa3\x23\xa8\x3d\x61\x19\x48\x8b\x71\x74\xe8\xa4\xe3\x21\x3e\x5c\x4b\x23\x70\x82\x81\xe1\x3f\xfc\xa6\xfd\xb6\xba\x2b\x2c\x9c\xb3\x87\xaa\x34\xaf\x8d\xc1\xed\x23\x19\xad\xb1\x89\xfa\x6a\x04\xf9\xcb\xe4\x64\x24\xe2\x3c\xac\xf0\xbb\x4b\x93\x8a\x8a\x87\xe7\x55\x58\xa7\xd7\x3f\x42\x55\xc4\x03\x0b\x86\x64\xf2\xf5\x5b\xcc\x0f\x09\xfd\xaa\x49\x71\x8b\x0b\xef\xc4\xed\x16\x37\x25\x65\xe8\xb1\x72\x1b\x3c\x93\xe2\xd0\x4e\xea\x1a\xd4\xc1\x7b\x24\xf9\x5d\x3b\xe2\xb4\xb4\xe2\x0f\x8c\xe0\xfa\xb5\xc7\xd2\x48\x8f\x3a\x22\x8c\x47\xed\x36\xe8\x9b\x5f\x20\x78\x51\x80\x8c\x32\x3d\x7c\xef\xa7\x05\x7a\xe8\xb4\x6e\xa1\xcc\xed\xa0\x2e\xa5\xb7\x45\xdd\x3b\xd2\xa1\x75\x77\x45\x2e\x14\x60\x81\x34\x3e\x43\x30\x44\x13\x18\xe1\xdd\x47\x9e\xef\x97\xf9\xee\xf4\xff\x8b\xb6\x4a\xbb\x6a\x04\xf1\x90\x4c\x67\x28\xcb\x11\x47\xf3\x3f\xe0\xa9\x2b\x93\xca\x1f\x7a\x87\xe9\x1a\xae\xce\x57\xc6\xcf\x79\x43\x1e\xb9\x48\xee\x01\xd3\xa3\x21\x9e\x28\x82\x02\x8d\x31\x84\x3e\xf8\x92\x19\x7e\xe7\x62\x72\x07\x13\x2c\x5e\x02\x00\x00\xff\xff\xc1\xa7\x82\x58\x64\x0d\x00\x00")

func compiledPrototypeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeAbi,
		"compiled/Prototype.abi",
	)
}

func compiledPrototypeAbi() (*asset, error) {
	bytes, err := compiledPrototypeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Prototype.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x0b\x96\xda\x3c\x0f\xdd\x92\xde\x96\x97\xe3\xe7\xfe\x97\xf0\x1f\x27\x19\x98\x99\x4c\x33\x38\x14\x7e\x4e\x3f\xe0\xb4\x14\x11\x3f\xe4\x7b\x75\x65\xd9\x35\x70\x30\x10\x50\x62\x71\x40\x35\x04\x40\xd0\x60\x00\xe0\xd0\xab\x66\x05\x43\xac\x94\x1c\xc6\x6f\x04\xe3\x17\x8e\xe3\xef\xce\x00\xd7\xf6\x06\x20\x6c\xb8\x3c\xd5\x71\xed\x81\x35\x14\x40\x38\xf9\x8a\x00\x62\xdc\xb7\x17\x9a\x83\x31\x20\x07\xcf\xea\x28\xcb\x38\xa6\x61\xb1\x52\x15\xae\x65\xb5\xa2\xc6\xcd\x2a\x2d\x24\xd1\xb0\x5a\xab\xac\x56\x6c\x51\x73\x13\x5d\xac\x24\xb8\x5a\x89\x22\x79\xb5\xbc\x5a\x13\x6d\x56\xae\x5e\x42\x5d\xad\x0c\xba\x5a\xd9\x34\x76\x6f\x75\xb5\xba\x6f\x56\x0f\x98\x62\xdf\x9e\xad\x7d\xb5\x5a\xf5\xe2\x1a\xd3\x62\x15\xd9\xfa\x0d\x66\x45\x3a\xaf\x33\x93\xc4\xab\xd5\xa1\x76\xd1\x2c\xab\xb5\x6d\xbe\x79\x49\x9c\x45\x56\xdf\x54\x36\x2f\xa2\xb2\x17\xc9\xbc\x5a\x53\xd8\xac\xad\xa2\x72\x81\xc5\x6a\xb0\x8d\x56\x62\x91\x5e\x04\x57\xab\x6f\x5e\x94\x5a\x29\xc5\xd8\x57\x6b\x2f\xab\xb5\x7a\x60\xe6\x54\x16\x6b\xe0\xae\x41\xf3\x95\x0b\x17\x8e\xe0\xe8\xfb\x2b\x47\x60\xc5\x5c\x1c\xd8\x80\x1d\x01\x23\x38\xf8\xe0\xc0\x05\xc3\xdf\x5e\x68\x71\x4c\x1b\x46\xdb\x48\x71\xe9\xe1\xbe\xf6\xba\xbc\x87\x2f\x39\xa9\x69\x06\xf8\xec\x85\xe9\xde\x8b\x9c\x5e\xd8\x0b\x4f\x6d\x78\xb1\x44\x1c\x3a\x38\xa1\xae\x6f\xc7\x11\x81\x4b\x1b\x5c\x9e\xdd\x9e\x88\x08\x1c\xa1\xf3\x67\xaf\xdb\x2e\xbe\x81\x88\x1f\xe3\xf5\x18\x07\xe3\x81\x47\xb1\xd0\x57\x8f\x3e\x5a\x7c\x7c\x4e\x78\x46\x52\xf7\x9e\x79\x79\x8c\x67\x7f\xf4\x28\xe5\x6f\x1e\xcd\x78\x90\xda\xce\x03\x86\x07\x61\xf3\x57\x18\x99\x93\xed\xe2\x8a\x11\xf7\x5e\x88\xfd\x7d\x2f\x2e\xb3\xa8\x8c\x5f\xd7\x7c\xa6\xd7\x99\x67\x27\xb0\xe4\x28\xfb\x55\xa8\xf5\x39\x6c\x3c\x64\x68\x43\xd8\x63\xd6\xf2\x6e\xb6\x22\xf0\xc2\xcc\x6b\x0d\x77\x5e\x88\xec\xe3\x47\xfc\x49\x6b\xfe\x31\x33\x04\x2b\xa7\x15\x40\x52\xdf\x7b\xd0\xe4\x71\xb1\x83\x68\x7b\x36\x48\xdf\xe7\x77\xa5\x07\xe4\xf7\xcb\x2c\xa8\x7d\x8d\x60\xbe\xae\xd9\x97\xf5\xa3\xad\xc5\x9f\x57\x50\x75\x9f\xdf\x34\xe9\xeb\x32\x19\xb9\x94\x1d\x02\x9a\x79\xef\x45\xf3\x07\x22\xa0\xcd\xee\xde\x5b\x18\xec\xe3\xcf\xe4\x01\xf9\xeb\x32\x6b\x2b\xfa\x72\xca\x6f\x71\x9f\xff\xac\x3d\x20\xff\xfd\xb5\x55\x1c\x75\xd2\x59\xc5\x0a\xe0\x3b\x6f\x03\x3f\x40\x73\x2f\xb3\xf5\xec\xbb\x78\x09\xb2\xcf\x5f\x21\xbd\x70\xfe\xc2\xc4\xf1\x6c\xbc\x0d\xdf\x0a\x3b\x19\x62\x96\x3a\x7a\x61\x98\x99\x93\x31\x26\xcf\x94\x02\x39\x3b\x6f\xfd\xf3\xe7\x5a\xfb\x9e\xba\x1d\x36\xf6\x80\xc0\xa2\xe4\x8f\x8f\xc8\xa7\x44\xfd\x25\xf3\x00\x5c\xb3\xd4\xe0\xd5\xc2\xba\xe0\xc0\x19\x75\x63\xa3\xc7\x6f\xf9\x53\x53\xc7\xeb\xaf\xc9\x74\x8d\x90\xc1\xa6\xb6\xfe\x6b\x7b\xee\xfa\xb6\xb5\xf2\x9e\x45\x96\xd1\x18\x21\x56\x17\x97\x37\xb2\xb7\x8c\x71\x45\x96\x7e\x47\x36\x86\x7e\x80\x6c\x8c\x7c\x8c\xec\xda\xff\xb0\x13\x38\xe2\xd6\x2a\xc5\xcf\x7d\x5e\x95\x4a\xf1\x67\xf5\x18\x9f\xe3\xfb\x3d\x3c\xa1\xd8\xb8\xf5\x4e\xff\x0a\x4f\x0e\xce\x0d\x66\xf0\x4d\x76\x84\x6f\xf2\x33\xf8\xa6\xf8\x7f\xc0\x17\xa9\x2a\x50\xff\x67\x74\xe0\xf3\xdc\xbf\x9c\x0a\x9f\xc3\x39\x1b\x1f\xe0\x9c\x43\x38\x81\x73\xf6\x7a\x27\xce\x08\x39\xf5\x7b\xf2\x7a\xcc\x2e\xbd\xc4\xfc\xce\xeb\xb7\x8e\x31\xc5\x9a\x12\xda\x01\x6b\xca\xc8\xfa\xd3\xac\x29\xc9\xe7\x58\x33\xf6\x88\x86\x50\x69\x61\xdb\xe8\x31\x74\xf0\xc2\x21\xa6\xd3\xd0\x7e\x41\x16\xae\x75\x37\xb0\xd3\xf8\x05\x3f\xd7\xe3\x10\xba\x51\x50\x8b\x56\x82\x58\xb4\xc6\x89\x46\x81\xd3\x83\x10\x18\x12\x8c\xe0\x31\x0d\x74\x3c\x9e\xc2\xc1\x2e\xf7\x63\xd5\x4e\xaa\x9f\x36\x4a\x12\xd2\x35\x0a\xe8\x41\x51\xf0\xc4\x7a\xf3\x06\x7e\xd6\x72\xc4\xcf\xda\xce\xf0\xb3\xf6\x49\x7e\x2e\xaa\xb6\x7e\x5b\x35\xad\x61\x74\x3e\xaf\x69\x96\xa5\x16\xc8\x65\x64\xb2\x4b\x2e\x93\x07\xe1\x29\x4f\x50\xb5\x3f\x9d\x6d\xf1\x15\x87\x1b\x6a\x8c\x56\xe4\x00\xeb\x56\xfd\x86\x1a\xe3\x82\x50\x4b\xf7\x64\x1d\xd3\x64\xb9\xda\xbb\x9a\xbc\x79\x8c\xa9\xac\xd3\x73\x3c\x40\xba\x97\x7a\x22\xaa\x7b\xe3\x33\x59\x67\xb9\x40\x7e\x5e\xd6\xb1\xa9\xac\xc3\x01\xac\x5b\x0b\x6c\xfd\xe7\xdc\xf3\xe8\xac\x93\xa1\xa1\xbb\xa4\xf7\x9e\xfb\x27\x1e\x23\x62\xfd\x33\x8f\x11\x19\xe7\x79\x8c\x28\xe1\xbe\x3d\xf7\x2c\xc6\x2d\x7a\xe6\xee\xe2\xc4\x6f\xad\xbb\x69\x8c\x29\x8e\x10\x1d\xd4\xdf\x48\x72\xa2\xfe\x46\xd2\xc9\xfa\x7b\xd3\x3a\xaa\xed\x89\x5a\x97\x7e\xd5\x3a\xb4\x12\xc8\xd4\xd0\x24\xc4\xef\x7a\x67\x6a\xf2\x7d\xbc\x1b\xb4\xce\x3e\xfe\x7f\xcf\xbc\xd6\x15\xc9\x54\xfd\xa2\x74\xff\xc0\x0e\x5b\x16\x4e\x1c\xb0\x93\x8f\xea\x3f\xe4\xdb\xeb\x3f\xb9\xb2\x93\x6f\xaf\xff\x0e\x54\x0d\xbf\xfc\xf9\x40\x15\x67\xd6\x03\x65\xbd\x7f\x30\x44\xd1\xfc\x44\xe6\xeb\xaf\xcc\x8f\xd6\x82\x0d\xfe\x5b\x34\xf9\xad\xbe\xbc\x85\xf9\xc3\x47\x93\x7b\xf6\xbc\x1e\xb1\xbe\x6f\x50\x66\xc6\x98\xca\x03\xca\x07\xe7\x73\xa8\x72\xe2\x7c\x0e\x55\x27\xcf\xe7\xb6\x68\xd0\x46\x2f\xb5\xe7\xfd\x96\x07\xc6\xa7\xc9\x77\xfd\x9f\x89\x86\xbb\x4e\x5a\xa2\xa5\xde\xb3\xfe\xb7\x4e\x5a\xd0\xfc\x88\x9f\x16\xcf\xf0\xd3\xd2\x99\xf3\xe3\xeb\x49\xcb\x09\xf4\x40\x63\x54\x68\xf1\x3f\x86\x5e\xb0\x83\xfb\x59\x0c\xe1\x97\xfb\xd9\x1f\xd1\x0b\x5e\x9e\x8d\x5e\xa9\xd2\x89\xc0\xff\x95\x7a\xf3\xc5\x72\x90\x07\x3d\x60\x89\x7b\x3c\xc1\x12\x8f\xfd\xb9\xf5\x2a\x48\x0a\xad\x06\x7f\xd7\xab\xb7\x8e\x31\xc5\x91\xe8\xe1\x80\x23\x31\xe6\x13\x1c\x89\x19\x4f\xed\x53\xd2\xd8\x14\xbf\xd0\x3e\x65\x3b\x9b\x3b\xae\x53\x3f\x8f\x77\x7b\xbd\x3a\x7f\x1f\xe4\x86\x84\xf9\xad\x94\xb7\x8e\x31\x15\x05\x19\xd2\x41\x14\x64\x6c\x27\xa2\x20\xb3\xdc\xa9\x94\x53\x48\xcc\xd6\xca\x0e\x86\x58\x46\xf4\x2b\xcc\x8d\xf4\xde\xa3\xdd\xc4\xa9\xc2\x07\xf7\x5b\x58\xe4\x97\xfb\xad\x1f\x39\x55\xb4\xcd\x71\x6a\x8e\x13\x9a\x37\x25\x2e\xfd\x89\xe7\x27\x04\xbf\x29\x71\x60\x53\x2b\x66\x04\x43\x81\x09\xac\x1a\x06\x0e\x62\x3a\xbe\x0d\x4d\x0e\x38\xda\xac\xea\x7c\xab\x12\x03\x24\x34\x35\x0a\x29\xa4\x40\x0c\xea\x04\x9a\x31\x59\x13\x4a\x2a\x29\xe7\xe0\x99\xc4\x41\x3b\x54\xab\x08\x35\x3a\x54\x42\x82\x96\xcb\x18\xa8\x71\xf7\x48\x55\x4b\x69\xad\x81\x29\x37\x07\xa0\xf8\xbf\x00\x00\x00\xff\xff\xa2\x05\x33\x34\x94\x3a\x00\x00")

func compiledPrototypeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeBin,
		"compiled/Prototype.bin",
	)
}

func compiledPrototypeBin() (*asset, error) {
	bytes, err := compiledPrototypeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Prototype.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x0b\x76\xe2\x3c\x0f\xdd\x92\xde\x96\x97\xe3\xe7\xfe\x97\xf0\x1f\x27\x29\xb4\x4d\x27\xc5\x61\xe0\xe7\xcc\x07\x9c\x39\x0c\x22\xb1\x2c\xdf\xab\x2b\xcb\xa9\x81\x83\x81\x80\x92\x01\x08\x1b\x82\x21\x40\x47\x0d\x06\x00\xac\xa1\x00\xc2\xc9\x57\x04\x10\xe3\xbe\xbd\xd0\x1c\x8c\x01\x39\x78\x56\x47\x59\xfc\x98\x86\xc5\x4a\x55\xb8\x96\xd5\x8a\x1a\x37\xab\xb4\x90\x44\xc3\x6a\xad\xb2\x5a\xb1\x45\xcd\x4d\x74\xb1\x92\xe0\x6a\x25\x8a\xe4\xd5\xf2\x6a\x4d\xb4\x59\xb9\x7a\x09\x75\xb5\x32\xe8\x6a\x65\xd3\xd8\xbd\xd5\xd5\xea\xbe\x59\x3d\x60\x8a\x7d\xbb\xb6\xf6\xd5\x6a\xd5\x8b\x6b\x4c\x8b\x55\x64\x1b\x37\x98\x15\xe9\xbc\xce\x4c\x12\xaf\x56\x87\xda\x45\xb3\xac\xd6\xb6\xc5\xe6\x25\x71\x16\x59\x63\x53\xd9\xa2\x88\xca\x5e\x24\xf3\x6a\x4d\x61\xb3\xb6\x8a\xca\x05\x16\xab\xc1\xe6\xad\xc4\x22\xbd\x08\xae\x56\xdf\xa2\x28\xb5\x52\x8a\xb1\xaf\xd6\x5e\x56\x6b\xf5\xc0\xcc\xa9\x2c\xd6\xc0\x5d\x83\xe6\x81\xa4\x43\xaf\x9a\x59\x1c\x50\xc7\x6a\x8e\xb1\xaf\x76\x85\x65\xdd\x87\x45\x1c\xd8\x80\x1d\x01\x23\x38\xf8\xe0\xc0\x05\xc3\xdf\x5e\x68\x71\x4c\x1b\xc6\xbd\x91\xe2\x32\xc2\x7d\xf7\xeb\xf2\x1e\xb1\xe4\xa4\xa6\x19\xe0\x73\x14\xa6\xfb\x28\x72\x7a\xe1\x28\x3c\xb5\x11\xc5\x92\x71\xe8\xe0\x84\xba\xbe\x1d\x47\x06\x2e\xf7\xe0\x72\xed\x76\x45\x44\xe0\x08\x9d\x3f\x47\xdd\x60\x17\x35\x11\x3f\x26\xea\xe1\x07\xe3\x41\x44\xb1\xd0\xd7\x88\x3e\xee\xf8\xf8\x9c\x88\x8c\xa4\xee\x23\xf3\xf2\x98\xc8\xfe\x18\x51\xca\xdf\x22\x9a\x89\x20\xb5\x5d\x04\x0c\x0f\xc2\xe6\xaf\x30\x32\x27\xdb\xe5\x15\x23\xee\xa3\x10\xfb\xfb\x51\x5c\x66\x51\x19\xbf\xae\xf9\xcc\xa8\x33\xd7\x4e\x60\xc9\x51\xf6\xab\x50\xeb\x73\xd8\x78\xc8\xd0\x86\xb0\xc7\xac\xe5\xdd\x6c\x45\xe0\x85\x99\xd7\x1a\xee\xa2\x10\xd9\xe7\x8f\xf8\x93\xd6\xfc\x63\x66\x08\x56\x4e\x2b\x80\xa4\xbe\x8f\xa0\xc9\xe3\x72\x07\xd1\xf6\x6c\x90\xbe\xaf\xef\x4a\x0f\xa8\xef\x97\x59\x50\xfb\x9a\xc1\x7c\x5d\xb3\x2f\xeb\x47\xdb\x1d\x7f\x5e\x41\xd5\x7d\x7d\xd3\xa4\xaf\xcb\x64\xe4\x52\x76\x08\x68\xe6\x7d\x14\xcd\x1f\x88\x80\x36\xbb\x7b\x6f\x61\xb0\xcf\x3f\x93\x07\xd4\xaf\xcb\xac\xad\xe8\xcb\x29\xbf\xc5\x7d\xfd\xb3\xf6\x80\xfa\xf7\xd7\x56\x71\xf4\x49\x67\x15\x2b\x80\xef\xa2\x0d\xfc\x00\xcd\xbd\xcc\xd6\xb3\xef\xf2\x25\xc8\xbe\x7e\x85\xf4\xc2\xf5\x0b\x13\xc7\xb3\xf9\x36\x62\x2b\xec\x64\x88\x59\xea\x18\x85\x61\x66\x4e\xc6\x98\x3c\x53\x0a\xe4\xec\xbc\x8d\xcf\x9f\x7b\xed\x7b\xfa\x76\xd8\xd8\x03\x02\x8b\x92\x3f\x3e\x23\x9f\x92\xf5\x97\xca\x03\x70\xad\x52\x83\x57\x0b\xeb\x82\x03\x67\xd4\x8d\x8d\x1e\xbf\xd5\x4f\x4d\x1d\xaf\xbf\x26\xd3\x35\x43\x06\x9b\xda\xfa\xbf\xed\xba\xeb\xdb\xd6\xce\x7b\x16\x59\x46\x63\x84\x58\x5d\x5c\xde\xc8\xde\xe2\xe3\x8a\x2c\xfd\x8e\x6c\x0c\xfd\x00\xd9\x18\xf9\x18\xd9\x75\xfc\x61\x27\x70\xc4\xed\xae\x14\x3f\x8f\x79\x55\x2a\xc5\x9f\xd5\x63\x7c\x8e\xef\xf7\xf0\x84\x62\xe3\xd6\x3b\xfd\x2b\x3c\x39\x38\x37\x98\xc1\x37\xd9\x11\xbe\xc9\xcf\xe0\x9b\xe2\xff\x01\x5f\xa4\xaa\x40\xfd\x9f\xd1\x81\xcf\x73\xff\x72\x2a\x7c\x0e\xe7\x6c\x7c\x80\x73\x0e\xe1\x04\xce\xd9\xeb\x9d\x38\x23\xe4\xd4\xef\xa9\xeb\x31\xbb\xf4\x12\xf3\xbb\xae\xdf\xea\x63\x8a\x35\x25\xb4\x03\xd6\x94\x51\xf5\xa7\x59\x53\x92\xcf\xb1\x66\xec\x11\x0d\xa1\xd2\xc2\xb6\x31\x62\xe8\xe0\x85\x43\x4c\xa7\xa1\xfd\x82\x2c\x5c\xfb\x6e\x60\xa7\xf1\x0b\x7e\xee\xc7\x21\x74\xa3\xa0\x16\xad\x04\xb1\x68\x8d\x13\x8d\x06\xa7\x07\x21\x30\x24\x18\xc9\x63\x1a\xe8\xd8\x9f\xc2\xc1\x2e\xf7\x63\xd5\x4e\xaa\x9f\x36\x4a\x12\xd2\x35\x0b\xe8\x41\x59\xf0\xc4\x7e\xf3\x06\x7e\xd6\x72\xc4\xcf\xda\xce\xf0\xb3\xf6\x49\x7e\x2e\xaa\xb6\x7e\x5b\x35\xad\x61\x74\x3e\xaf\x69\x96\xa5\x16\xc8\x65\x54\xb2\x4b\x2d\x93\x07\xe1\x29\x4f\x50\xb5\x3f\x9d\x6d\xf1\x15\x87\x1b\x7a\x8c\x56\xe4\x00\xeb\x56\xfd\x86\x1e\xe3\x82\x50\x4b\xf7\x54\x1d\xd3\x64\xb9\xda\xbb\x9b\xbc\xd9\xc7\x54\xd5\xe9\x39\x1e\x20\xdd\x4b\x3d\x91\xd5\xbd\xf1\x99\xaa\xb3\x3c\x40\x7e\x5e\xd5\xb1\xa9\xaa\xc3\x01\xac\x5b\x0b\x6c\xfd\xe7\xda\xf3\xe8\xaa\x93\xa1\xa1\xbb\xa4\xf7\x9e\xfb\x27\x1e\x23\x62\xfd\x33\x8f\x11\x19\xe7\x79\x8c\x28\xe1\xbe\x3d\xf7\x2c\xc6\x2d\x7a\xe6\xee\xe2\xc4\x6f\xad\xbb\xc9\xc7\x14\x47\x88\x0e\xfa\x6f\x24\x39\xd1\x7f\x23\xe9\x64\xff\xbd\x69\x1d\xd5\xf6\x44\xad\x4b\xbf\x6a\x1d\x5a\x09\x64\x6a\x68\x12\xe2\x77\xbd\x33\x35\xf9\xee\xef\x06\xad\xb3\x8f\xbf\xef\x99\xd7\xba\x22\x99\xaa\x5f\x94\xee\x1f\xd8\x61\xcb\xc2\x89\x03\x76\xf2\x51\xff\x87\x7c\x7b\xff\x27\x57\x76\xf2\xed\xfd\xdf\x81\xaa\xe1\x97\x7f\x1f\xa8\xe2\xcc\x7a\xa0\xac\xcf\x1f\x0c\x51\x34\x3f\x91\xf9\xfa\x2b\xf3\xa3\xb5\x60\x83\xff\x16\x4d\x7e\xeb\x2f\x6f\x61\xfe\x88\xd1\xe4\x9e\x3d\xaf\x47\xac\xef\x27\x28\x33\x3e\xa6\xea\x80\xf2\xc1\xf9\x1c\xaa\x9c\x38\x9f\x43\xd5\xc9\xf3\xb9\x2d\x1b\xb4\xd1\x4b\xed\x79\xbf\xd5\x81\xf1\x69\xf2\x5d\xff\x67\xb2\xe1\xae\x93\x96\x68\xa9\xf7\xac\xff\xad\x93\x16\x34\x3f\xe2\xa7\xc5\x33\xfc\xb4\x74\xe6\xfc\xf8\x7a\xd2\x72\x02\x3d\xd0\x18\x15\x5a\xfc\x8f\xa1\x17\xec\xe0\xf9\x2c\x86\xf0\xcb\xf3\xd9\x1f\xd1\x0b\x5e\x9e\x8d\x5e\xa9\xd2\x89\xc0\xff\x95\x7e\xf3\xc5\x6a\x90\x07\x3d\x60\x89\x7b\x3c\xc1\x12\x8f\xfd\xb9\xfd\x2a\x48\x0a\xad\x06\x7f\xf7\xab\xb7\xfa\x98\xe2\x48\xf4\x70\xc0\x91\x18\xf3\x09\x8e\xc4\x8c\xa7\xf6\x29\x69\x6c\x8a\x5f\x68\x9f\xb2\x9d\xcd\x1d\xf7\xa9\x9f\xfd\xdd\xde\xaf\xce\x3f\x0f\x72\x43\xc2\xfc\x56\xca\x5b\x7d\x4c\x65\x41\x86\x74\x90\x05\x19\xdb\x89\x2c\xc8\x2c\x77\x2a\xe5\x14\x12\xb3\xbd\xb2\x83\x21\x96\x91\xfd\x0a\x73\x9e\xde\x7b\xb4\x9b\x38\x55\xf8\xe0\xf9\x16\x16\xf9\xe5\xf9\xd6\x8f\x9c\x2a\xda\xe6\x38\x35\xc7\x09\xcd\x9b\x12\x97\xfe\xc4\xf3\x13\x82\xdf\x94\x38\xb0\xa9\x15\x33\x82\xa1\xc0\x04\x56\x0d\x03\x07\x31\x1d\xdf\x86\x26\x07\x1c\xf7\xac\xea\x7c\xab\x12\x03\x24\x34\x35\x0a\x29\xa4\x40\x0c\xea\x04\x9a\x31\x59\x13\x4a\x2a\x29\xe7\xe0\x99\xc4\x41\x3b\x54\xab\x08\x35\x3a\x54\x42\x82\x96\xcb\x70\xd4\xb8\x7b\xa4\xaa\xa5\xb4\xd6\xc0\x94\x9b\x03\x50\xfc\x5f\x00\x00\x00\xff\xff\x8f\xb1\xa4\xbe\x54\x3a\x00\x00")

func compiledPrototypeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeBinRuntime,
		"compiled/Prototype.bin-runtime",
	)
}

func compiledPrototypeBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Prototype.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeeventAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\x3f\x6b\x84\x40\x10\xc5\xbf\xcb\x90\xd2\xca\x90\x14\xb6\xa9\x03\x21\x21\x95\x58\xcc\xb9\x73\xb0\xa0\xb3\xb2\x33\xeb\xdd\x22\x7e\xf7\xe3\xe4\xf0\x1f\xda\x78\xd7\xee\xce\xfb\xbd\x1f\x2f\xef\x00\xd9\x71\xac\x5d\x10\xc8\xce\x58\x09\x25\x60\xb9\x09\x2a\x90\xe5\x1d\x58\x36\x74\x25\x33\x7e\x31\xd6\x04\x19\x30\x5d\xbe\x51\x94\x3c\x24\xa0\xb1\xb9\x3f\xa1\x31\x9e\x44\xa0\x2f\xc6\xab\xb7\xf5\x0d\xb5\xc4\x0a\x7d\x72\xac\xb4\xf4\x64\xac\x4e\xb4\x60\x59\xd3\x8f\xcf\x81\xb7\x13\xf1\x54\xba\x96\x7c\xfc\x45\xa5\x8d\xe0\x4c\xf5\x6b\x80\xff\x54\xc8\xc7\x75\xd5\x87\xa9\x3a\xc8\xe6\x3a\xfb\xae\x58\xaa\x75\xb3\xf6\x53\x54\x92\xf7\x74\x61\xf9\x2f\xcf\xcc\xb9\xf0\x93\xc6\xb1\xb8\xd7\x2b\xfe\xad\xb9\x0f\xcb\xe2\x16\x00\x00\xff\xff\xa4\xcf\xdd\xbb\x6b\x02\x00\x00")

func compiledPrototypeeventAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeeventAbi,
		"compiled/PrototypeEvent.abi",
	)
}

func compiledPrototypeeventAbi() (*asset, error) {
	bytes, err := compiledPrototypeeventAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeEvent.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeeventBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcb\xbb\x91\x45\x31\x08\x83\xe1\x96\xc4\x1b\xca\x01\xfb\xd0\x7f\x09\x3b\x0e\x76\x6e\xa2\x40\xf3\xfd\x8e\x84\x43\x61\x2c\x9a\x20\x73\x60\x2d\x1c\x40\x62\xaf\x8d\xc1\x21\xf6\x0c\xdd\xf7\x4a\xbd\x5d\x01\x7e\xe5\xbf\x06\x9a\xdc\x9c\xa3\xa3\x83\x05\x96\x8c\x51\x3d\xdf\x12\xe7\x1a\x59\x6c\xf2\x9d\x95\xd1\x5a\xa5\xca\xfd\x94\x3b\xf2\x66\xf2\x91\xa4\x98\x89\x5d\x2d\x3b\xb7\xbe\xe0\xa6\xd3\x07\xe0\xfa\x0b\x00\x00\xff\xff\x47\x62\x94\x68\xa4\x00\x00\x00")

func compiledPrototypeeventBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeeventBin,
		"compiled/PrototypeEvent.bin",
	)
}

func compiledPrototypeeventBin() (*asset, error) {
	bytes, err := compiledPrototypeeventBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeEvent.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeeventBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x01\x01\x00\x21\x08\x03\xc0\x4a\x63\x0f\x32\xe3\x20\x4a\xff\x08\x7f\x0b\xc2\x82\x23\xb8\x00\x08\x73\x81\xb2\x15\x8b\x59\x59\xc9\x0f\x21\xe2\xb8\xf7\x1b\xa3\x26\x2c\x72\xc4\x7b\xe6\x3b\xbe\xc7\x6d\x6b\x9e\xb3\x52\x57\x62\x7f\xb2\x3c\x27\x67\x7c\x47\xdf\xfd\x92\x65\x5d\x0d\x70\xff\x01\x00\x00\xff\xff\x00\x46\xa8\x6f\x6a\x00\x00\x00")

func compiledPrototypeeventBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeeventBinRuntime,
		"compiled/PrototypeEvent.bin-runtime",
	)
}

func compiledPrototypeeventBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypeeventBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeEvent.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypenativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4f\xeb\x9b\x40\x10\xfd\x2e\x7b\xf6\xf4\x2b\xed\x21\xb7\x36\xd0\x5b\x4a\x69\xe9\x29\x84\x32\xae\x93\x74\xc9\x3a\x2b\x3b\xb3\x06\x09\xfd\xee\xc5\x80\x51\xaa\x54\x4d\xfd\x93\x1c\x85\x99\xf1\x3d\xde\xec\x7b\xb3\xbf\x2a\xed\x88\x05\x48\xd4\xe6\x08\x96\x31\x52\x86\xb2\x20\xac\x36\xfb\xab\x22\x48\x51\x6d\x14\xa3\x3d\xaa\x48\x49\x91\x95\x5f\x90\x24\x1e\x99\xd5\xef\xa8\x2e\xc8\x1c\xb1\xf3\x1d\x35\x87\xa8\xaa\x21\x10\x93\xe3\xcf\x40\x75\xb1\x0b\xf2\xf7\xaf\xea\x11\xb1\x73\xf6\xd6\x9f\x41\x01\xb1\xc5\x3b\x3e\x16\x10\xdc\x05\x81\xd8\x58\x23\x45\x39\xda\x51\x55\x74\x6f\x3f\x06\xd2\x62\x1c\xdd\x60\xd6\x1c\xc5\x87\x31\x14\x5b\xf0\x53\x60\xc1\x5e\xec\xcd\xfe\x7e\xf8\xb9\xc1\xcb\xd4\xc0\x6b\x6d\x62\xeb\xf4\xf9\x4b\x48\x63\x6c\xe8\x13\x0c\xc9\xbb\xb7\x0e\x7e\x48\xe8\x4f\xc5\x47\xf9\x54\x76\xf5\xd1\x2c\xa7\xbc\xbd\xff\x30\x25\xcd\xc7\x77\x90\xf0\xb2\xab\xc4\xe9\x95\x91\x51\x76\x6d\x25\x57\x5e\xb6\x9a\xcb\x19\x8b\xc6\x43\x28\x04\xb9\x53\x2c\x16\xe7\xe1\x84\x9f\x07\x3c\xa6\xc6\x8c\xb5\x17\x32\xf0\x30\x8d\x0c\xff\xe0\xfe\xa7\x36\xc2\x26\xe6\xa0\xd5\x42\xfd\x0b\x78\xeb\x12\x7c\x35\xd8\x3a\x78\x8f\x24\xdf\x87\x79\xf3\x33\xf9\xdb\x88\xec\x31\x3c\x90\xdf\xd4\xea\x2c\x92\xac\x8c\x16\xf5\x50\x05\xe7\x49\xd7\xc7\x79\x6a\x8f\x89\x91\x8e\x68\xa9\x4b\x3c\x6a\x97\xa3\x2f\xbe\x81\x60\x77\x06\xb5\x3c\x7e\x7b\x9b\xfa\xd5\x02\xcd\xea\xf3\x8f\xd3\x1e\xea\x85\x90\x24\x13\x9b\xe1\x53\xd1\xf3\x98\xba\x1c\xd7\x63\xf8\xdf\xee\xd9\xbd\x67\xff\x3a\x99\xa2\x65\xee\xa9\x85\xce\xc6\x18\x2c\x90\xc6\xf5\xee\xc6\xd9\xaf\x91\xb2\x6e\x5b\x99\xd4\xeb\x5c\xc5\x63\xf2\x63\xe1\xe4\x38\xfc\x09\x00\x00\xff\xff\xb1\x59\x01\xf8\x7d\x0e\x00\x00")

func compiledPrototypenativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypenativeAbi,
		"compiled/PrototypeNative.abi",
	)
}

func compiledPrototypenativeAbi() (*asset, error) {
	bytes, err := compiledPrototypenativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypenativeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledPrototypenativeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypenativeBin,
		"compiled/PrototypeNative.bin",
	)
}

func compiledPrototypenativeBin() (*asset, error) {
	bytes, err := compiledPrototypenativeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeNative.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypenativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledPrototypenativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypenativeBinRuntime,
		"compiled/PrototypeNative.bin-runtime",
	)
}

func compiledPrototypenativeBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypenativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Executor.abi": compiledExecutorAbi,
	"compiled/Executor.bin": compiledExecutorBin,
	"compiled/Executor.bin-runtime": compiledExecutorBinRuntime,
	"compiled/Extension.abi": compiledExtensionAbi,
	"compiled/Extension.bin": compiledExtensionBin,
	"compiled/Extension.bin-runtime": compiledExtensionBinRuntime,
	"compiled/ExtensionNative.abi": compiledExtensionnativeAbi,
	"compiled/ExtensionNative.bin": compiledExtensionnativeBin,
	"compiled/ExtensionNative.bin-runtime": compiledExtensionnativeBinRuntime,
	"compiled/IMeterNative.abi": compiledImeternativeAbi,
	"compiled/IMeterNative.bin": compiledImeternativeBin,
	"compiled/IMeterNative.bin-runtime": compiledImeternativeBinRuntime,
	"compiled/Measure.abi": compiledMeasureAbi,
	"compiled/Measure.bin": compiledMeasureBin,
	"compiled/Measure.bin-runtime": compiledMeasureBinRuntime,
	"compiled/Meter.abi": compiledMeterAbi,
	"compiled/Meter.bin": compiledMeterBin,
	"compiled/Meter.bin-runtime": compiledMeterBinRuntime,
	"compiled/MeterERC20.abi": compiledMetererc20Abi,
	"compiled/MeterERC20.bin": compiledMetererc20Bin,
	"compiled/MeterERC20.bin-runtime": compiledMetererc20BinRuntime,
	"compiled/MeterGov.abi": compiledMetergovAbi,
	"compiled/MeterGov.bin": compiledMetergovBin,
	"compiled/MeterGov.bin-runtime": compiledMetergovBinRuntime,
	"compiled/MeterGovERC20.abi": compiledMetergoverc20Abi,
	"compiled/MeterGovERC20.bin": compiledMetergoverc20Bin,
	"compiled/MeterGovERC20.bin-runtime": compiledMetergoverc20BinRuntime,
	"compiled/MeterNative.abi": compiledMeternativeAbi,
	"compiled/MeterNative.bin": compiledMeternativeBin,
	"compiled/MeterNative.bin-runtime": compiledMeternativeBinRuntime,
	"compiled/NewMeterNative.abi": compiledNewmeternativeAbi,
	"compiled/NewMeterNative.bin": compiledNewmeternativeBin,
	"compiled/NewMeterNative.bin-runtime": compiledNewmeternativeBinRuntime,
	"compiled/Params.abi": compiledParamsAbi,
	"compiled/Params.bin": compiledParamsBin,
	"compiled/Params.bin-runtime": compiledParamsBinRuntime,
	"compiled/ParamsNative.abi": compiledParamsnativeAbi,
	"compiled/ParamsNative.bin": compiledParamsnativeBin,
	"compiled/ParamsNative.bin-runtime": compiledParamsnativeBinRuntime,
	"compiled/Prototype.abi": compiledPrototypeAbi,
	"compiled/Prototype.bin": compiledPrototypeBin,
	"compiled/Prototype.bin-runtime": compiledPrototypeBinRuntime,
	"compiled/PrototypeEvent.abi": compiledPrototypeeventAbi,
	"compiled/PrototypeEvent.bin": compiledPrototypeeventBin,
	"compiled/PrototypeEvent.bin-runtime": compiledPrototypeeventBinRuntime,
	"compiled/PrototypeNative.abi": compiledPrototypenativeAbi,
	"compiled/PrototypeNative.bin": compiledPrototypenativeBin,
	"compiled/PrototypeNative.bin-runtime": compiledPrototypenativeBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Executor.abi": &bintree{compiledExecutorAbi, map[string]*bintree{}},
		"Executor.bin": &bintree{compiledExecutorBin, map[string]*bintree{}},
		"Executor.bin-runtime": &bintree{compiledExecutorBinRuntime, map[string]*bintree{}},
		"Extension.abi": &bintree{compiledExtensionAbi, map[string]*bintree{}},
		"Extension.bin": &bintree{compiledExtensionBin, map[string]*bintree{}},
		"Extension.bin-runtime": &bintree{compiledExtensionBinRuntime, map[string]*bintree{}},
		"ExtensionNative.abi": &bintree{compiledExtensionnativeAbi, map[string]*bintree{}},
		"ExtensionNative.bin": &bintree{compiledExtensionnativeBin, map[string]*bintree{}},
		"ExtensionNative.bin-runtime": &bintree{compiledExtensionnativeBinRuntime, map[string]*bintree{}},
		"IMeterNative.abi": &bintree{compiledImeternativeAbi, map[string]*bintree{}},
		"IMeterNative.bin": &bintree{compiledImeternativeBin, map[string]*bintree{}},
		"IMeterNative.bin-runtime": &bintree{compiledImeternativeBinRuntime, map[string]*bintree{}},
		"Measure.abi": &bintree{compiledMeasureAbi, map[string]*bintree{}},
		"Measure.bin": &bintree{compiledMeasureBin, map[string]*bintree{}},
		"Measure.bin-runtime": &bintree{compiledMeasureBinRuntime, map[string]*bintree{}},
		"Meter.abi": &bintree{compiledMeterAbi, map[string]*bintree{}},
		"Meter.bin": &bintree{compiledMeterBin, map[string]*bintree{}},
		"Meter.bin-runtime": &bintree{compiledMeterBinRuntime, map[string]*bintree{}},
		"MeterERC20.abi": &bintree{compiledMetererc20Abi, map[string]*bintree{}},
		"MeterERC20.bin": &bintree{compiledMetererc20Bin, map[string]*bintree{}},
		"MeterERC20.bin-runtime": &bintree{compiledMetererc20BinRuntime, map[string]*bintree{}},
		"MeterGov.abi": &bintree{compiledMetergovAbi, map[string]*bintree{}},
		"MeterGov.bin": &bintree{compiledMetergovBin, map[string]*bintree{}},
		"MeterGov.bin-runtime": &bintree{compiledMetergovBinRuntime, map[string]*bintree{}},
		"MeterGovERC20.abi": &bintree{compiledMetergoverc20Abi, map[string]*bintree{}},
		"MeterGovERC20.bin": &bintree{compiledMetergoverc20Bin, map[string]*bintree{}},
		"MeterGovERC20.bin-runtime": &bintree{compiledMetergoverc20BinRuntime, map[string]*bintree{}},
		"MeterNative.abi": &bintree{compiledMeternativeAbi, map[string]*bintree{}},
		"MeterNative.bin": &bintree{compiledMeternativeBin, map[string]*bintree{}},
		"MeterNative.bin-runtime": &bintree{compiledMeternativeBinRuntime, map[string]*bintree{}},
		"NewMeterNative.abi": &bintree{compiledNewmeternativeAbi, map[string]*bintree{}},
		"NewMeterNative.bin": &bintree{compiledNewmeternativeBin, map[string]*bintree{}},
		"NewMeterNative.bin-runtime": &bintree{compiledNewmeternativeBinRuntime, map[string]*bintree{}},
		"Params.abi": &bintree{compiledParamsAbi, map[string]*bintree{}},
		"Params.bin": &bintree{compiledParamsBin, map[string]*bintree{}},
		"Params.bin-runtime": &bintree{compiledParamsBinRuntime, map[string]*bintree{}},
		"ParamsNative.abi": &bintree{compiledParamsnativeAbi, map[string]*bintree{}},
		"ParamsNative.bin": &bintree{compiledParamsnativeBin, map[string]*bintree{}},
		"ParamsNative.bin-runtime": &bintree{compiledParamsnativeBinRuntime, map[string]*bintree{}},
		"Prototype.abi": &bintree{compiledPrototypeAbi, map[string]*bintree{}},
		"Prototype.bin": &bintree{compiledPrototypeBin, map[string]*bintree{}},
		"Prototype.bin-runtime": &bintree{compiledPrototypeBinRuntime, map[string]*bintree{}},
		"PrototypeEvent.abi": &bintree{compiledPrototypeeventAbi, map[string]*bintree{}},
		"PrototypeEvent.bin": &bintree{compiledPrototypeeventBin, map[string]*bintree{}},
		"PrototypeEvent.bin-runtime": &bintree{compiledPrototypeeventBinRuntime, map[string]*bintree{}},
		"PrototypeNative.abi": &bintree{compiledPrototypenativeAbi, map[string]*bintree{}},
		"PrototypeNative.bin": &bintree{compiledPrototypenativeBin, map[string]*bintree{}},
		"PrototypeNative.bin-runtime": &bintree{compiledPrototypenativeBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

